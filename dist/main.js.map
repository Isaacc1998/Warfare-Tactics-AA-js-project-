{"version":3,"file":"main.js","mappings":"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","sources":["webpack://Warfare-Tactics-AA-js-project/./src/atGunner.js","webpack://Warfare-Tactics-AA-js-project/./src/board.js","webpack://Warfare-Tactics-AA-js-project/./src/game.js","webpack://Warfare-Tactics-AA-js-project/./src/levels.js","webpack://Warfare-Tactics-AA-js-project/./src/player.js","webpack://Warfare-Tactics-AA-js-project/./src/rifleman.js","webpack://Warfare-Tactics-AA-js-project/./src/sniper.js","webpack://Warfare-Tactics-AA-js-project/./src/unit.js","webpack://Warfare-Tactics-AA-js-project/webpack/bootstrap","webpack://Warfare-Tactics-AA-js-project/./src/index.js"],"sourcesContent":["const Unit = require(\"./unit\");\n\nclass AtGunner extends Unit {\n  constructor(name, owner = null) {\n    super(\"atGunner\", 11, 8, 1, 3, 2);\n    this.name = name;\n    this.owner = owner;\n  }\n}\n\nmodule.exports = AtGunner;\n","const Player = require(\"./player\");\nconst Unit = require(\"./unit\");\nconst Levels = require(\"./levels\");\nlet count = document.querySelector(\".tCount\");\nlet name = document.querySelector(\".name\");\nclass Board {\n  //edit\n  constructor(grid, playerUnits, enemyUnits) {\n    this.grid = grid;\n    //this.objectGrid = this.createObjectGrid();\n    this.units = playerUnits;\n    this.enemies = enemyUnits;\n    this.characterKey = {};\n    this.enemyNames = [];\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemyNames.push(this.enemies[i].name);\n    }\n    this.unitOrder = this.setTurnOrder();\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      this.characterKey[this.unitOrder[i].name] = this.unitOrder[i];\n    }\n    console.log(this.characterKey);\n    this.currentTurn = 0;\n    this.unitTurn = this.unitOrder[this.currentTurn % this.unitOrder.length];\n    this.unitGrid = new Array(10);\n    for (let i = 0; i < this.unitGrid.length; i++) {\n      this.unitGrid[i] = new Array(10);\n    }\n    for (let i = 0; i < this.unitGrid.length; i++) {\n      for (let j = 0; j < this.unitGrid[i].length; j++) {\n        this.unitGrid[i][j] = 0;\n      }\n    }\n    this.battlefield = this.drawBattlefield(0, 0, \"#444\");\n    this.cellSize = 67;\n    this.padding = 2;\n    this.setPos();\n    this.tiles = [];\n    this.fillTiles();\n    this.unitImages = [];\n    this.generateUnitImages();\n    //this.unitContexts = this.createUnitCanvas();\n    this.generateHTMLsquares();\n    this.generateHTMLunits();\n    this.currentMoveCount = this.unitTurn.move;\n  }\n\n  setCurrentMoveCount() {\n    this.currentMoveCount = this.unitTurn.move;\n  }\n\n  attack(target) {\n    let attackedUnit = this.characterKey[target];\n    if (this.inRange(attackedUnit)) {\n      console.log(\"before damge\");\n      attackedUnit.takeDamage(this.unitTurn.attack);\n      if (!attackedUnit.isAlive()) {\n        this.removeUnit(attackedUnit);\n      }\n    }\n  }\n\n  inRange(target) {\n    let range = this.unitTurn.range;\n    console.log(target);\n    console.log(this.unitTurn);\n    let xDif = target.pos[0] - this.unitTurn.pos[0];\n    let yDif = target.pos[1] - this.unitTurn.pos[1];\n    while (xDif !== 0) {\n      if (xDif > 0) {\n        xDif--;\n        range--;\n      } else if (xDif < 0) {\n        xDif++;\n        range--;\n      }\n    }\n\n    while (yDif !== 0) {\n      if (yDif > 0) {\n        yDif--;\n        range--;\n      } else if (yDif < 0) {\n        yDif++;\n        range--;\n      }\n    }\n    if (range < 0) {\n      return false;\n    }\n    return true;\n  }\n\n  findClickedUnit(name) {\n    console.log(name);\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      if (this.unitOrder[i].name === name) {\n        let alliance;\n        let type;\n        if (this.unitOrder[i].owner === null) {\n          alliance = \"Player 2\";\n        } else {\n          alliance = \"Player 1\";\n        }\n        if (this.unitOrder[i].type === \"atGunner\") {\n          type = \"RPG\";\n        } else {\n          type = this.unitOrder[i].type;\n        }\n        return [\n          this.unitOrder[i].health,\n          this.unitOrder[i].attack,\n          this.unitOrder[i].defense,\n          this.unitOrder[i].name,\n          type,\n          alliance,\n        ];\n      }\n    }\n  }\n\n  savePositions() {\n    for (let row = 0; row < this.unitGrid.length; row++) {\n      for (let col = 0; col < this.unitGrid[row].length; col++) {\n        if (this.unitGrid[row][col] instanceof Unit) {\n          let unitClick = document.getElementById(\n            `${this.unitGrid[row][col].name}`\n          );\n          unitClick.style.top = row * (this.cellSize + this.padding);\n          unitClick.style.left = col * (this.cellSize + this.padding);\n        }\n      }\n    }\n  }\n\n  generateUnitImages() {\n    let rifleman = new Image();\n    rifleman.src = \"../soldiers/Hero_Rifle.png\";\n    this.unitImages.push(rifleman);\n\n    let sniper = new Image();\n    sniper.src = \"../soldiers/Hero_MachineGun.png\";\n    this.unitImages.push(sniper);\n\n    let launcher = new Image();\n    launcher.src = \"../soldiers/Hero_GrenadeLauncher.png\";\n    this.unitImages.push(launcher);\n  }\n\n  fillTiles() {\n    let grass = new Image();\n    grass.src = \"../tiles/Tiles/_0003_GrassTiles.png\";\n    this.tiles.push(grass);\n\n    let dirt = new Image();\n    dirt.src = \"../tiles/Tiles/_0001_DirtTiles.png\";\n    this.tiles.push(dirt);\n\n    let crate = new Image();\n    crate.src = \"../tiles/crates/TDS04_0018_Box1.png\";\n    this.tiles.push(crate);\n  }\n\n  setPos() {\n    for (let i = 0; i < this.units.length; i++) {\n      this.units[i].setPiece([0, i + 2]);\n      this.unitGrid[0][i + 2] = this.units[i];\n    }\n\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemies[i].setPiece([this.unitGrid.length - 2, i + 4]);\n      this.unitGrid[this.unitGrid.length - 2][i + 4] = this.enemies[i];\n    }\n  }\n\n  isValidMove(x, y) {\n    if (\n      (this.grid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 0 ||\n        this.grid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 1) &&\n      this.unitGrid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 0\n    ) {\n      return true;\n    }\n    //check starting position of units\n\n    return false;\n  }\n\n  updateGrid(x, y, value) {\n    this.unitGrid[x][y] = value;\n  }\n\n  moveunit = ({ keyCode }) => {\n    if (keyCode === 37) {\n      if (this.isValidMove(-1, 0)) {\n        this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n        this.updateGrid(\n          this.unitTurn.pos[0],\n          this.unitTurn.pos[1] - 1,\n          this.unitTurn\n        );\n        this.unitTurn.pos[1]--;\n        this.currentMoveCount--;\n      }\n    } else if (keyCode === 39) {\n      if (this.isValidMove(1, 0)) {\n        this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n        this.updateGrid(\n          this.unitTurn.pos[0],\n          this.unitTurn.pos[1] + 1,\n          this.unitTurn\n        );\n        this.unitTurn.pos[1]++;\n        this.currentMoveCount--;\n      }\n    } else if (keyCode === 38) {\n      if (this.isValidMove(0, -1)) {\n        this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n        this.updateGrid(\n          this.unitTurn.pos[0] - 1,\n          this.unitTurn.pos[1],\n          this.unitTurn\n        );\n        this.unitTurn.pos[0]--;\n        this.currentMoveCount--;\n      }\n    } else if (keyCode === 40) {\n      if (this.isValidMove(0, 1)) {\n        this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n        this.updateGrid(\n          this.unitTurn.pos[0] + 1,\n          this.unitTurn.pos[1],\n          this.unitTurn\n        );\n        this.unitTurn.pos[0]++;\n        this.currentMoveCount--;\n      }\n    }\n    if (this.currentMoveCount === 0) {\n      document.removeEventListener(\"keydown\", this.moveunit);\n      let counter = document.getElementById(\"moveCounter\");\n      counter.style.display = \"none\";\n      //add moveOptions\n      let moveOptions = document.getElementsByClassName(\"moveB\");\n      for (let i = 0; i < moveOptions.length; i++) {\n        moveOptions[i].style.display = \"block\";\n      }\n      move.style.display = \"none\";\n      return;\n    }\n    let counter = document.getElementById(\"moveCounter\");\n    counter.textContent = `Moves Left: ${this.currentMoveCount}`;\n  };\n\n  getCenter(w, h) {\n    return {\n      x: window.innerWidth / 2 - w / 2 + \"px\",\n      y: window.innerHeight / 2 - h / 2 + \"px\",\n    };\n  }\n\n  createUnitCanvas() {\n    let arr = [];\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      let unit = document.createElement(\"canvas\");\n      unit.id = `${this.unitOrder[i].name}`;\n      let unitContext = unit.getContext(\"2d\");\n\n      document.body.appendChild(unit);\n      let container = document.getElementById(\"container\");\n      container.appendChild(unit);\n      arr.push(unitContext);\n    }\n    return arr;\n  }\n\n  drawBattlefield(w, h, color = \"#949494\") {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.id = \"battle\";\n    this.context = this.canvas.getContext(\"2d\");\n    // this.canvas.style.width = 680;\n    // this.canvas.style.height = 680;\n    this.canvas.style.display = \"inline-block\";\n    this.canvas.style.position = \"relative\";\n    this.canvas.style.background = color;\n    this.canvas.style.right = \"190\";\n    this.canvas.style.bottom = \"686\";\n\n    document.body.appendChild(this.canvas);\n    let container = document.getElementById(\"container\");\n    container.appendChild(this.canvas);\n\n    return this.context;\n  }\n\n  generateHTMLsquares() {\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        let square = document.createElement(\"div\");\n        square.id = `${this.grid[row][col]}`;\n        square.className = \"square\";\n        square.style.position = \"absolute\";\n        square.style.top = row * (this.cellSize + this.padding);\n        square.style.left = col * (this.cellSize + this.padding);\n        square.style.width = this.cellSize;\n        square.style.height = this.cellSize;\n        // document.body.appendChild(square);\n        square.style.zIndex = 100;\n        // this.battlefield.canvas.appendChild(square);\n        let squares = document.getElementById(\"squares\");\n        squares.appendChild(square);\n      }\n    }\n  }\n\n  generateHTMLunits() {\n    for (let row = 0; row < this.unitGrid.length; row++) {\n      for (let col = 0; col < this.unitGrid[row].length; col++) {\n        if (this.unitGrid[row][col] instanceof Unit) {\n          let unitClick = document.createElement(\"div\");\n          unitClick.id = `${this.unitGrid[row][col].name}`;\n          unitClick.className = \"unit\";\n          unitClick.style.position = \"absolute\";\n          unitClick.style.top = row * (this.cellSize + this.padding);\n          unitClick.style.left = col * (this.cellSize + this.padding);\n          unitClick.style.width = this.cellSize;\n          unitClick.style.height = this.cellSize;\n          unitClick.style.zIndex = 101;\n          let squares = document.getElementById(\"squares\");\n          squares.appendChild(unitClick);\n        }\n      }\n    }\n  }\n\n  // renderUnits() {\n  //     for (let i = 0; i < this.unitOrder.length; i++) {\n  //         let unitContext = this.unitContexts[i];\n\n  //         const w = (this.cellSize + this.padding) * this.grid[0].length - (this.padding);\n  //         const h = (this.cellSize + this.padding) * this.grid.length - (this.padding);\n\n  //         unitContext.canvas.width = w;\n  //         unitContext.canvas.height = h;\n\n  //         const center = this.getCenter(w, h);\n  //         unitContext.canvas.style.marginLeft = center.x\n  //         unitContext.canvas.style.marginTop = center.y;\n\n  //         let image;\n  //         if (this.unitOrder[i].type === \"rifleman\") {\n  //             image = this.unitImages[0];\n  //         } else if (this.unitOrder[i].type === \"sniper\") {\n  //             image = this.unitImages[1];\n  //         } else if (this.unitOrder[i].type === \"atGunner\") {\n  //             image = this.unitImages[2];\n  //         }\n\n  //         unitContext.drawImage(image, 8, 8, 48, 48, this.unitOrder[i].pos[1] * (this.cellSize + this.padding), this.unitOrder[i].pos[0] * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n  //     }\n  // }\n\n  render() {\n    const w =\n      (this.cellSize + this.padding) * this.grid[0].length - this.padding;\n    const h = (this.cellSize + this.padding) * this.grid.length - this.padding;\n\n    this.battlefield.canvas.width = w;\n    this.battlefield.canvas.height = h;\n\n    const center = this.getCenter(w, h);\n    this.battlefield.canvas.style.marginLeft = center.x;\n    this.battlefield.canvas.style.marginTop = center.y;\n\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        const val = this.grid[row][col];\n\n        let image;\n        let sx = 0;\n        let sy = 0;\n        if (val === 0) {\n          image = this.tiles[0];\n          sx = 144;\n          sy = 144;\n        } else if (val === 1) {\n          image = this.tiles[1];\n          sx = 144;\n          sy = 144;\n        } else if (val === 3) {\n          image = this.tiles[2];\n          sx = 1;\n          sy = 0;\n        }\n\n        //drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)\n        this.battlefield.drawImage(\n          image,\n          sx,\n          sy,\n          30,\n          30,\n          col * (this.cellSize + this.padding),\n          row * (this.cellSize + this.padding),\n          this.cellSize,\n          this.cellSize\n        );\n        //create corresponding html box element\n        //let boxElement = document.createElement('div');\n        // this.battlefield.canvas.style.width = this.cellSize;\n        // this.battlefield.canvas.style.height = this.cellSize;\n        let x;\n        let y;\n        let image2;\n        if (this.unitGrid[row][col] instanceof Unit) {\n          x = this.unitGrid[row][col].pos[1];\n          y = this.unitGrid[row][col].pos[0];\n          if (this.unitGrid[row][col].type === \"rifleman\") {\n            image2 = this.unitImages[0];\n          } else if (this.unitGrid[row][col].type === \"sniper\") {\n            image2 = this.unitImages[1];\n          } else if (this.unitGrid[row][col].type === \"atGunner\") {\n            image2 = this.unitImages[2];\n          }\n          this.battlefield.drawImage(\n            image2,\n            8,\n            8,\n            48,\n            48,\n            col * (this.cellSize + this.padding),\n            row * (this.cellSize + this.padding),\n            this.cellSize,\n            this.cellSize\n          );\n        }\n        // unitContext.drawImage(image, 8, 8, 48, 48, this.unitOrder[i].pos[1] * (this.cellSize + this.padding), this.unitOrder[i].pos[0] * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n\n        // this.battlefield.fillStyle = color;\n        // this.battlefield.fillRect(col * (this.cellSize + this.padding),\n        // row * (this.cellSize + this.padding),\n        // this.cellSize, this.cellSize);\n      }\n    }\n  }\n\n  renderOptions() {\n    let context = document.getElementById(\"\");\n    let button1 = document.createElement(\"button\");\n    let button2 = document.createElement(\"button\");\n    let button3 = document.createElement(\"button\");\n    let button4 = document.createElement(\"button\");\n\n    button1.class = \"move\";\n    button2.class = \"attack\";\n    button3.class = \"items\";\n    button4.class = \"defend\";\n\n    button1.style.display = \"block\";\n  }\n\n  draw(name) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.id = name;\n    let w = canvas.width;\n    let h = canvas.height;\n    let context = canvas.getContext(\"2d\");\n    document.body.appendChild(canvas);\n    //canvas.style.display = \"none\";\n    if (name === \"moveOptions\") {\n      this.renderOptions();\n    }\n    return this.context;\n  }\n\n  drawSquare(x, y, w, h, color) {\n    this.battlefieldContext.lineWidth = 1;\n    this.battlefieldContext.fillStyle = color;\n    this.battlefieldContext.fillRect(x, y, w, h);\n    this.battlefieldContext.strokeRect(x, y, w, h);\n  }\n\n  drawGrid() {\n    let x = 0;\n    let y = 0;\n    let w = this.squareSize;\n    let h = this.squareSize;\n\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid.length; j++) {\n        if (this.grid[i][j] === 0) {\n          this.drawSquare(x, y, w, h, \"#d3d3d2\");\n        } else {\n          this.drawSquare(x, y, w, h, \"#111\");\n        }\n        x += w;\n      }\n      y += h;\n      x = 0;\n    }\n  }\n\n  enemyAction() {\n    //ai functionality\n    //has to click end turn button\n  }\n\n  nextTurn() {\n    if (this.gameEnd()) {\n      //victory or loss screen\n    }\n    this.currentTurn++;\n    //console.log(count, 'count')\n    count.textContent = this.currentTurn + 1;\n    //have to update unit turn, because constructor only called once\n    this.unitTurn = this.unitOrder[this.currentTurn % this.unitOrder.length];\n    name.textContent = `${this.unitTurn.name}`;\n\n    if (this.unitTurn.type === null) {\n      this.enemyAction();\n    }\n    this.gameEnd();\n  }\n\n  gameEnd() {\n    if (this.currentTurn === 50) {\n      console.log(\"You lose!\");\n      return true;\n    }\n\n    if (this.won()) {\n      console.log(\"You win!\");\n      return true;\n    } else if (this.lost()) {\n      console.log(\"You lose!\");\n      return true;\n    }\n    return false;\n  }\n\n  removeUnit(unit) {\n    let index = this.unitOrder.indexOf(unit);\n    if (index > -1) {\n      this.unitOrder.splice(index, 1);\n    }\n    let x = unit.pos[0];\n    let y = unit.pos[1];\n    this.unitGrid[x][y] = 0;\n    if (unit.owner === null) {\n      this.enemies.splice(this.enemies.indexOf(unit), 1);\n    } else {\n      this.units.splice(this.units.indexOf(unit), 1);\n    }\n\n    let deadUnit = document.getElementById(unit.name);\n    deadUnit.remove();\n    this.gameEnd();\n    this.savePositions();\n    this.nextTurn();\n    this.setCurrentMoveCount();\n    let move = document.getElementById(\"move\");\n    move.style.display = \"block\";\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"block\";\n    }\n  }\n\n  // attack(pos) {\n  //     let x = pos[0];\n  //     let y = pos[1];\n\n  //     if (this.grid[x][y] instanceof Unit && this.grid[x][y].type === null) {\n  //         this.grid[x][y].takeDamage(this.unitTurn.attack);\n  //         if (this.grid[x][y].alive === false) {\n  //             this.removeUnit(this.grid[x][y]);\n  //         }\n  //         return true;\n  //     }\n  //     return false;\n  // }\n\n  moveUnit(pos) {\n    let x = pos[0];\n    let y = pos[1];\n    let current = this.unitTurn.pos;\n    let newPos = [current[0] + x, current[1] + y];\n    if (this.validMove(newPos)) {\n      this.unitTurn.move(newPos);\n      if (this.unitTurn.owner != null) {\n        this.grid[newPos[0]][newPos[1]] = this.unitTurn;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  validMove(pos) {\n    let x = pos[0];\n    let y = pos[1];\n    if (x > 9 || x < 0 || y > 9 || y < 0) {\n      return false;\n    }\n    if (this.grid[x][y] !== 1 || this.grid[x][y] !== 0) {\n      return false;\n    }\n    return true;\n  }\n\n  won() {\n    if (this.enemies.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  lost() {\n    if (this.units.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  setTurnOrder() {\n    let arr = [];\n    let unitCount = 0;\n    let enemyCount = 0;\n    for (let i = 0; i < this.units.length + this.enemies.length; i++) {\n      if (i % 2 === 0) {\n        arr.push(this.units[unitCount]);\n        unitCount++;\n      } else {\n        arr.push(this.enemies[enemyCount]);\n        enemyCount++;\n      }\n    }\n    console.log(arr);\n    return arr;\n  }\n\n  shuffleArray(array) {\n    let i = array.length;\n    let rand = i;\n    while (i >= 0) {\n      rand = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[rand];\n      array[rand] = temp;\n      i--;\n    }\n    return array;\n  }\n\n  renderStatus() {}\n\n  // createObjectGrid() {\n  //     let newGrid = [...Array(10)].map(e => Array(10));\n  //     for (let i = 0; i < this.grid.length; i++) {\n  //         for (let j = 0; j < this.grid.length; j++) {\n  //             if (this.grid[i][j] === 0) {\n  //                 newGrid[i][j].push(new Plain());\n  //             } else if (this.grid[i][j] === 1) {\n  //                 newGrid[i][j].push(new Wall());\n  //             } else if (this.grid[i][j] === 2) {\n  //                 newGrid[i][j].push();\n  //             } else if (this.grid[i][j] === 3) {\n  //                 newGrid[i][j].push();\n  //             } else if (this.grid[i][j] === 4) {\n  //                 newGrid[i][j].push();\n  //             } else {\n  //                 newGrid[i][j].push();\n  //             }\n  //         }\n  //     }\n  //     return newGrid;\n  // }\n}\n\nmodule.exports = Board;\n","const Board = require('./board');\nconst Levels = require('./levels');\nconst Player = require('./player');\nconst Rifleman = require('./rifleman');\nconst Sniper = require('./sniper');\nconst AtGunner = require('./atGunner');\nconst Unit = require('./unit');\n\nclass Game {\n    constructor (level) {\n        this.board;\n        if (level === 1) {\n            let player = new Player('user');    \n            let units = [new Rifleman(\"Bob\", player), new Rifleman(\"Joe\", player), new Sniper(\"Billy\", player), new AtGunner(\"Joel\", player)];\n            let enemies = [new Rifleman(\"Enemy 1\"), new Rifleman(\"Enemy 2\"), new Sniper(\"Enemy 3\"), new AtGunner(\"Enemy 4\")];\n            this.board = new Board(BATTLEFIELDS.levelOne, units, enemies, player);\n            //this.board.render();\n            this.runGame(this.board);\n        }\n    }\n\n    runGame(board) {\n        let context = board.battlefield; \n        function animate() {\n            window.requestAnimationFrame(animate)\n            board.render();\n            //board.renderUnits();\n        }\n        animate();\n    }\n}\n\nmodule.exports = Game;","module.exports = BATTLEFIELDS = {\n    levelOne:   [\n        [0, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 1, 1, 0, 0],\n        [0, 3, 3, 3, 0, 0, 1, 1, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 1, 0, 0, 3, 3, 3, 0, 0],\n        [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n        [0, 3, 3, 3, 0, 0, 1, 0, 0, 0],\n        [0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n        [0, 0, 0, 0, 0, 0, 0, 0, 1, 1]\n    ],\n    \n    levelTwo:   [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\n}\n","//const Levels = require('./level');\nclass Player {\n    constructor (type) {\n        this.type = type;\n        this.playerUnits = [];\n    }\n\n    assignUnits(units) {\n        this.playerUnits.concat(units);\n    }\n}\n\nmodule.exports = Player;","const Unit = require('./unit');\nclass Rifleman extends Unit {\n    constructor (name, owner = null) {\n        super(\"rifleman\", 10, 5, 1, 3, 3);\n        this.name = name;\n        this.owner = owner;\n    }\n}\n\nmodule.exports = Rifleman;","const Unit = require('./unit');\n\nclass Sniper extends Unit {\n    constructor (name, owner = null) {\n        super(\"sniper\", 10, 5, 0, 5, 3);\n        this.name = name;\n        this.owner = owner;\n    }\n}\n\nmodule.exports = Sniper;\n","class Unit {\n    constructor (type, health, attack, defense, range, move) {\n        this.type = type;\n        this.health = health;\n        this.attack = attack;\n        this.defense = defense;\n        this.range = range;\n        this.move = move;\n        this.alive = true;\n        this.items = [];\n        this.pos = [];\n        //ammo\n        //clip\n    }\n\n    setAlive(status) {\n        this.alive = status;\n    }\n\n    setPiece(pos) {\n        this.pos = pos;\n    }\n\n    move(newPos) {\n        this.pos = newPos;\n    }\n\n    giveItem(item) {\n        this.items.push(item);\n    }\n\n    isAlive() {\n        return this.alive;\n    }\n\n    takeDamage(dmg) {\n        console.log(\"damage\");\n        this.health = this.health - (dmg - this.defense);\n        if (this.health < 0) {\n            this.health = 0;\n        }\n        if (this.health === 0) {\n            this.alive = false;\n        }\n    }\n}\n\nmodule.exports = Unit;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const Game = require('./game');\nconst Board = require('./board');\nconst Unit = require('./unit');\nconst Player = require('./player');\nconst levels = require(\"./levels\");\nconst Tile =\n\n//let clickedUnit = {hp: 0, atk: 0, def: 0, type: \"\", name: \"\", alliance: \"\"}\n\ndocument.addEventListener('DOMContentLoaded', (e) => {\n    let newGame = new Game(1);\n    // let controller = new AbortController();\n    // document.addEventListener(\"keydown\", () => {\n       \n    // });\n\n    let endTurn = document.getElementById(\"end\");\n    endTurn.addEventListener(\"click\", () => {\n        newGame.board.savePositions();\n        newGame.board.nextTurn();\n        newGame.board.setCurrentMoveCount();\n        let move = document.getElementById(\"move\");\n        let attackText = document.getElementById(\"attackText\");\n        attackText.style.display = \"none\";\n        move.style.display = \"block\";\n        let moveOptions = document.getElementsByClassName(\"moveB\");\n        for (let i = 0; i < moveOptions.length; i++) {\n            moveOptions[i].style.display = \"block\";\n        }\n    });\n\n    let move = document.getElementById(\"move\");\n    move.addEventListener(\"click\", () => {\n        let moveOptions = document.getElementsByClassName(\"moveB\");\n        for (let i = 0; i < moveOptions.length; i++) {\n            moveOptions[i].style.display = \"none\";\n        }\n        let counter = document.getElementById(\"moveCounter\");\n        counter.style.display = \"block\";\n        counter.textContent = `Moves Left: ${newGame.board.currentMoveCount}`\n        document.addEventListener(\"keydown\", newGame.board.moveunit); \n\n        // if (newGame.board.currentMoveCount === 0) {\n        //     //delete counter\n        //     let counter = document.getElementById(\"moveCounter\");\n        //     counter.style.display = \"none\";\n        //     //add moveOptions\n        //     let moveOptions = document.getElementsByClassName(\"moveB\");\n        //     for (let i = 0; i < moveOptions.length; i++) {\n        //         moveOptions[i].style.display = \"block\";\n        //     }\n        //     move.style.display = \"none\";\n        // }\n    });\n\n    let squares = document.getElementsByClassName(\"square\");\n    for (let i = 0; i < squares.length; i++) {\n        squares[i].addEventListener(\"mouseover\", (e) => {\n            console.log(e.target.id);\n        });\n    }   \n\n    let units = document.getElementsByClassName(\"unit\");\n    for (let i = 0; i < units.length; i++) {\n        units[i].addEventListener(\"mouseover\", (e) => {\n            let stats = newGame.board.findClickedUnit(e.target.id);\n            let info = document.getElementById(\"unitInfo\");\n            info.innerHTML = `HP: ${stats[0]}\\n\n                              <br>\n                              ATK: ${stats[1]}\\n\n                              <br>\n                              DEF: ${stats[2]}\\n\n                              <br>\n                              <br>\n                              Name: ${stats[3]}\\n\n                              <br>\n                              Type: ${stats[4]}\\n\n                              <br>\n                              Alliance: ${stats[5]}`\n        })\n    }\n\n    let attack = document.getElementById(\"attack\");\n    attack.addEventListener(\"click\", () => {\n        let moveOptions = document.getElementsByClassName(\"moveB\");\n        for (let i = 0; i < moveOptions.length; i++) {\n            moveOptions[i].style.display = \"none\";\n        }\n\n        let attackText = document.getElementById(\"attackText\");\n        attackText.style.display = \"block\";\n\n        let units = document.getElementsByClassName(\"unit\");\n        for (let i = 0; i < units.length; i++) {\n            units[i].addEventListener(\"click\", (e) => {\n                if (newGame.board.enemyNames.includes(e.target.id) && newGame.board.unitTurn.owner !== null) {\n                    newGame.board.attack(e.target.id);\n                    newGame.board.savePositions();\n                    newGame.board.nextTurn();\n                    newGame.board.setCurrentMoveCount();\n                    let move = document.getElementById(\"move\");\n                    move.style.display = \"block\";\n                    let attackText = document.getElementById(\"attackText\");\n                    attackText.style.display = \"none\";\n                    for (let i = 0; i < moveOptions.length; i++) {\n                        moveOptions[i].style.display = \"block\";\n                    }\n                }\n            }) \n        }\n    })\n    \n})  \n\n\n\n"],"names":["Unit","require","module","exports","constructor","name","owner","super","this","count","document","querySelector","grid","playerUnits","enemyUnits","keyCode","isValidMove","updateGrid","unitTurn","pos","currentMoveCount","getElementById","textContent","removeEventListener","moveunit","style","display","moveOptions","getElementsByClassName","i","length","move","units","enemies","characterKey","enemyNames","push","unitOrder","setTurnOrder","console","log","currentTurn","unitGrid","Array","j","battlefield","drawBattlefield","cellSize","padding","setPos","tiles","fillTiles","unitImages","generateUnitImages","generateHTMLsquares","generateHTMLunits","setCurrentMoveCount","attack","target","attackedUnit","inRange","takeDamage","isAlive","removeUnit","range","xDif","yDif","findClickedUnit","alliance","type","health","defense","savePositions","row","col","unitClick","top","left","rifleman","Image","src","sniper","launcher","grass","dirt","crate","setPiece","x","y","value","getCenter","w","h","window","innerWidth","innerHeight","createUnitCanvas","arr","unit","createElement","id","unitContext","getContext","body","appendChild","color","canvas","context","position","background","right","bottom","square","className","width","height","zIndex","render","center","marginLeft","marginTop","val","image","image2","sx","sy","drawImage","renderOptions","button1","button2","button3","button4","class","draw","drawSquare","battlefieldContext","lineWidth","fillStyle","fillRect","strokeRect","drawGrid","squareSize","enemyAction","nextTurn","gameEnd","won","lost","index","indexOf","splice","remove","moveUnit","current","newPos","validMove","unitCount","enemyCount","shuffleArray","array","rand","Math","floor","random","temp","renderStatus","Board","Player","Rifleman","Sniper","AtGunner","level","board","player","BATTLEFIELDS","levelOne","runGame","animate","requestAnimationFrame","levelTwo","assignUnits","concat","alive","items","setAlive","status","giveItem","item","dmg","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","Game","addEventListener","e","newGame","counter","squares","stats","innerHTML","includes"],"sourceRoot":""}