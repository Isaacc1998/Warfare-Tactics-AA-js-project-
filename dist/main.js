/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/atGunner.js":
/*!*************************!*\
  !*** ./src/atGunner.js ***!
  \*************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\n\nclass AtGunner extends Unit {\n  constructor(name) {\n    let owner = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(\"atGunner\", 11, 8, 1, 3, 2);\n    this.name = name;\n    this.owner = owner;\n  }\n\n}\n\nmodule.exports = AtGunner;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXRHdW5uZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLDZCQUFELENBQXBCOztBQUVBLE1BQU1DLFFBQU4sU0FBdUJGLElBQXZCLENBQTRCO0VBQ3hCRyxXQUFXLENBQUVDLElBQUYsRUFBc0I7SUFBQSxJQUFkQyxLQUFjLHVFQUFOLElBQU07SUFDN0IsTUFBTSxVQUFOLEVBQWtCLEVBQWxCLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLEVBQStCLENBQS9CO0lBQ0EsS0FBS0QsSUFBTCxHQUFZQSxJQUFaO0lBQ0EsS0FBS0MsS0FBTCxHQUFhQSxLQUFiO0VBRUg7O0FBTnVCOztBQVM1QkMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTCxRQUFqQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlc3QtcHJvamVjdC8uL3NyYy9hdEd1bm5lci5qcz80ZGIyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVuaXQgPSByZXF1aXJlKCcuL3VuaXQnKTtcblxuY2xhc3MgQXRHdW5uZXIgZXh0ZW5kcyBVbml0IHtcbiAgICBjb25zdHJ1Y3RvciAobmFtZSwgb3duZXIgPSBudWxsKSB7XG4gICAgICAgIHN1cGVyKFwiYXRHdW5uZXJcIiwgMTEsIDgsIDEsIDMsIDIpO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLm93bmVyID0gb3duZXI7XG5cbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQXRHdW5uZXI7XG4iXSwibmFtZXMiOlsiVW5pdCIsInJlcXVpcmUiLCJBdEd1bm5lciIsImNvbnN0cnVjdG9yIiwibmFtZSIsIm93bmVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/atGunner.js\n");

/***/ }),

/***/ "./src/board.js":
/*!**********************!*\
  !*** ./src/board.js ***!
  \**********************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst Player = __webpack_require__(/*! ./player */ \"./src/player.js\");\n\nconst Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\n\nconst Levels = __webpack_require__(/*! ./levels */ \"./src/levels.js\");\n\nlet count = document.querySelector(\".tCount\");\nlet name = document.querySelector(\".name\");\n\nclass Board {\n  constructor(grid, playerUnits, enemyUnits) {\n    _defineProperty(this, \"moveunit\", _ref => {\n      let {\n        keyCode\n      } = _ref;\n\n      if (keyCode === 37) {\n        if (this.isValidMove(-1, 0)) {\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1] - 1, this.unitTurn);\n          this.unitTurn.pos[1]--;\n          this.currentMoveCount--;\n        }\n      } else if (keyCode === 39) {\n        if (this.isValidMove(1, 0)) {\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1] + 1, this.unitTurn);\n          this.unitTurn.pos[1]++;\n          this.currentMoveCount--;\n        }\n      } else if (keyCode === 38) {\n        if (this.isValidMove(0, -1)) {\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n          this.updateGrid(this.unitTurn.pos[0] - 1, this.unitTurn.pos[1], this.unitTurn);\n          this.unitTurn.pos[0]--;\n          this.currentMoveCount--;\n        }\n      } else if (keyCode === 40) {\n        if (this.isValidMove(0, 1)) {\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n          this.updateGrid(this.unitTurn.pos[0] + 1, this.unitTurn.pos[1], this.unitTurn);\n          this.unitTurn.pos[0]++;\n          this.currentMoveCount--;\n        }\n      }\n\n      if (this.currentMoveCount === 0) {\n        document.removeEventListener(\"keydown\", this.moveunit);\n        let counter = document.getElementById(\"moveCounter\");\n        counter.style.display = \"none\"; //add moveOptions\n\n        let moveOptions = document.getElementsByClassName(\"moveB\");\n\n        for (let i = 0; i < moveOptions.length; i++) {\n          moveOptions[i].style.display = \"block\";\n        }\n\n        move.style.display = \"none\";\n        return;\n      }\n\n      let counter = document.getElementById(\"moveCounter\");\n      counter.textContent = `Moves Left: ${this.currentMoveCount}`;\n    });\n\n    this.grid = grid; //this.objectGrid = this.createObjectGrid();\n\n    this.units = playerUnits;\n    this.enemies = enemyUnits;\n    this.characterKey = {};\n    this.enemyNames = [];\n\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemyNames.push(this.enemies[i].name);\n    }\n\n    this.unitOrder = this.setTurnOrder();\n\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      this.characterKey[this.unitOrder[i].name] = this.unitOrder[i];\n    }\n\n    console.log(this.characterKey);\n    this.currentTurn = 0;\n    this.unitTurn = this.unitOrder[this.currentTurn % this.unitOrder.length];\n    this.unitGrid = new Array(10);\n\n    for (let i = 0; i < this.unitGrid.length; i++) {\n      this.unitGrid[i] = new Array(10);\n    }\n\n    for (let i = 0; i < this.unitGrid.length; i++) {\n      for (let j = 0; j < this.unitGrid[i].length; j++) {\n        this.unitGrid[i][j] = 0;\n      }\n    }\n\n    this.battlefield = this.drawBattlefield(0, 0, \"#444\");\n    this.cellSize = 67;\n    this.padding = 2;\n    this.setPos();\n    this.tiles = [];\n    this.fillTiles();\n    this.unitImages = [];\n    this.generateUnitImages(); //this.unitContexts = this.createUnitCanvas();\n\n    this.generateHTMLsquares();\n    this.generateHTMLunits();\n    this.currentMoveCount = this.unitTurn.move;\n  }\n\n  setCurrentMoveCount() {\n    this.currentMoveCount = this.unitTurn.move;\n  }\n\n  attack(target) {\n    let attackedUnit = this.characterKey[target];\n\n    if (this.inRange(attackedUnit)) {\n      console.log(\"before damge\");\n      attackedUnit.takeDamage(this.unitTurn.attack);\n\n      if (!attackedUnit.isAlive()) {\n        this.removeUnit(attackedUnit);\n      }\n    }\n  }\n\n  inRange(target) {\n    let range = this.unitTurn.range;\n    console.log(target);\n    console.log(this.unitTurn);\n    let xDif = target.pos[0] - this.unitTurn.pos[0];\n    let yDif = target.pos[1] - this.unitTurn.pos[1];\n\n    while (xDif !== 0) {\n      if (xDif > 0) {\n        xDif--;\n        range--;\n      } else if (xDif < 0) {\n        xDif++;\n        range--;\n      }\n    }\n\n    while (yDif !== 0) {\n      if (yDif > 0) {\n        yDif--;\n        range--;\n      } else if (yDif < 0) {\n        yDif++;\n        range--;\n      }\n    }\n\n    if (range < 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  findClickedUnit(name) {\n    console.log(name);\n\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      if (this.unitOrder[i].name === name) {\n        let alliance;\n        let type;\n\n        if (this.unitOrder[i].owner === null) {\n          alliance = \"Player 2\";\n        } else {\n          alliance = \"Player 1\";\n        }\n\n        if (this.unitOrder[i].type === \"atGunner\") {\n          type = \"RPG\";\n        } else {\n          type = this.unitOrder[i].type;\n        }\n\n        return [this.unitOrder[i].health, this.unitOrder[i].attack, this.unitOrder[i].defense, this.unitOrder[i].name, type, alliance];\n      }\n    }\n  }\n\n  savePositions() {\n    for (let row = 0; row < this.unitGrid.length; row++) {\n      for (let col = 0; col < this.unitGrid[row].length; col++) {\n        if (this.unitGrid[row][col] instanceof Unit) {\n          let unitClick = document.getElementById(`${this.unitGrid[row][col].name}`);\n          unitClick.style.top = row * (this.cellSize + this.padding);\n          unitClick.style.left = col * (this.cellSize + this.padding);\n        }\n      }\n    }\n  }\n\n  generateUnitImages() {\n    let rifleman = new Image();\n    rifleman.src = \"../soldiers/Hero_Rifle.png\";\n    this.unitImages.push(rifleman);\n    let sniper = new Image();\n    sniper.src = \"../soldiers/Hero_MachineGun.png\";\n    this.unitImages.push(sniper);\n    let launcher = new Image();\n    launcher.src = \"../soldiers/Hero_GrenadeLauncher.png\";\n    this.unitImages.push(launcher);\n  }\n\n  fillTiles() {\n    let grass = new Image();\n    grass.src = \"../tiles/Tiles/_0003_GrassTiles.png\";\n    this.tiles.push(grass);\n    let dirt = new Image();\n    dirt.src = \"../tiles/Tiles/_0001_DirtTiles.png\";\n    this.tiles.push(dirt);\n    let crate = new Image();\n    crate.src = \"../tiles/crates/TDS04_0018_Box1.png\";\n    this.tiles.push(crate);\n  }\n\n  setPos() {\n    for (let i = 0; i < this.units.length; i++) {\n      this.units[i].setPiece([0, i + 2]);\n      this.unitGrid[0][i + 2] = this.units[i];\n    }\n\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemies[i].setPiece([this.unitGrid.length - 2, i + 4]);\n      this.unitGrid[this.unitGrid.length - 2][i + 4] = this.enemies[i];\n    }\n  }\n\n  isValidMove(x, y) {\n    if ((this.grid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 0 || this.grid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 1) && this.unitGrid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 0) {\n      return true;\n    } //check starting position of units\n\n\n    return false;\n  }\n\n  updateGrid(x, y, value) {\n    this.unitGrid[x][y] = value;\n  }\n\n  getCenter(w, h) {\n    return {\n      x: window.innerWidth / 2 - w / 2 + \"px\",\n      y: window.innerHeight / 2 - h / 2 + \"px\"\n    };\n  }\n\n  createUnitCanvas() {\n    let arr = [];\n\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      let unit = document.createElement(\"canvas\");\n      unit.id = `${this.unitOrder[i].name}`;\n      let unitContext = unit.getContext('2d');\n      document.body.appendChild(unit);\n      let container = document.getElementById('container');\n      container.appendChild(unit);\n      arr.push(unitContext);\n    }\n\n    return arr;\n  }\n\n  drawBattlefield(w, h) {\n    let color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"#949494\";\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.id = \"battle\";\n    this.context = this.canvas.getContext(\"2d\"); // this.canvas.style.width = 680;\n    // this.canvas.style.height = 680;\n\n    this.canvas.style.display = \"inline-block\";\n    this.canvas.style.position = \"relative\";\n    this.canvas.style.background = color;\n    this.canvas.style.right = \"190\";\n    this.canvas.style.bottom = \"686\"; // if (isTransparent) {\n    // \tthis.canvas.style.backgroundColor = \"transparent\";\n    // }\n    // const center = this.getCenter(w, h);\n    // this.canvas.style.marginLeft = center.x;\n    // this.canvas.style.marginTop = center.y;\n    // this.canvas.style.right = 720;\n\n    document.body.appendChild(this.canvas);\n    let container = document.getElementById('container');\n    container.appendChild(this.canvas);\n    return this.context;\n  }\n\n  generateHTMLsquares() {\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        let square = document.createElement('div');\n        square.id = `${this.grid[row][col]}`;\n        square.className = \"square\";\n        square.style.position = \"absolute\";\n        square.style.top = row * (this.cellSize + this.padding);\n        square.style.left = col * (this.cellSize + this.padding);\n        square.style.width = this.cellSize;\n        square.style.height = this.cellSize; // document.body.appendChild(square); \n\n        square.style.zIndex = 100; // this.battlefield.canvas.appendChild(square);\n\n        let squares = document.getElementById('squares');\n        squares.appendChild(square);\n      }\n    }\n  }\n\n  generateHTMLunits() {\n    for (let row = 0; row < this.unitGrid.length; row++) {\n      for (let col = 0; col < this.unitGrid[row].length; col++) {\n        if (this.unitGrid[row][col] instanceof Unit) {\n          let unitClick = document.createElement('div');\n          unitClick.id = `${this.unitGrid[row][col].name}`;\n          unitClick.className = \"unit\";\n          unitClick.style.position = \"absolute\";\n          unitClick.style.top = row * (this.cellSize + this.padding);\n          unitClick.style.left = col * (this.cellSize + this.padding);\n          unitClick.style.width = this.cellSize;\n          unitClick.style.height = this.cellSize;\n          unitClick.style.zIndex = 101;\n          let squares = document.getElementById('squares');\n          squares.appendChild(unitClick);\n        }\n      }\n    }\n  } // renderUnits() {\n  //     for (let i = 0; i < this.unitOrder.length; i++) {\n  //         let unitContext = this.unitContexts[i];\n  //         const w = (this.cellSize + this.padding) * this.grid[0].length - (this.padding);\n  //         const h = (this.cellSize + this.padding) * this.grid.length - (this.padding);\n  //         unitContext.canvas.width = w;\n  //         unitContext.canvas.height = h;\n  //         const center = this.getCenter(w, h);\n  //         unitContext.canvas.style.marginLeft = center.x\n  //         unitContext.canvas.style.marginTop = center.y;\n  //         let image;\n  //         if (this.unitOrder[i].type === \"rifleman\") {\n  //             image = this.unitImages[0];\n  //         } else if (this.unitOrder[i].type === \"sniper\") {\n  //             image = this.unitImages[1];\n  //         } else if (this.unitOrder[i].type === \"atGunner\") {\n  //             image = this.unitImages[2];\n  //         }\n  //         unitContext.drawImage(image, 8, 8, 48, 48, this.unitOrder[i].pos[1] * (this.cellSize + this.padding), this.unitOrder[i].pos[0] * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n  //     }\n  // }\n\n\n  render() {\n    const w = (this.cellSize + this.padding) * this.grid[0].length - this.padding;\n    const h = (this.cellSize + this.padding) * this.grid.length - this.padding;\n    this.battlefield.canvas.width = w;\n    this.battlefield.canvas.height = h;\n    const center = this.getCenter(w, h);\n    this.battlefield.canvas.style.marginLeft = center.x;\n    this.battlefield.canvas.style.marginTop = center.y;\n\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        const val = this.grid[row][col];\n        let image;\n        let sx = 0;\n        let sy = 0;\n\n        if (val === 0) {\n          image = this.tiles[0];\n          sx = 144;\n          sy = 144;\n        } else if (val === 1) {\n          image = this.tiles[1];\n          sx = 144;\n          sy = 144;\n        } else if (val === 3) {\n          image = this.tiles[2];\n          sx = 1;\n          sy = 0;\n        } //drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)\n\n\n        this.battlefield.drawImage(image, sx, sy, 30, 30, col * (this.cellSize + this.padding), row * (this.cellSize + this.padding), this.cellSize, this.cellSize); //create corresponding html box element\n        //let boxElement = document.createElement('div');\n        // this.battlefield.canvas.style.width = this.cellSize;\n        // this.battlefield.canvas.style.height = this.cellSize;\n\n        let x;\n        let y;\n        let image2;\n\n        if (this.unitGrid[row][col] instanceof Unit) {\n          x = this.unitGrid[row][col].pos[1];\n          y = this.unitGrid[row][col].pos[0];\n\n          if (this.unitGrid[row][col].type === \"rifleman\") {\n            image2 = this.unitImages[0];\n          } else if (this.unitGrid[row][col].type === \"sniper\") {\n            image2 = this.unitImages[1];\n          } else if (this.unitGrid[row][col].type === \"atGunner\") {\n            image2 = this.unitImages[2];\n          }\n\n          this.battlefield.drawImage(image2, 8, 8, 48, 48, col * (this.cellSize + this.padding), row * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n        } // unitContext.drawImage(image, 8, 8, 48, 48, this.unitOrder[i].pos[1] * (this.cellSize + this.padding), this.unitOrder[i].pos[0] * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n        // this.battlefield.fillStyle = color;\n        // this.battlefield.fillRect(col * (this.cellSize + this.padding),\n        // row * (this.cellSize + this.padding),\n        // this.cellSize, this.cellSize);\n\n      }\n    }\n  }\n\n  renderOptions() {\n    let context = document.getElementById(\"\");\n    let button1 = document.createElement(\"button\");\n    let button2 = document.createElement(\"button\");\n    let button3 = document.createElement(\"button\");\n    let button4 = document.createElement(\"button\");\n    button1.class = \"move\";\n    button2.class = \"attack\";\n    button3.class = \"items\";\n    button4.class = \"defend\";\n    button1.style.display = \"block\";\n  }\n\n  draw(name) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.id = name;\n    let w = canvas.width;\n    let h = canvas.height;\n    let context = canvas.getContext(\"2d\");\n    document.body.appendChild(canvas); //canvas.style.display = \"none\";\n\n    if (name === \"moveOptions\") {\n      this.renderOptions();\n    }\n\n    return this.context;\n  }\n\n  drawSquare(x, y, w, h, color) {\n    this.battlefieldContext.lineWidth = 1;\n    this.battlefieldContext.fillStyle = color;\n    this.battlefieldContext.fillRect(x, y, w, h);\n    this.battlefieldContext.strokeRect(x, y, w, h);\n  }\n\n  drawGrid() {\n    let x = 0;\n    let y = 0;\n    let w = this.squareSize;\n    let h = this.squareSize;\n\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid.length; j++) {\n        if (this.grid[i][j] === 0) {\n          this.drawSquare(x, y, w, h, \"#d3d3d2\");\n        } else {\n          this.drawSquare(x, y, w, h, \"#111\");\n        }\n\n        x += w;\n      }\n\n      y += h;\n      x = 0;\n    }\n  }\n\n  enemyAction() {//ai functionality\n    //has to click end turn button\n  }\n\n  nextTurn() {\n    if (this.gameEnd()) {//victory or loss screen\n    }\n\n    this.currentTurn++; //console.log(count, 'count')\n\n    count.textContent = this.currentTurn + 1; //have to update unit turn, because constructor only called once \n\n    this.unitTurn = this.unitOrder[this.currentTurn % this.unitOrder.length];\n    name.textContent = `${this.unitTurn.name}`;\n\n    if (this.unitTurn.type === null) {\n      this.enemyAction();\n    }\n\n    this.gameEnd();\n  }\n\n  gameEnd() {\n    if (this.currentTurn === 50) {\n      console.log(\"You lose!\");\n      return true;\n    }\n\n    if (this.won()) {\n      console.log(\"You win!\");\n      return true;\n    } else if (this.lost()) {\n      console.log(\"You lose!\");\n      return true;\n    }\n\n    return false;\n  }\n\n  removeUnit(unit) {\n    let index = this.unitOrder.indexOf(unit);\n\n    if (index > -1) {\n      this.unitOrder.splice(index, 1);\n    }\n\n    let x = unit.pos[0];\n    let y = unit.pos[1];\n    this.unitGrid[x][y] = 0;\n\n    if (unit.owner === null) {\n      this.enemies.splice(this.enemies.indexOf(unit), 1);\n    } else {\n      this.units.splice(this.units.indexOf(unit), 1);\n    }\n\n    let deadUnit = document.getElementById(unit.name);\n    deadUnit.remove();\n    this.gameEnd();\n    this.savePositions();\n    this.nextTurn();\n    this.setCurrentMoveCount();\n    let move = document.getElementById(\"move\");\n    move.style.display = \"block\";\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"block\";\n    }\n  } // attack(pos) {\n  //     let x = pos[0];\n  //     let y = pos[1];\n  //     if (this.grid[x][y] instanceof Unit && this.grid[x][y].type === null) {\n  //         this.grid[x][y].takeDamage(this.unitTurn.attack);\n  //         if (this.grid[x][y].alive === false) {\n  //             this.removeUnit(this.grid[x][y]);\n  //         }\n  //         return true;\n  //     }\n  //     return false;\n  // }\n\n\n  moveUnit(pos) {\n    let x = pos[0];\n    let y = pos[1];\n    let current = this.unitTurn.pos;\n    let newPos = [current[0] + x, current[1] + y];\n\n    if (this.validMove(newPos)) {\n      this.unitTurn.move(newPos);\n\n      if (this.unitTurn.owner != null) {\n        this.grid[newPos[0]][newPos[1]] = this.unitTurn;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  validMove(pos) {\n    let x = pos[0];\n    let y = pos[1];\n\n    if (x > 9 || x < 0 || y > 9 || y < 0) {\n      return false;\n    }\n\n    if (this.grid[x][y] !== 1 || this.grid[x][y] !== 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  won() {\n    if (this.enemies.length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  lost() {\n    if (this.units.length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  setTurnOrder() {\n    let arr = [];\n    let unitCount = 0;\n    let enemyCount = 0;\n\n    for (let i = 0; i < this.units.length + this.enemies.length; i++) {\n      if (i % 2 === 0) {\n        arr.push(this.units[unitCount]);\n        unitCount++;\n      } else {\n        arr.push(this.enemies[enemyCount]);\n        enemyCount++;\n      }\n    }\n\n    console.log(arr);\n    return arr;\n  }\n\n  shuffleArray(array) {\n    let i = array.length;\n    let rand = i;\n\n    while (i >= 0) {\n      rand = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[rand];\n      array[rand] = temp;\n      i--;\n    }\n\n    return array;\n  }\n\n  renderStatus() {} // createObjectGrid() {\n  //     let newGrid = [...Array(10)].map(e => Array(10));\n  //     for (let i = 0; i < this.grid.length; i++) {\n  //         for (let j = 0; j < this.grid.length; j++) {\n  //             if (this.grid[i][j] === 0) {\n  //                 newGrid[i][j].push(new Plain());\n  //             } else if (this.grid[i][j] === 1) {\n  //                 newGrid[i][j].push(new Wall());\n  //             } else if (this.grid[i][j] === 2) {\n  //                 newGrid[i][j].push();\n  //             } else if (this.grid[i][j] === 3) {\n  //                 newGrid[i][j].push();\n  //             } else if (this.grid[i][j] === 4) {\n  //                 newGrid[i][j].push();\n  //             } else {\n  //                 newGrid[i][j].push();\n  //             }\n  //         }\n  //     }\n  //     return newGrid;\n  // }\n\n\n}\n\n;\nmodule.exports = Board;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/board.js\n");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Board = __webpack_require__(/*! ./board */ \"./src/board.js\");\n\nconst Levels = __webpack_require__(/*! ./levels */ \"./src/levels.js\");\n\nconst Player = __webpack_require__(/*! ./player */ \"./src/player.js\");\n\nconst Rifleman = __webpack_require__(/*! ./rifleman */ \"./src/rifleman.js\");\n\nconst Sniper = __webpack_require__(/*! ./sniper */ \"./src/sniper.js\");\n\nconst AtGunner = __webpack_require__(/*! ./atGunner */ \"./src/atGunner.js\");\n\nconst Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\n\nclass Game {\n  constructor(level) {\n    this.board;\n\n    if (level === 1) {\n      let player = new Player('user');\n      let units = [new Rifleman(\"Bob\", player), new Rifleman(\"Joe\", player), new Sniper(\"Billy\", player), new AtGunner(\"Joel\", player)];\n      let enemies = [new Rifleman(\"Enemy 1\"), new Rifleman(\"Enemy 2\"), new Sniper(\"Enemy 3\"), new AtGunner(\"Enemy 4\")];\n      this.board = new Board(BATTLEFIELDS.levelOne, units, enemies, player); //this.board.render();\n\n      this.runGame(this.board);\n    }\n  }\n\n  runGame(board) {\n    let context = board.battlefield;\n\n    function animate() {\n      window.requestAnimationFrame(animate);\n      board.render(); //board.renderUnits();\n    }\n\n    animate();\n  }\n\n}\n\nmodule.exports = Game;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLLEdBQUdDLG1CQUFPLENBQUMsK0JBQUQsQ0FBckI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRCxtQkFBTyxDQUFDLGlDQUFELENBQXRCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsbUJBQU8sQ0FBQyxpQ0FBRCxDQUF0Qjs7QUFDQSxNQUFNRyxRQUFRLEdBQUdILG1CQUFPLENBQUMscUNBQUQsQ0FBeEI7O0FBQ0EsTUFBTUksTUFBTSxHQUFHSixtQkFBTyxDQUFDLGlDQUFELENBQXRCOztBQUNBLE1BQU1LLFFBQVEsR0FBR0wsbUJBQU8sQ0FBQyxxQ0FBRCxDQUF4Qjs7QUFDQSxNQUFNTSxJQUFJLEdBQUdOLG1CQUFPLENBQUMsNkJBQUQsQ0FBcEI7O0FBRUEsTUFBTU8sSUFBTixDQUFXO0VBQ1BDLFdBQVcsQ0FBRUMsS0FBRixFQUFTO0lBQ2hCLEtBQUtDLEtBQUw7O0lBQ0EsSUFBSUQsS0FBSyxLQUFLLENBQWQsRUFBaUI7TUFDYixJQUFJRSxNQUFNLEdBQUcsSUFBSVQsTUFBSixDQUFXLE1BQVgsQ0FBYjtNQUNBLElBQUlVLEtBQUssR0FBRyxDQUFDLElBQUlULFFBQUosQ0FBYSxLQUFiLEVBQW9CUSxNQUFwQixDQUFELEVBQThCLElBQUlSLFFBQUosQ0FBYSxLQUFiLEVBQW9CUSxNQUFwQixDQUE5QixFQUEyRCxJQUFJUCxNQUFKLENBQVcsT0FBWCxFQUFvQk8sTUFBcEIsQ0FBM0QsRUFBd0YsSUFBSU4sUUFBSixDQUFhLE1BQWIsRUFBcUJNLE1BQXJCLENBQXhGLENBQVo7TUFDQSxJQUFJRSxPQUFPLEdBQUcsQ0FBQyxJQUFJVixRQUFKLENBQWEsU0FBYixDQUFELEVBQTBCLElBQUlBLFFBQUosQ0FBYSxTQUFiLENBQTFCLEVBQW1ELElBQUlDLE1BQUosQ0FBVyxTQUFYLENBQW5ELEVBQTBFLElBQUlDLFFBQUosQ0FBYSxTQUFiLENBQTFFLENBQWQ7TUFDQSxLQUFLSyxLQUFMLEdBQWEsSUFBSVgsS0FBSixDQUFVZSxZQUFZLENBQUNDLFFBQXZCLEVBQWlDSCxLQUFqQyxFQUF3Q0MsT0FBeEMsRUFBaURGLE1BQWpELENBQWIsQ0FKYSxDQUtiOztNQUNBLEtBQUtLLE9BQUwsQ0FBYSxLQUFLTixLQUFsQjtJQUNIO0VBQ0o7O0VBRURNLE9BQU8sQ0FBQ04sS0FBRCxFQUFRO0lBQ1gsSUFBSU8sT0FBTyxHQUFHUCxLQUFLLENBQUNRLFdBQXBCOztJQUNBLFNBQVNDLE9BQVQsR0FBbUI7TUFDZkMsTUFBTSxDQUFDQyxxQkFBUCxDQUE2QkYsT0FBN0I7TUFDQVQsS0FBSyxDQUFDWSxNQUFOLEdBRmUsQ0FHZjtJQUNIOztJQUNESCxPQUFPO0VBQ1Y7O0FBckJNOztBQXdCWEksTUFBTSxDQUFDQyxPQUFQLEdBQWlCakIsSUFBakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0LXByb2plY3QvLi9zcmMvZ2FtZS5qcz83ZGUwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEJvYXJkID0gcmVxdWlyZSgnLi9ib2FyZCcpO1xuY29uc3QgTGV2ZWxzID0gcmVxdWlyZSgnLi9sZXZlbHMnKTtcbmNvbnN0IFBsYXllciA9IHJlcXVpcmUoJy4vcGxheWVyJyk7XG5jb25zdCBSaWZsZW1hbiA9IHJlcXVpcmUoJy4vcmlmbGVtYW4nKTtcbmNvbnN0IFNuaXBlciA9IHJlcXVpcmUoJy4vc25pcGVyJyk7XG5jb25zdCBBdEd1bm5lciA9IHJlcXVpcmUoJy4vYXRHdW5uZXInKTtcbmNvbnN0IFVuaXQgPSByZXF1aXJlKCcuL3VuaXQnKTtcblxuY2xhc3MgR2FtZSB7XG4gICAgY29uc3RydWN0b3IgKGxldmVsKSB7XG4gICAgICAgIHRoaXMuYm9hcmQ7XG4gICAgICAgIGlmIChsZXZlbCA9PT0gMSkge1xuICAgICAgICAgICAgbGV0IHBsYXllciA9IG5ldyBQbGF5ZXIoJ3VzZXInKTsgICAgXG4gICAgICAgICAgICBsZXQgdW5pdHMgPSBbbmV3IFJpZmxlbWFuKFwiQm9iXCIsIHBsYXllciksIG5ldyBSaWZsZW1hbihcIkpvZVwiLCBwbGF5ZXIpLCBuZXcgU25pcGVyKFwiQmlsbHlcIiwgcGxheWVyKSwgbmV3IEF0R3VubmVyKFwiSm9lbFwiLCBwbGF5ZXIpXTtcbiAgICAgICAgICAgIGxldCBlbmVtaWVzID0gW25ldyBSaWZsZW1hbihcIkVuZW15IDFcIiksIG5ldyBSaWZsZW1hbihcIkVuZW15IDJcIiksIG5ldyBTbmlwZXIoXCJFbmVteSAzXCIpLCBuZXcgQXRHdW5uZXIoXCJFbmVteSA0XCIpXTtcbiAgICAgICAgICAgIHRoaXMuYm9hcmQgPSBuZXcgQm9hcmQoQkFUVExFRklFTERTLmxldmVsT25lLCB1bml0cywgZW5lbWllcywgcGxheWVyKTtcbiAgICAgICAgICAgIC8vdGhpcy5ib2FyZC5yZW5kZXIoKTtcbiAgICAgICAgICAgIHRoaXMucnVuR2FtZSh0aGlzLmJvYXJkKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJ1bkdhbWUoYm9hcmQpIHtcbiAgICAgICAgbGV0IGNvbnRleHQgPSBib2FyZC5iYXR0bGVmaWVsZDsgXG4gICAgICAgIGZ1bmN0aW9uIGFuaW1hdGUoKSB7XG4gICAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpXG4gICAgICAgICAgICBib2FyZC5yZW5kZXIoKTtcbiAgICAgICAgICAgIC8vYm9hcmQucmVuZGVyVW5pdHMoKTtcbiAgICAgICAgfVxuICAgICAgICBhbmltYXRlKCk7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWU7Il0sIm5hbWVzIjpbIkJvYXJkIiwicmVxdWlyZSIsIkxldmVscyIsIlBsYXllciIsIlJpZmxlbWFuIiwiU25pcGVyIiwiQXRHdW5uZXIiLCJVbml0IiwiR2FtZSIsImNvbnN0cnVjdG9yIiwibGV2ZWwiLCJib2FyZCIsInBsYXllciIsInVuaXRzIiwiZW5lbWllcyIsIkJBVFRMRUZJRUxEUyIsImxldmVsT25lIiwicnVuR2FtZSIsImNvbnRleHQiLCJiYXR0bGVmaWVsZCIsImFuaW1hdGUiLCJ3aW5kb3ciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJyZW5kZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/game.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const Game = __webpack_require__(/*! ./game */ \"./src/game.js\");\n\nconst Board = __webpack_require__(/*! ./board */ \"./src/board.js\");\n\nconst Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\n\nconst Player = __webpack_require__(/*! ./player */ \"./src/player.js\");\n\nconst levels = __webpack_require__(/*! ./levels */ \"./src/levels.js\");\n\nconst Tile = //let clickedUnit = {hp: 0, atk: 0, def: 0, type: \"\", name: \"\", alliance: \"\"}\ndocument.addEventListener('DOMContentLoaded', e => {\n  let newGame = new Game(1); // let controller = new AbortController();\n  // document.addEventListener(\"keydown\", () => {\n  // });\n\n  let endTurn = document.getElementById(\"end\");\n  endTurn.addEventListener(\"click\", () => {\n    newGame.board.savePositions();\n    newGame.board.nextTurn();\n    newGame.board.setCurrentMoveCount();\n    let move = document.getElementById(\"move\");\n    let attackText = document.getElementById(\"attackText\");\n    attackText.style.display = \"none\";\n    move.style.display = \"block\";\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"block\";\n    }\n  });\n  let move = document.getElementById(\"move\");\n  move.addEventListener(\"click\", () => {\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"none\";\n    }\n\n    let counter = document.getElementById(\"moveCounter\");\n    counter.style.display = \"block\";\n    counter.textContent = `Moves Left: ${newGame.board.currentMoveCount}`;\n    document.addEventListener(\"keydown\", newGame.board.moveunit); // if (newGame.board.currentMoveCount === 0) {\n    //     //delete counter\n    //     let counter = document.getElementById(\"moveCounter\");\n    //     counter.style.display = \"none\";\n    //     //add moveOptions\n    //     let moveOptions = document.getElementsByClassName(\"moveB\");\n    //     for (let i = 0; i < moveOptions.length; i++) {\n    //         moveOptions[i].style.display = \"block\";\n    //     }\n    //     move.style.display = \"none\";\n    // }\n  });\n  let squares = document.getElementsByClassName(\"square\");\n\n  for (let i = 0; i < squares.length; i++) {\n    squares[i].addEventListener(\"mouseover\", e => {\n      console.log(e.target.id);\n    });\n  }\n\n  let units = document.getElementsByClassName(\"unit\");\n\n  for (let i = 0; i < units.length; i++) {\n    units[i].addEventListener(\"mouseover\", e => {\n      let stats = newGame.board.findClickedUnit(e.target.id);\n      let info = document.getElementById(\"unitInfo\");\n      info.innerHTML = `HP: ${stats[0]}\\n\n                              <br>\n                              ATK: ${stats[1]}\\n\n                              <br>\n                              DEF: ${stats[2]}\\n\n                              <br>\n                              <br>\n                              Name: ${stats[3]}\\n\n                              <br>\n                              Type: ${stats[4]}\\n\n                              <br>\n                              Alliance: ${stats[5]}`;\n    });\n  }\n\n  let attack = document.getElementById(\"attack\");\n  attack.addEventListener(\"click\", () => {\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"none\";\n    }\n\n    let attackText = document.getElementById(\"attackText\");\n    attackText.style.display = \"block\";\n    let units = document.getElementsByClassName(\"unit\");\n\n    for (let i = 0; i < units.length; i++) {\n      units[i].addEventListener(\"click\", e => {\n        if (newGame.board.enemyNames.includes(e.target.id) && newGame.board.unitTurn.owner !== null) {\n          newGame.board.attack(e.target.id);\n          newGame.board.savePositions();\n          newGame.board.nextTurn();\n          newGame.board.setCurrentMoveCount();\n          let move = document.getElementById(\"move\");\n          move.style.display = \"block\";\n          let attackText = document.getElementById(\"attackText\");\n          attackText.style.display = \"none\";\n\n          for (let i = 0; i < moveOptions.length; i++) {\n            moveOptions[i].style.display = \"block\";\n          }\n        }\n      });\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/levels.js":
/*!***********************!*\
  !*** ./src/levels.js ***!
  \***********************/
/***/ (function(module) {

eval("module.exports = BATTLEFIELDS = {\n  levelOne: [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 3, 3, 3, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 3, 3, 3, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 3, 3, 3, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1]],\n  levelTwo: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGV2ZWxzLmpzLmpzIiwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIkJBVFRMRUZJRUxEUyIsImxldmVsT25lIiwibGV2ZWxUd28iXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlc3QtcHJvamVjdC8uL3NyYy9sZXZlbHMuanM/ZDUyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IEJBVFRMRUZJRUxEUyA9IHtcbiAgICBsZXZlbE9uZTogICBbXG4gICAgICAgIFswLCAxLCAxLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDAsIDEsIDEsIDAsIDBdLFxuICAgICAgICBbMCwgMywgMywgMywgMCwgMCwgMSwgMSwgMCwgMF0sXG4gICAgICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgWzAsIDAsIDEsIDAsIDAsIDMsIDMsIDMsIDAsIDBdLFxuICAgICAgICBbMCwgMCwgMCwgMSwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgICAgIFswLCAzLCAzLCAzLCAwLCAwLCAxLCAwLCAwLCAwXSxcbiAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDEsIDAsIDAsIDAsIDFdLFxuICAgICAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMSwgMV1cbiAgICBdLFxuICAgIFxuICAgIGxldmVsVHdvOiAgIFtbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgICAgICAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgICAgICAgICAgICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgICAgICAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgICAgICAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgICAgICAgICAgICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgICAgICAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgICAgICAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgICAgICAgICAgICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgICAgICAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF1dXG59XG4iXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLFlBQVksR0FBRztFQUM1QkMsUUFBUSxFQUFJLENBQ1IsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQURRLEVBRVIsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQUZRLEVBR1IsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQUhRLEVBSVIsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQUpRLEVBS1IsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQUxRLEVBTVIsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQU5RLEVBT1IsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQVBRLEVBUVIsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQVJRLEVBU1IsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQVRRLENBRGdCO0VBYTVCQyxRQUFRLEVBQUksQ0FBQyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBQUQsRUFDQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBREEsRUFFQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBRkEsRUFHQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBSEEsRUFJQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBSkEsRUFLQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBTEEsRUFNQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBTkEsRUFPQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBUEEsRUFRQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBUkEsRUFTQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBVEE7QUFiZ0IsQ0FBaEMifQ==\n//# sourceURL=webpack-internal:///./src/levels.js\n");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/***/ (function(module) {

eval("//const Levels = require('./level');\nclass Player {\n  constructor(type) {\n    this.type = type;\n    this.playerUnits = [];\n  }\n\n  assignUnits(units) {\n    this.playerUnits.concat(units);\n  }\n\n}\n\nmodule.exports = Player;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGxheWVyLmpzLmpzIiwibmFtZXMiOlsiUGxheWVyIiwiY29uc3RydWN0b3IiLCJ0eXBlIiwicGxheWVyVW5pdHMiLCJhc3NpZ25Vbml0cyIsInVuaXRzIiwiY29uY2F0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVzdC1wcm9qZWN0Ly4vc3JjL3BsYXllci5qcz9hOGEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vY29uc3QgTGV2ZWxzID0gcmVxdWlyZSgnLi9sZXZlbCcpO1xuY2xhc3MgUGxheWVyIHtcbiAgICBjb25zdHJ1Y3RvciAodHlwZSkge1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICB0aGlzLnBsYXllclVuaXRzID0gW107XG4gICAgfVxuXG4gICAgYXNzaWduVW5pdHModW5pdHMpIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJVbml0cy5jb25jYXQodW5pdHMpO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQbGF5ZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU1BLE1BQU4sQ0FBYTtFQUNUQyxXQUFXLENBQUVDLElBQUYsRUFBUTtJQUNmLEtBQUtBLElBQUwsR0FBWUEsSUFBWjtJQUNBLEtBQUtDLFdBQUwsR0FBbUIsRUFBbkI7RUFDSDs7RUFFREMsV0FBVyxDQUFDQyxLQUFELEVBQVE7SUFDZixLQUFLRixXQUFMLENBQWlCRyxNQUFqQixDQUF3QkQsS0FBeEI7RUFDSDs7QUFSUTs7QUFXYkUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixNQUFqQiJ9\n//# sourceURL=webpack-internal:///./src/player.js\n");

/***/ }),

/***/ "./src/rifleman.js":
/*!*************************!*\
  !*** ./src/rifleman.js ***!
  \*************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\n\nclass Rifleman extends Unit {\n  constructor(name) {\n    let owner = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(\"rifleman\", 10, 5, 1, 3, 3);\n    this.name = name;\n    this.owner = owner;\n  }\n\n}\n\nmodule.exports = Rifleman;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmlmbGVtYW4uanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLDZCQUFELENBQXBCOztBQUNBLE1BQU1DLFFBQU4sU0FBdUJGLElBQXZCLENBQTRCO0VBQ3hCRyxXQUFXLENBQUVDLElBQUYsRUFBc0I7SUFBQSxJQUFkQyxLQUFjLHVFQUFOLElBQU07SUFDN0IsTUFBTSxVQUFOLEVBQWtCLEVBQWxCLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLEVBQStCLENBQS9CO0lBQ0EsS0FBS0QsSUFBTCxHQUFZQSxJQUFaO0lBQ0EsS0FBS0MsS0FBTCxHQUFhQSxLQUFiO0VBQ0g7O0FBTHVCOztBQVE1QkMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTCxRQUFqQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlc3QtcHJvamVjdC8uL3NyYy9yaWZsZW1hbi5qcz8wOTIzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVuaXQgPSByZXF1aXJlKCcuL3VuaXQnKTtcbmNsYXNzIFJpZmxlbWFuIGV4dGVuZHMgVW5pdCB7XG4gICAgY29uc3RydWN0b3IgKG5hbWUsIG93bmVyID0gbnVsbCkge1xuICAgICAgICBzdXBlcihcInJpZmxlbWFuXCIsIDEwLCA1LCAxLCAzLCAzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5vd25lciA9IG93bmVyO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSaWZsZW1hbjsiXSwibmFtZXMiOlsiVW5pdCIsInJlcXVpcmUiLCJSaWZsZW1hbiIsImNvbnN0cnVjdG9yIiwibmFtZSIsIm93bmVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/rifleman.js\n");

/***/ }),

/***/ "./src/sniper.js":
/*!***********************!*\
  !*** ./src/sniper.js ***!
  \***********************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\n\nclass Sniper extends Unit {\n  constructor(name) {\n    let owner = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(\"sniper\", 10, 5, 0, 5, 3);\n    this.name = name;\n    this.owner = owner;\n  }\n\n}\n\nmodule.exports = Sniper;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc25pcGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsbUJBQU8sQ0FBQyw2QkFBRCxDQUFwQjs7QUFFQSxNQUFNQyxNQUFOLFNBQXFCRixJQUFyQixDQUEwQjtFQUN0QkcsV0FBVyxDQUFFQyxJQUFGLEVBQXNCO0lBQUEsSUFBZEMsS0FBYyx1RUFBTixJQUFNO0lBQzdCLE1BQU0sUUFBTixFQUFnQixFQUFoQixFQUFvQixDQUFwQixFQUF1QixDQUF2QixFQUEwQixDQUExQixFQUE2QixDQUE3QjtJQUNBLEtBQUtELElBQUwsR0FBWUEsSUFBWjtJQUNBLEtBQUtDLEtBQUwsR0FBYUEsS0FBYjtFQUNIOztBQUxxQjs7QUFRMUJDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsTUFBakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0LXByb2plY3QvLi9zcmMvc25pcGVyLmpzPzI1MzYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVW5pdCA9IHJlcXVpcmUoJy4vdW5pdCcpO1xuXG5jbGFzcyBTbmlwZXIgZXh0ZW5kcyBVbml0IHtcbiAgICBjb25zdHJ1Y3RvciAobmFtZSwgb3duZXIgPSBudWxsKSB7XG4gICAgICAgIHN1cGVyKFwic25pcGVyXCIsIDEwLCA1LCAwLCA1LCAzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5vd25lciA9IG93bmVyO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTbmlwZXI7XG4iXSwibmFtZXMiOlsiVW5pdCIsInJlcXVpcmUiLCJTbmlwZXIiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJvd25lciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/sniper.js\n");

/***/ }),

/***/ "./src/unit.js":
/*!*********************!*\
  !*** ./src/unit.js ***!
  \*********************/
/***/ (function(module) {

eval("class Unit {\n  constructor(type, health, attack, defense, range, move) {\n    this.type = type;\n    this.health = health;\n    this.attack = attack;\n    this.defense = defense;\n    this.range = range;\n    this.move = move;\n    this.alive = true;\n    this.items = [];\n    this.pos = []; //ammo\n    //clip\n  }\n\n  setAlive(status) {\n    this.alive = status;\n  }\n\n  setPiece(pos) {\n    this.pos = pos;\n  }\n\n  move(newPos) {\n    this.pos = newPos;\n  }\n\n  giveItem(item) {\n    this.items.push(item);\n  }\n\n  isAlive() {\n    return this.alive;\n  }\n\n  takeDamage(dmg) {\n    console.log(\"damage\");\n    this.health = this.health - (dmg - this.defense);\n\n    if (this.health < 0) {\n      this.health = 0;\n    }\n\n    if (this.health === 0) {\n      this.alive = false;\n    }\n  }\n\n}\n\nmodule.exports = Unit;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdW5pdC5qcy5qcyIsIm5hbWVzIjpbIlVuaXQiLCJjb25zdHJ1Y3RvciIsInR5cGUiLCJoZWFsdGgiLCJhdHRhY2siLCJkZWZlbnNlIiwicmFuZ2UiLCJtb3ZlIiwiYWxpdmUiLCJpdGVtcyIsInBvcyIsInNldEFsaXZlIiwic3RhdHVzIiwic2V0UGllY2UiLCJuZXdQb3MiLCJnaXZlSXRlbSIsIml0ZW0iLCJwdXNoIiwiaXNBbGl2ZSIsInRha2VEYW1hZ2UiLCJkbWciLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVzdC1wcm9qZWN0Ly4vc3JjL3VuaXQuanM/MDAyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBVbml0IHtcbiAgICBjb25zdHJ1Y3RvciAodHlwZSwgaGVhbHRoLCBhdHRhY2ssIGRlZmVuc2UsIHJhbmdlLCBtb3ZlKSB7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMuaGVhbHRoID0gaGVhbHRoO1xuICAgICAgICB0aGlzLmF0dGFjayA9IGF0dGFjaztcbiAgICAgICAgdGhpcy5kZWZlbnNlID0gZGVmZW5zZTtcbiAgICAgICAgdGhpcy5yYW5nZSA9IHJhbmdlO1xuICAgICAgICB0aGlzLm1vdmUgPSBtb3ZlO1xuICAgICAgICB0aGlzLmFsaXZlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5pdGVtcyA9IFtdO1xuICAgICAgICB0aGlzLnBvcyA9IFtdO1xuICAgICAgICAvL2FtbW9cbiAgICAgICAgLy9jbGlwXG4gICAgfVxuXG4gICAgc2V0QWxpdmUoc3RhdHVzKSB7XG4gICAgICAgIHRoaXMuYWxpdmUgPSBzdGF0dXM7XG4gICAgfVxuXG4gICAgc2V0UGllY2UocG9zKSB7XG4gICAgICAgIHRoaXMucG9zID0gcG9zO1xuICAgIH1cblxuICAgIG1vdmUobmV3UG9zKSB7XG4gICAgICAgIHRoaXMucG9zID0gbmV3UG9zO1xuICAgIH1cblxuICAgIGdpdmVJdGVtKGl0ZW0pIHtcbiAgICAgICAgdGhpcy5pdGVtcy5wdXNoKGl0ZW0pO1xuICAgIH1cblxuICAgIGlzQWxpdmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFsaXZlO1xuICAgIH1cblxuICAgIHRha2VEYW1hZ2UoZG1nKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiZGFtYWdlXCIpO1xuICAgICAgICB0aGlzLmhlYWx0aCA9IHRoaXMuaGVhbHRoIC0gKGRtZyAtIHRoaXMuZGVmZW5zZSk7XG4gICAgICAgIGlmICh0aGlzLmhlYWx0aCA8IDApIHtcbiAgICAgICAgICAgIHRoaXMuaGVhbHRoID0gMDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5oZWFsdGggPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuYWxpdmUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBVbml0OyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBTixDQUFXO0VBQ1BDLFdBQVcsQ0FBRUMsSUFBRixFQUFRQyxNQUFSLEVBQWdCQyxNQUFoQixFQUF3QkMsT0FBeEIsRUFBaUNDLEtBQWpDLEVBQXdDQyxJQUF4QyxFQUE4QztJQUNyRCxLQUFLTCxJQUFMLEdBQVlBLElBQVo7SUFDQSxLQUFLQyxNQUFMLEdBQWNBLE1BQWQ7SUFDQSxLQUFLQyxNQUFMLEdBQWNBLE1BQWQ7SUFDQSxLQUFLQyxPQUFMLEdBQWVBLE9BQWY7SUFDQSxLQUFLQyxLQUFMLEdBQWFBLEtBQWI7SUFDQSxLQUFLQyxJQUFMLEdBQVlBLElBQVo7SUFDQSxLQUFLQyxLQUFMLEdBQWEsSUFBYjtJQUNBLEtBQUtDLEtBQUwsR0FBYSxFQUFiO0lBQ0EsS0FBS0MsR0FBTCxHQUFXLEVBQVgsQ0FUcUQsQ0FVckQ7SUFDQTtFQUNIOztFQUVEQyxRQUFRLENBQUNDLE1BQUQsRUFBUztJQUNiLEtBQUtKLEtBQUwsR0FBYUksTUFBYjtFQUNIOztFQUVEQyxRQUFRLENBQUNILEdBQUQsRUFBTTtJQUNWLEtBQUtBLEdBQUwsR0FBV0EsR0FBWDtFQUNIOztFQUVESCxJQUFJLENBQUNPLE1BQUQsRUFBUztJQUNULEtBQUtKLEdBQUwsR0FBV0ksTUFBWDtFQUNIOztFQUVEQyxRQUFRLENBQUNDLElBQUQsRUFBTztJQUNYLEtBQUtQLEtBQUwsQ0FBV1EsSUFBWCxDQUFnQkQsSUFBaEI7RUFDSDs7RUFFREUsT0FBTyxHQUFHO0lBQ04sT0FBTyxLQUFLVixLQUFaO0VBQ0g7O0VBRURXLFVBQVUsQ0FBQ0MsR0FBRCxFQUFNO0lBQ1pDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFFBQVo7SUFDQSxLQUFLbkIsTUFBTCxHQUFjLEtBQUtBLE1BQUwsSUFBZWlCLEdBQUcsR0FBRyxLQUFLZixPQUExQixDQUFkOztJQUNBLElBQUksS0FBS0YsTUFBTCxHQUFjLENBQWxCLEVBQXFCO01BQ2pCLEtBQUtBLE1BQUwsR0FBYyxDQUFkO0lBQ0g7O0lBQ0QsSUFBSSxLQUFLQSxNQUFMLEtBQWdCLENBQXBCLEVBQXVCO01BQ25CLEtBQUtLLEtBQUwsR0FBYSxLQUFiO0lBQ0g7RUFDSjs7QUE1Q007O0FBK0NYZSxNQUFNLENBQUNDLE9BQVAsR0FBaUJ4QixJQUFqQiJ9\n//# sourceURL=webpack-internal:///./src/unit.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0LXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;