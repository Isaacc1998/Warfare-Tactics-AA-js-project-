/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/atGunner.js":
/*!*************************!*\
  !*** ./src/atGunner.js ***!
  \*************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\n\nclass AtGunner extends Unit {\n  constructor(name) {\n    let owner = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(\"atGunner\", 11, 8, 1, 3, 2);\n    this.name = name;\n    this.owner = owner;\n  }\n\n}\n\nmodule.exports = AtGunner;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXRHdW5uZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLDZCQUFELENBQXBCOztBQUVBLE1BQU1DLFFBQU4sU0FBdUJGLElBQXZCLENBQTRCO0VBQ3hCRyxXQUFXLENBQUVDLElBQUYsRUFBc0I7SUFBQSxJQUFkQyxLQUFjLHVFQUFOLElBQU07SUFDN0IsTUFBTSxVQUFOLEVBQWtCLEVBQWxCLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLEVBQStCLENBQS9CO0lBQ0EsS0FBS0QsSUFBTCxHQUFZQSxJQUFaO0lBQ0EsS0FBS0MsS0FBTCxHQUFhQSxLQUFiO0VBRUg7O0FBTnVCOztBQVM1QkMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTCxRQUFqQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlc3QtcHJvamVjdC8uL3NyYy9hdEd1bm5lci5qcz80ZGIyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVuaXQgPSByZXF1aXJlKCcuL3VuaXQnKTtcblxuY2xhc3MgQXRHdW5uZXIgZXh0ZW5kcyBVbml0IHtcbiAgICBjb25zdHJ1Y3RvciAobmFtZSwgb3duZXIgPSBudWxsKSB7XG4gICAgICAgIHN1cGVyKFwiYXRHdW5uZXJcIiwgMTEsIDgsIDEsIDMsIDIpO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLm93bmVyID0gb3duZXI7XG5cbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQXRHdW5uZXI7XG4iXSwibmFtZXMiOlsiVW5pdCIsInJlcXVpcmUiLCJBdEd1bm5lciIsImNvbnN0cnVjdG9yIiwibmFtZSIsIm93bmVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/atGunner.js\n");

/***/ }),

/***/ "./src/board.js":
/*!**********************!*\
  !*** ./src/board.js ***!
  \**********************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst Player = __webpack_require__(/*! ./player */ \"./src/player.js\");\n\nconst Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\n\nconst Levels = __webpack_require__(/*! ./levels */ \"./src/levels.js\");\n\nlet count = document.querySelector(\".tCount\");\nlet name = document.querySelector(\".name\");\n\nclass Board {\n  constructor(grid, playerUnits, enemyUnits) {\n    _defineProperty(this, \"moveunit\", _ref => {\n      let {\n        keyCode\n      } = _ref;\n\n      if (keyCode === 37) {\n        if (this.isValidMove(-1, 0)) {\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1] - 1, this.unitTurn);\n          this.unitTurn.pos[1]--;\n        }\n      } else if (keyCode === 39) {\n        if (this.isValidMove(1, 0)) {\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1] + 1, this.unitTurn);\n          this.unitTurn.pos[1]++;\n        }\n      } else if (keyCode === 38) {\n        if (this.isValidMove(0, -1)) {\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n          this.updateGrid(this.unitTurn.pos[0] - 1, this.unitTurn.pos[1], this.unitTurn);\n          this.unitTurn.pos[0]--;\n        }\n      } else if (keyCode === 40) {\n        if (this.isValidMove(0, 1)) {\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n          this.updateGrid(this.unitTurn.pos[0] + 1, this.unitTurn.pos[1], this.unitTurn);\n          this.unitTurn.pos[0]++;\n        }\n      }\n    });\n\n    this.grid = grid; //this.objectGrid = this.createObjectGrid();\n\n    this.units = playerUnits;\n    this.enemies = enemyUnits;\n    this.unitOrder = this.setTurnOrder();\n    this.currentTurn = 0;\n    this.unitTurn = this.unitOrder[this.currentTurn % this.unitOrder.length];\n    this.unitGrid = new Array(10);\n\n    for (let i = 0; i < this.unitGrid.length; i++) {\n      this.unitGrid[i] = new Array(10);\n    }\n\n    for (let i = 0; i < this.unitGrid.length; i++) {\n      for (let j = 0; j < this.unitGrid[i].length; j++) {\n        this.unitGrid[i][j] = 0;\n      }\n    } // this.battlefield = document.createElement(\"canvas\");\n    // this.battlefield.id = \"battlefield\";\n    // this.battlefieldContext = this.battlefield.getContext('2d');\n    //this.battlefield = this.draw(\"battlefield\");\n    // this.statusScreen = this.draw(\"status\");\n    // this.moveScreen = this.draw(\"moveOption\");\n    //this.drawGrid();\n    //this.squareSize = 67;\n\n\n    this.battlefield = this.drawBattlefield(0, 0, \"#444\");\n    this.cellSize = 67;\n    this.padding = 2;\n    this.setPos(); // this.unitX = 1;\n    // this.unitY = 1;\n    //this.unit = { x: this.unitX, y: this.unitY};\n    //this.unitGrid[this.unitTurn.pos[0]][this.unitTurn.pos[1]] = this.unitTurn;\n\n    this.tiles = [];\n    this.fillTiles();\n    this.unitImages = [];\n    this.generateUnitImages(); //this.unitContexts = this.createUnitCanvas();\n\n    this.generateHTMLsquares();\n    this.generateHTMLunits();\n  }\n\n  savePositions() {\n    for (let row = 0; row < this.unitGrid.length; row++) {\n      for (let col = 0; col < this.unitGrid[row].length; col++) {\n        if (this.unitGrid[row][col] instanceof Unit) {\n          let unitClick = document.getElementById(`${this.unitGrid[row][col].name}`);\n          unitClick.style.top = row * (this.cellSize + this.padding);\n          unitClick.style.left = col * (this.cellSize + this.padding);\n        }\n      }\n    }\n  }\n\n  generateUnitImages() {\n    let rifleman = new Image();\n    rifleman.src = \"../soldiers/Hero_Rifle.png\";\n    this.unitImages.push(rifleman);\n    let sniper = new Image();\n    sniper.src = \"../soldiers/Hero_MachineGun.png\";\n    this.unitImages.push(sniper);\n    let launcher = new Image();\n    launcher.src = \"../soldiers/Hero_GrenadeLauncher.png\";\n    this.unitImages.push(launcher);\n  }\n\n  fillTiles() {\n    let grass = new Image();\n    grass.src = \"../tiles/Tiles/_0003_GrassTiles.png\";\n    this.tiles.push(grass);\n    let dirt = new Image();\n    dirt.src = \"../tiles/Tiles/_0001_DirtTiles.png\";\n    this.tiles.push(dirt);\n    let crate = new Image();\n    crate.src = \"../tiles/crates/TDS04_0018_Box1.png\";\n    this.tiles.push(crate);\n  }\n\n  setPos() {\n    for (let i = 0; i < this.units.length; i++) {\n      this.units[i].setPiece([0, i + 2]);\n      this.unitGrid[0][i + 2] = this.units[i];\n    }\n\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemies[i].setPiece([this.unitGrid.length - 2, i + 4]);\n      this.unitGrid[this.unitGrid.length - 2][i + 4] = this.enemies[i];\n    }\n  }\n\n  isValidMove(x, y) {\n    if ((this.grid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 0 || this.grid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 1) && this.unitGrid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 0) {\n      return true;\n    } //check starting position of units\n\n\n    return false;\n  }\n\n  updateGrid(x, y, value) {\n    this.unitGrid[x][y] = value;\n  }\n\n  getCenter(w, h) {\n    return {\n      x: window.innerWidth / 2 - w / 2 + \"px\",\n      y: window.innerHeight / 2 - h / 2 + \"px\"\n    };\n  }\n\n  createUnitCanvas() {\n    let arr = [];\n\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      let unit = document.createElement(\"canvas\");\n      unit.id = `${this.unitOrder[i].name}`;\n      let unitContext = unit.getContext('2d');\n      document.body.appendChild(unit);\n      let container = document.getElementById('container');\n      container.appendChild(unit);\n      arr.push(unitContext);\n    }\n\n    return arr;\n  }\n\n  drawBattlefield(w, h) {\n    let color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"#949494\";\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.id = \"battle\";\n    this.context = this.canvas.getContext(\"2d\"); // this.canvas.style.width = 680;\n    // this.canvas.style.height = 680;\n\n    this.canvas.style.display = \"inline-block\";\n    this.canvas.style.position = \"relative\";\n    this.canvas.style.background = color;\n    this.canvas.style.right = \"190\";\n    this.canvas.style.bottom = \"686\"; // if (isTransparent) {\n    // \tthis.canvas.style.backgroundColor = \"transparent\";\n    // }\n    // const center = this.getCenter(w, h);\n    // this.canvas.style.marginLeft = center.x;\n    // this.canvas.style.marginTop = center.y;\n    // this.canvas.style.right = 720;\n\n    document.body.appendChild(this.canvas);\n    let container = document.getElementById('container');\n    container.appendChild(this.canvas);\n    return this.context;\n  }\n\n  generateHTMLsquares() {\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        let square = document.createElement('div');\n        square.id = `${this.grid[row][col]}`;\n        square.className = \"square\";\n        square.style.position = \"absolute\";\n        square.style.top = row * (this.cellSize + this.padding);\n        square.style.left = col * (this.cellSize + this.padding);\n        square.style.width = this.cellSize;\n        square.style.height = this.cellSize; // document.body.appendChild(square); \n\n        square.style.zIndex = 100; // this.battlefield.canvas.appendChild(square);\n\n        let squares = document.getElementById('squares');\n        squares.appendChild(square);\n      }\n    }\n  }\n\n  generateHTMLunits() {\n    for (let row = 0; row < this.unitGrid.length; row++) {\n      for (let col = 0; col < this.unitGrid[row].length; col++) {\n        if (this.unitGrid[row][col] instanceof Unit) {\n          let unitClick = document.createElement('div');\n          unitClick.id = `${this.unitGrid[row][col].name}`;\n          unitClick.className = \"unit\";\n          unitClick.style.position = \"absolute\";\n          unitClick.style.top = row * (this.cellSize + this.padding);\n          unitClick.style.left = col * (this.cellSize + this.padding);\n          unitClick.style.width = this.cellSize;\n          unitClick.style.height = this.cellSize;\n          unitClick.style.zIndex = 101;\n          let squares = document.getElementById('squares');\n          squares.appendChild(unitClick);\n        }\n      }\n    }\n  } // renderUnits() {\n  //     for (let i = 0; i < this.unitOrder.length; i++) {\n  //         let unitContext = this.unitContexts[i];\n  //         const w = (this.cellSize + this.padding) * this.grid[0].length - (this.padding);\n  //         const h = (this.cellSize + this.padding) * this.grid.length - (this.padding);\n  //         unitContext.canvas.width = w;\n  //         unitContext.canvas.height = h;\n  //         const center = this.getCenter(w, h);\n  //         unitContext.canvas.style.marginLeft = center.x\n  //         unitContext.canvas.style.marginTop = center.y;\n  //         let image;\n  //         if (this.unitOrder[i].type === \"rifleman\") {\n  //             image = this.unitImages[0];\n  //         } else if (this.unitOrder[i].type === \"sniper\") {\n  //             image = this.unitImages[1];\n  //         } else if (this.unitOrder[i].type === \"atGunner\") {\n  //             image = this.unitImages[2];\n  //         }\n  //         unitContext.drawImage(image, 8, 8, 48, 48, this.unitOrder[i].pos[1] * (this.cellSize + this.padding), this.unitOrder[i].pos[0] * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n  //     }\n  // }\n\n\n  render() {\n    const w = (this.cellSize + this.padding) * this.grid[0].length - this.padding;\n    const h = (this.cellSize + this.padding) * this.grid.length - this.padding;\n    this.battlefield.canvas.width = w;\n    this.battlefield.canvas.height = h;\n    const center = this.getCenter(w, h);\n    this.battlefield.canvas.style.marginLeft = center.x;\n    this.battlefield.canvas.style.marginTop = center.y;\n\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        const val = this.grid[row][col];\n        let image;\n        let sx = 0;\n        let sy = 0;\n\n        if (val === 0) {\n          image = this.tiles[0];\n          sx = 144;\n          sy = 144;\n        } else if (val === 1) {\n          image = this.tiles[1];\n          sx = 144;\n          sy = 144;\n        } else if (val === 3) {\n          image = this.tiles[2];\n          sx = 1;\n          sy = 0;\n        } //drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)\n\n\n        this.battlefield.drawImage(image, sx, sy, 30, 30, col * (this.cellSize + this.padding), row * (this.cellSize + this.padding), this.cellSize, this.cellSize); //create corresponding html box element\n        //let boxElement = document.createElement('div');\n        // this.battlefield.canvas.style.width = this.cellSize;\n        // this.battlefield.canvas.style.height = this.cellSize;\n\n        let x;\n        let y;\n        let image2;\n\n        if (this.unitGrid[row][col] instanceof Unit) {\n          x = this.unitGrid[row][col].pos[1];\n          y = this.unitGrid[row][col].pos[0];\n\n          if (this.unitGrid[row][col].type === \"rifleman\") {\n            image2 = this.unitImages[0];\n          } else if (this.unitGrid[row][col].type === \"sniper\") {\n            image2 = this.unitImages[1];\n          } else if (this.unitGrid[row][col].type === \"atGunner\") {\n            image2 = this.unitImages[2];\n          }\n\n          this.battlefield.drawImage(image2, 8, 8, 48, 48, col * (this.cellSize + this.padding), row * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n        } // unitContext.drawImage(image, 8, 8, 48, 48, this.unitOrder[i].pos[1] * (this.cellSize + this.padding), this.unitOrder[i].pos[0] * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n        // this.battlefield.fillStyle = color;\n        // this.battlefield.fillRect(col * (this.cellSize + this.padding),\n        // row * (this.cellSize + this.padding),\n        // this.cellSize, this.cellSize);\n\n      }\n    }\n  }\n\n  renderOptions() {\n    let context = document.getElementById(\"\");\n    let button1 = document.createElement(\"button\");\n    let button2 = document.createElement(\"button\");\n    let button3 = document.createElement(\"button\");\n    let button4 = document.createElement(\"button\");\n    button1.class = \"move\";\n    button2.class = \"attack\";\n    button3.class = \"items\";\n    button4.class = \"defend\";\n    button1.style.display = \"block\";\n  }\n\n  draw(name) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.id = name;\n    let w = canvas.width;\n    let h = canvas.height;\n    let context = canvas.getContext(\"2d\");\n    document.body.appendChild(canvas); //canvas.style.display = \"none\";\n\n    if (name === \"moveOptions\") {\n      this.renderOptions();\n    }\n\n    return this.context;\n  }\n\n  drawSquare(x, y, w, h, color) {\n    this.battlefieldContext.lineWidth = 1;\n    this.battlefieldContext.fillStyle = color;\n    this.battlefieldContext.fillRect(x, y, w, h);\n    this.battlefieldContext.strokeRect(x, y, w, h);\n  }\n\n  drawGrid() {\n    let x = 0;\n    let y = 0;\n    let w = this.squareSize;\n    let h = this.squareSize;\n\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid.length; j++) {\n        if (this.grid[i][j] === 0) {\n          this.drawSquare(x, y, w, h, \"#d3d3d2\");\n        } else {\n          this.drawSquare(x, y, w, h, \"#111\");\n        }\n\n        x += w;\n      }\n\n      y += h;\n      x = 0;\n    }\n  }\n\n  playerAction() {}\n\n  enemyAction() {//ai functionality\n    //has to click end turn button\n  }\n\n  nextTurn() {\n    if (this.gameEnd()) {//victory or loss screen\n    }\n\n    this.currentTurn++; //console.log(count, 'count')\n\n    count.textContent = this.currentTurn + 1; //have to update unit turn, because constructor only called once \n\n    this.unitTurn = this.unitOrder[this.currentTurn % this.unitOrder.length];\n    name.textContent = `Name: ${this.unitTurn.name}`;\n\n    if (this.unitTurn.type === null) {\n      this.enemyAction();\n    }\n  }\n\n  gameEnd() {\n    if (this.currentTurn === 9) {\n      console.log(\"You lose!\");\n      return true;\n    }\n\n    if (this.won()) {\n      console.log(\"You win!\");\n      return true;\n    } else if (this.lost()) {\n      console.log(\"You lose!\");\n      return true;\n    }\n\n    return false;\n  }\n\n  removeUnit(unit) {\n    index = this.unitOrder.indexOf(unit);\n\n    if (index > -1) {\n      array.splice(index, 1);\n    }\n\n    let x = unit.pos[0];\n    let y = unit.pos[1];\n    this.grid[x][y] = 0;\n\n    if (unit.type === null) {\n      array.splice(this.enemies.indexOf(unit), 1);\n    } else {\n      array.splice(this.units.indexOf(unit), 1);\n    }\n  }\n\n  attack(pos) {\n    let x = pos[0];\n    let y = pos[1];\n\n    if (this.grid[x][y] instanceof Unit && this.grid[x][y].type === null) {\n      this.grid[x][y].takeDamage(this.unitTurn.attack);\n\n      if (this.grid[x][y].alive === false) {\n        this.removeUnit(this.grid[x][y]);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  moveUnit(pos) {\n    let x = pos[0];\n    let y = pos[1];\n    let current = this.unitTurn.pos;\n    let newPos = [current[0] + x, current[1] + y];\n\n    if (this.validMove(newPos)) {\n      this.unitTurn.move(newPos);\n\n      if (this.unitTurn.owner != null) {\n        this.grid[newPos[0]][newPos[1]] = this.unitTurn;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  validMove(pos) {\n    let x = pos[0];\n    let y = pos[1];\n\n    if (x > 9 || x < 0 || y > 9 || y < 0) {\n      return false;\n    }\n\n    if (this.grid[x][y] !== 1 || this.grid[x][y] !== 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  won() {\n    if (this.enemies.length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  lost() {\n    if (this.units.length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  setTurnOrder() {\n    let arr = [];\n    let unitCount = 0;\n    let enemyCount = 0;\n\n    for (let i = 0; i < this.units.length + this.enemies.length; i++) {\n      if (i % 2 === 0) {\n        arr.push(this.units[unitCount]);\n        unitCount++;\n      } else {\n        arr.push(this.enemies[enemyCount]);\n        enemyCount++;\n      }\n    }\n\n    console.log(arr);\n    return arr;\n  }\n\n  shuffleArray(array) {\n    let i = array.length;\n    let rand = i;\n\n    while (i >= 0) {\n      rand = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[rand];\n      array[rand] = temp;\n      i--;\n    }\n\n    return array;\n  }\n\n  renderStatus() {}\n\n  createBoard() {} // createObjectGrid() {\n  //     let newGrid = [...Array(10)].map(e => Array(10));\n  //     for (let i = 0; i < this.grid.length; i++) {\n  //         for (let j = 0; j < this.grid.length; j++) {\n  //             if (this.grid[i][j] === 0) {\n  //                 newGrid[i][j].push(new Plain());\n  //             } else if (this.grid[i][j] === 1) {\n  //                 newGrid[i][j].push(new Wall());\n  //             } else if (this.grid[i][j] === 2) {\n  //                 newGrid[i][j].push();\n  //             } else if (this.grid[i][j] === 3) {\n  //                 newGrid[i][j].push();\n  //             } else if (this.grid[i][j] === 4) {\n  //                 newGrid[i][j].push();\n  //             } else {\n  //                 newGrid[i][j].push();\n  //             }\n  //         }\n  //     }\n  //     return newGrid;\n  // }\n\n\n}\n\n;\nmodule.exports = Board;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O0lBQ0o7O0lBQ0RuQixPQUFPLENBQUNDLEdBQVIsQ0FBWXZELEdBQVo7SUFDQSxPQUFPQSxHQUFQO0VBQ0g7O0VBRUQwRSxZQUFZLENBQUNiLEtBQUQsRUFBUTtJQUNoQixJQUFJdEcsQ0FBQyxHQUFHc0csS0FBSyxDQUFDekcsTUFBZDtJQUNBLElBQUl1SCxJQUFJLEdBQUdwSCxDQUFYOztJQUNBLE9BQU9BLENBQUMsSUFBSSxDQUFaLEVBQWU7TUFDWG9ILElBQUksR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdELElBQUksQ0FBQ0UsTUFBTCxNQUFpQnZILENBQUMsR0FBQyxDQUFuQixDQUFYLENBQVA7TUFDQSxJQUFJd0gsSUFBSSxHQUFHbEIsS0FBSyxDQUFDdEcsQ0FBRCxDQUFoQjtNQUNBc0csS0FBSyxDQUFDdEcsQ0FBRCxDQUFMLEdBQVdzRyxLQUFLLENBQUNjLElBQUQsQ0FBaEI7TUFDQWQsS0FBSyxDQUFDYyxJQUFELENBQUwsR0FBY0ksSUFBZDtNQUNBeEgsQ0FBQztJQUNKOztJQUNELE9BQU9zRyxLQUFQO0VBQ0g7O0VBSURtQixZQUFZLEdBQUcsQ0FFZDs7RUFJREMsV0FBVyxHQUFHLENBRWIsQ0EzaEJPLENBNmhCUjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQWpqQlE7O0FBa2pCWDtBQUlEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI5SSxLQUFqQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlc3QtcHJvamVjdC8uL3NyYy9ib2FyZC5qcz8yM2RiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFBsYXllciA9IHJlcXVpcmUoJy4vcGxheWVyJyk7XG5jb25zdCBVbml0ID0gcmVxdWlyZSgnLi91bml0Jyk7XG5jb25zdCBMZXZlbHMgPSByZXF1aXJlKCcuL2xldmVscycpO1xubGV0IGNvdW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50Q291bnRcIik7XG5sZXQgbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmFtZVwiKTtcbmNsYXNzIEJvYXJkIHtcbiAgICBjb25zdHJ1Y3RvciAoZ3JpZCwgcGxheWVyVW5pdHMsIGVuZW15VW5pdHMpIHtcbiAgICAgICAgdGhpcy5ncmlkID0gZ3JpZDtcbiAgICAgICAgLy90aGlzLm9iamVjdEdyaWQgPSB0aGlzLmNyZWF0ZU9iamVjdEdyaWQoKTtcbiAgICAgICAgdGhpcy51bml0cyA9IHBsYXllclVuaXRzO1xuICAgICAgICB0aGlzLmVuZW1pZXMgPSBlbmVteVVuaXRzO1xuICAgICAgICB0aGlzLnVuaXRPcmRlciA9IHRoaXMuc2V0VHVybk9yZGVyKCk7XG4gICAgICAgIHRoaXMuY3VycmVudFR1cm4gPSAwO1xuICAgICAgICB0aGlzLnVuaXRUdXJuID0gdGhpcy51bml0T3JkZXJbdGhpcy5jdXJyZW50VHVybiAlIHRoaXMudW5pdE9yZGVyLmxlbmd0aF07XG4gICAgICAgIHRoaXMudW5pdEdyaWQgPSBuZXcgQXJyYXkoMTApOyBcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnVuaXRHcmlkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB0aGlzLnVuaXRHcmlkW2ldID0gbmV3IEFycmF5KDEwKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMudW5pdEdyaWQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy51bml0R3JpZFtpXS5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgIHRoaXMudW5pdEdyaWRbaV1bal0gPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gdGhpcy5iYXR0bGVmaWVsZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XG4gICAgICAgIC8vIHRoaXMuYmF0dGxlZmllbGQuaWQgPSBcImJhdHRsZWZpZWxkXCI7XG4gICAgICAgIC8vIHRoaXMuYmF0dGxlZmllbGRDb250ZXh0ID0gdGhpcy5iYXR0bGVmaWVsZC5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICAvL3RoaXMuYmF0dGxlZmllbGQgPSB0aGlzLmRyYXcoXCJiYXR0bGVmaWVsZFwiKTtcbiAgICAgICAgLy8gdGhpcy5zdGF0dXNTY3JlZW4gPSB0aGlzLmRyYXcoXCJzdGF0dXNcIik7XG4gICAgICAgIC8vIHRoaXMubW92ZVNjcmVlbiA9IHRoaXMuZHJhdyhcIm1vdmVPcHRpb25cIik7XG4gICAgICAgIC8vdGhpcy5kcmF3R3JpZCgpO1xuICAgICAgICAvL3RoaXMuc3F1YXJlU2l6ZSA9IDY3O1xuICAgICAgICBcbiAgICAgICAgdGhpcy5iYXR0bGVmaWVsZCA9IHRoaXMuZHJhd0JhdHRsZWZpZWxkKDAsIDAsIFwiIzQ0NFwiKTtcblx0XHR0aGlzLmNlbGxTaXplID0gNjc7XG5cdFx0dGhpcy5wYWRkaW5nID0gMjtcbiAgICAgICAgdGhpcy5zZXRQb3MoKTtcbiAgICAgICAgLy8gdGhpcy51bml0WCA9IDE7XG4gICAgICAgIC8vIHRoaXMudW5pdFkgPSAxO1xuXHRcdC8vdGhpcy51bml0ID0geyB4OiB0aGlzLnVuaXRYLCB5OiB0aGlzLnVuaXRZfTtcblx0XHQvL3RoaXMudW5pdEdyaWRbdGhpcy51bml0VHVybi5wb3NbMF1dW3RoaXMudW5pdFR1cm4ucG9zWzFdXSA9IHRoaXMudW5pdFR1cm47XG4gICAgICAgIHRoaXMudGlsZXMgPSBbXTtcbiAgICAgICAgdGhpcy5maWxsVGlsZXMoKTtcbiAgICAgICAgdGhpcy51bml0SW1hZ2VzID0gW107XG4gICAgICAgIHRoaXMuZ2VuZXJhdGVVbml0SW1hZ2VzKCk7XG4gICAgICAgIC8vdGhpcy51bml0Q29udGV4dHMgPSB0aGlzLmNyZWF0ZVVuaXRDYW52YXMoKTtcblxuICAgICAgICB0aGlzLmdlbmVyYXRlSFRNTHNxdWFyZXMoKTsgIFxuICAgICAgICB0aGlzLmdlbmVyYXRlSFRNTHVuaXRzKCk7XG5cbiAgICB9XG5cbiAgICBzYXZlUG9zaXRpb25zKCkge1xuICAgICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCB0aGlzLnVuaXRHcmlkLmxlbmd0aDsgcm93KyspIHtcblx0XHRcdGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IHRoaXMudW5pdEdyaWRbcm93XS5sZW5ndGg7IGNvbCsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudW5pdEdyaWRbcm93XVtjb2xdIGluc3RhbmNlb2YgVW5pdCkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgdW5pdENsaWNrID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7dGhpcy51bml0R3JpZFtyb3ddW2NvbF0ubmFtZX1gKTtcbiAgICAgICAgICAgICAgICAgICAgdW5pdENsaWNrLnN0eWxlLnRvcCA9IHJvdyAqICh0aGlzLmNlbGxTaXplICsgdGhpcy5wYWRkaW5nKTsgXG4gICAgICAgICAgICAgICAgICAgIHVuaXRDbGljay5zdHlsZS5sZWZ0ID0gY29sICogKHRoaXMuY2VsbFNpemUgKyB0aGlzLnBhZGRpbmcpOyBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZW5lcmF0ZVVuaXRJbWFnZXMoKSB7XG4gICAgICAgIGxldCByaWZsZW1hbiA9IG5ldyBJbWFnZSgpO1xuICAgICAgICByaWZsZW1hbi5zcmMgPSBcIi4uL3NvbGRpZXJzL0hlcm9fUmlmbGUucG5nXCI7XG4gICAgICAgIHRoaXMudW5pdEltYWdlcy5wdXNoKHJpZmxlbWFuKTtcblxuICAgICAgICBsZXQgc25pcGVyID0gbmV3IEltYWdlKCk7XG4gICAgICAgIHNuaXBlci5zcmMgPSBcIi4uL3NvbGRpZXJzL0hlcm9fTWFjaGluZUd1bi5wbmdcIjtcbiAgICAgICAgdGhpcy51bml0SW1hZ2VzLnB1c2goc25pcGVyKTtcblxuICAgICAgICBsZXQgbGF1bmNoZXIgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgbGF1bmNoZXIuc3JjID0gXCIuLi9zb2xkaWVycy9IZXJvX0dyZW5hZGVMYXVuY2hlci5wbmdcIjtcbiAgICAgICAgdGhpcy51bml0SW1hZ2VzLnB1c2gobGF1bmNoZXIpO1xuICAgIH1cblxuICAgIGZpbGxUaWxlcygpIHtcbiAgICAgICAgICAgIGxldCBncmFzcyA9IG5ldyBJbWFnZSgpO1xuICAgICAgICAgICAgZ3Jhc3Muc3JjID0gXCIuLi90aWxlcy9UaWxlcy9fMDAwM19HcmFzc1RpbGVzLnBuZ1wiO1xuICAgICAgICAgICAgdGhpcy50aWxlcy5wdXNoKGdyYXNzKTtcblxuICAgICAgICAgICAgbGV0IGRpcnQgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgICAgIGRpcnQuc3JjID0gXCIuLi90aWxlcy9UaWxlcy9fMDAwMV9EaXJ0VGlsZXMucG5nXCI7XG4gICAgICAgICAgICB0aGlzLnRpbGVzLnB1c2goZGlydCk7XG5cbiAgICAgICAgICAgIGxldCBjcmF0ZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICAgICAgY3JhdGUuc3JjID0gXCIuLi90aWxlcy9jcmF0ZXMvVERTMDRfMDAxOF9Cb3gxLnBuZ1wiO1xuICAgICAgICAgICAgdGhpcy50aWxlcy5wdXNoKGNyYXRlKTtcbiAgICB9XG5cbiAgICBzZXRQb3MoKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy51bml0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy51bml0c1tpXS5zZXRQaWVjZShbMCwgaSsyXSk7XG4gICAgICAgICAgICB0aGlzLnVuaXRHcmlkWzBdW2krMl0gPSB0aGlzLnVuaXRzW2ldO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmVuZW1pZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuZW5lbWllc1tpXS5zZXRQaWVjZShbdGhpcy51bml0R3JpZC5sZW5ndGgtMiwgaSs0XSk7XG4gICAgICAgICAgICB0aGlzLnVuaXRHcmlkW3RoaXMudW5pdEdyaWQubGVuZ3RoLTJdW2krNF0gPSB0aGlzLmVuZW1pZXNbaV07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpc1ZhbGlkTW92ZSh4LCB5KSB7XG4gICAgICAgIGlmICgodGhpcy5ncmlkW3RoaXMudW5pdFR1cm4ucG9zWzBdICsgeV1bdGhpcy51bml0VHVybi5wb3NbMV0gKyB4XSA9PT0gMCB8fCB0aGlzLmdyaWRbdGhpcy51bml0VHVybi5wb3NbMF0gKyB5XVt0aGlzLnVuaXRUdXJuLnBvc1sxXSArIHhdID09PSAxKSAmJiB0aGlzLnVuaXRHcmlkW3RoaXMudW5pdFR1cm4ucG9zWzBdICsgeV1bdGhpcy51bml0VHVybi5wb3NbMV0gKyB4XSA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgLy9jaGVjayBzdGFydGluZyBwb3NpdGlvbiBvZiB1bml0c1xuICAgICAgICBcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuICAgIHVwZGF0ZUdyaWQoeCwgeSwgdmFsdWUpIHtcbiAgICAgICAgdGhpcy51bml0R3JpZFt4XVt5XSA9IHZhbHVlO1xuICAgIH1cblxuICAgIG1vdmV1bml0ID0gKCB7IGtleUNvZGUgfSApID0+IHtcblx0XHRpZiAoa2V5Q29kZSA9PT0gMzcpIHtcblx0XHRcdGlmICh0aGlzLmlzVmFsaWRNb3ZlKC0xLCAwKSkge1xuXHRcdFx0IHRoaXMudXBkYXRlR3JpZCh0aGlzLnVuaXRUdXJuLnBvc1swXSwgdGhpcy51bml0VHVybi5wb3NbMV0sIDApO1xuXHRcdFx0IHRoaXMudXBkYXRlR3JpZCh0aGlzLnVuaXRUdXJuLnBvc1swXSwgdGhpcy51bml0VHVybi5wb3NbMV0gLSAxLCB0aGlzLnVuaXRUdXJuKTtcblx0XHRcdCB0aGlzLnVuaXRUdXJuLnBvc1sxXSAtLTtcdCBcblx0XHQgfVxuXHRcdH0gZWxzZSBpZiAoa2V5Q29kZSA9PT0gMzkpIHtcblx0XHRcdGlmICh0aGlzLmlzVmFsaWRNb3ZlKDEsIDApKSB7XG5cdFx0XHRcdHRoaXMudXBkYXRlR3JpZCh0aGlzLnVuaXRUdXJuLnBvc1swXSwgdGhpcy51bml0VHVybi5wb3NbMV0sIDApO1xuIFx0XHRcdCBcdHRoaXMudXBkYXRlR3JpZCh0aGlzLnVuaXRUdXJuLnBvc1swXSwgdGhpcy51bml0VHVybi5wb3NbMV0gKyAxLCB0aGlzLnVuaXRUdXJuKTtcblx0XHRcdFx0dGhpcy51bml0VHVybi5wb3NbMV0gKys7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIGlmIChrZXlDb2RlID09PSAzOCkge1xuXHRcdFx0aWYgKHRoaXMuaXNWYWxpZE1vdmUoMCwgLTEpKSB7XG5cdFx0XHRcdHRoaXMudXBkYXRlR3JpZCh0aGlzLnVuaXRUdXJuLnBvc1swXSwgdGhpcy51bml0VHVybi5wb3NbMV0sIDApO1xuIFx0XHRcdCBcdHRoaXMudXBkYXRlR3JpZCh0aGlzLnVuaXRUdXJuLnBvc1swXSAtIDEsIHRoaXMudW5pdFR1cm4ucG9zWzFdLCB0aGlzLnVuaXRUdXJuKTtcblx0XHRcdFx0dGhpcy51bml0VHVybi5wb3NbMF0gLS07XG5cdFx0XHR9XG5cdFx0fSBlbHNlIGlmIChrZXlDb2RlID09PSA0MCkge1xuXHRcdFx0aWYgKHRoaXMuaXNWYWxpZE1vdmUoMCwgMSkpIHtcblx0XHRcdFx0dGhpcy51cGRhdGVHcmlkKHRoaXMudW5pdFR1cm4ucG9zWzBdLCB0aGlzLnVuaXRUdXJuLnBvc1sxXSwgMCk7XG4gXHRcdFx0IFx0dGhpcy51cGRhdGVHcmlkKHRoaXMudW5pdFR1cm4ucG9zWzBdICsgMSwgdGhpcy51bml0VHVybi5wb3NbMV0sIHRoaXMudW5pdFR1cm4pO1xuXHRcdFx0XHR0aGlzLnVuaXRUdXJuLnBvc1swXSArKztcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRnZXRDZW50ZXIodywgaCkge1xuXHRcdHJldHVybiB7XG5cdFx0XHR4OiB3aW5kb3cuaW5uZXJXaWR0aCAvIDIgLSB3IC8gMiArIFwicHhcIixcblx0XHRcdHk6IHdpbmRvdy5pbm5lckhlaWdodCAvIDIgLSBoIC8gMiArIFwicHhcIlxuXHRcdH07XG5cdH1cblxuICAgIGNyZWF0ZVVuaXRDYW52YXMoKSB7XG4gICAgICAgIGxldCBhcnIgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnVuaXRPcmRlci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbGV0IHVuaXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuICAgICAgICAgICAgdW5pdC5pZCA9IGAke3RoaXMudW5pdE9yZGVyW2ldLm5hbWV9YDtcbiAgICAgICAgICAgIGxldCB1bml0Q29udGV4dCA9IHVuaXQuZ2V0Q29udGV4dCgnMmQnKTtcblxuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh1bml0KTsgXG4gICAgICAgICAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRhaW5lcicpO1xuICAgICAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHVuaXQpO1xuICAgICAgICAgICAgYXJyLnB1c2godW5pdENvbnRleHQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhcnI7XG4gICAgfVxuXG5cdGRyYXdCYXR0bGVmaWVsZCh3LCBoLCBjb2xvciA9IFwiIzk0OTQ5NFwiKSB7XG5cdFx0dGhpcy5jYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuICAgICAgICB0aGlzLmNhbnZhcy5pZCA9IFwiYmF0dGxlXCI7XG5cdFx0dGhpcy5jb250ZXh0ID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuXHRcdC8vIHRoaXMuY2FudmFzLnN0eWxlLndpZHRoID0gNjgwO1xuICAgICAgICAvLyB0aGlzLmNhbnZhcy5zdHlsZS5oZWlnaHQgPSA2ODA7XG4gICAgICAgIHRoaXMuY2FudmFzLnN0eWxlLmRpc3BsYXkgPSBcImlubGluZS1ibG9ja1wiXG5cdFx0dGhpcy5jYW52YXMuc3R5bGUucG9zaXRpb24gPSBcInJlbGF0aXZlXCI7XG5cdFx0dGhpcy5jYW52YXMuc3R5bGUuYmFja2dyb3VuZCA9IGNvbG9yO1xuICAgICAgICB0aGlzLmNhbnZhcy5zdHlsZS5yaWdodCA9IFwiMTkwXCI7XG4gICAgICAgIHRoaXMuY2FudmFzLnN0eWxlLmJvdHRvbSA9IFwiNjg2XCI7XG5cblxuXG5cdFx0Ly8gaWYgKGlzVHJhbnNwYXJlbnQpIHtcblx0XHQvLyBcdHRoaXMuY2FudmFzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwidHJhbnNwYXJlbnRcIjtcblx0XHQvLyB9XG5cblx0XHQvLyBjb25zdCBjZW50ZXIgPSB0aGlzLmdldENlbnRlcih3LCBoKTtcblx0XHQvLyB0aGlzLmNhbnZhcy5zdHlsZS5tYXJnaW5MZWZ0ID0gY2VudGVyLng7XG5cdFx0Ly8gdGhpcy5jYW52YXMuc3R5bGUubWFyZ2luVG9wID0gY2VudGVyLnk7XG5cdFx0Ly8gdGhpcy5jYW52YXMuc3R5bGUucmlnaHQgPSA3MjA7XG4gICAgICAgIFxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuY2FudmFzKTsgXG4gICAgICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGFpbmVyJyk7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLmNhbnZhcyk7XG5cblx0XHRyZXR1cm4gdGhpcy5jb250ZXh0O1xuXHR9XG5cbiAgICBnZW5lcmF0ZUhUTUxzcXVhcmVzKCkge1xuICAgICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCB0aGlzLmdyaWQubGVuZ3RoOyByb3crKykge1xuXHRcdFx0Zm9yIChsZXQgY29sID0gMDsgY29sIDwgdGhpcy5ncmlkW3Jvd10ubGVuZ3RoOyBjb2wrKykge1xuICAgICAgICAgICAgICAgIGxldCBzcXVhcmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuaWQgPSBgJHt0aGlzLmdyaWRbcm93XVtjb2xdfWA7XG4gICAgICAgICAgICAgICAgc3F1YXJlLmNsYXNzTmFtZSA9IFwic3F1YXJlXCI7XG4gICAgICAgICAgICAgICAgc3F1YXJlLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICAgICAgICAgICAgICAgIHNxdWFyZS5zdHlsZS50b3AgPSByb3cgKiAodGhpcy5jZWxsU2l6ZSArIHRoaXMucGFkZGluZyk7IFxuICAgICAgICAgICAgICAgIHNxdWFyZS5zdHlsZS5sZWZ0ID0gY29sICogKHRoaXMuY2VsbFNpemUgKyB0aGlzLnBhZGRpbmcpOyBcbiAgICAgICAgICAgICAgICBzcXVhcmUuc3R5bGUud2lkdGggPSB0aGlzLmNlbGxTaXplO1xuICAgICAgICAgICAgICAgIHNxdWFyZS5zdHlsZS5oZWlnaHQgPSB0aGlzLmNlbGxTaXplO1xuICAgICAgICAgICAgICAgIC8vIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc3F1YXJlKTsgXG4gICAgICAgICAgICAgICAgc3F1YXJlLnN0eWxlLnpJbmRleCA9IDEwMDtcbiAgICAgICAgICAgICAgICAvLyB0aGlzLmJhdHRsZWZpZWxkLmNhbnZhcy5hcHBlbmRDaGlsZChzcXVhcmUpO1xuICAgICAgICAgICAgICAgIGxldCBzcXVhcmVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NxdWFyZXMnKTtcbiAgICAgICAgICAgICAgICBzcXVhcmVzLmFwcGVuZENoaWxkKHNxdWFyZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZW5lcmF0ZUhUTUx1bml0cygpIHtcbiAgICAgICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgdGhpcy51bml0R3JpZC5sZW5ndGg7IHJvdysrKSB7XG5cdFx0XHRmb3IgKGxldCBjb2wgPSAwOyBjb2wgPCB0aGlzLnVuaXRHcmlkW3Jvd10ubGVuZ3RoOyBjb2wrKykge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnVuaXRHcmlkW3Jvd11bY29sXSBpbnN0YW5jZW9mIFVuaXQpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHVuaXRDbGljayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgICAgICB1bml0Q2xpY2suaWQgPSBgJHt0aGlzLnVuaXRHcmlkW3Jvd11bY29sXS5uYW1lfWA7XG4gICAgICAgICAgICAgICAgICAgIHVuaXRDbGljay5jbGFzc05hbWUgPSBcInVuaXRcIjtcbiAgICAgICAgICAgICAgICAgICAgdW5pdENsaWNrLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICAgICAgICAgICAgICAgICAgICB1bml0Q2xpY2suc3R5bGUudG9wID0gcm93ICogKHRoaXMuY2VsbFNpemUgKyB0aGlzLnBhZGRpbmcpOyBcbiAgICAgICAgICAgICAgICAgICAgdW5pdENsaWNrLnN0eWxlLmxlZnQgPSBjb2wgKiAodGhpcy5jZWxsU2l6ZSArIHRoaXMucGFkZGluZyk7IFxuICAgICAgICAgICAgICAgICAgICB1bml0Q2xpY2suc3R5bGUud2lkdGggPSB0aGlzLmNlbGxTaXplO1xuICAgICAgICAgICAgICAgICAgICB1bml0Q2xpY2suc3R5bGUuaGVpZ2h0ID0gdGhpcy5jZWxsU2l6ZTtcbiAgICAgICAgICAgICAgICAgICAgdW5pdENsaWNrLnN0eWxlLnpJbmRleCA9IDEwMTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHNxdWFyZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3F1YXJlcycpO1xuICAgICAgICAgICAgICAgICAgICBzcXVhcmVzLmFwcGVuZENoaWxkKHVuaXRDbGljayk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuXG4gICAgLy8gcmVuZGVyVW5pdHMoKSB7XG4gICAgLy8gICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy51bml0T3JkZXIubGVuZ3RoOyBpKyspIHtcbiAgICAvLyAgICAgICAgIGxldCB1bml0Q29udGV4dCA9IHRoaXMudW5pdENvbnRleHRzW2ldO1xuXG4gICAgLy8gICAgICAgICBjb25zdCB3ID0gKHRoaXMuY2VsbFNpemUgKyB0aGlzLnBhZGRpbmcpICogdGhpcy5ncmlkWzBdLmxlbmd0aCAtICh0aGlzLnBhZGRpbmcpO1xuICAgIC8vICAgICAgICAgY29uc3QgaCA9ICh0aGlzLmNlbGxTaXplICsgdGhpcy5wYWRkaW5nKSAqIHRoaXMuZ3JpZC5sZW5ndGggLSAodGhpcy5wYWRkaW5nKTtcblxuICAgIC8vICAgICAgICAgdW5pdENvbnRleHQuY2FudmFzLndpZHRoID0gdztcbiAgICAvLyAgICAgICAgIHVuaXRDb250ZXh0LmNhbnZhcy5oZWlnaHQgPSBoO1xuXG4gICAgLy8gICAgICAgICBjb25zdCBjZW50ZXIgPSB0aGlzLmdldENlbnRlcih3LCBoKTtcbiAgICAvLyAgICAgICAgIHVuaXRDb250ZXh0LmNhbnZhcy5zdHlsZS5tYXJnaW5MZWZ0ID0gY2VudGVyLnhcbiAgICAvLyAgICAgICAgIHVuaXRDb250ZXh0LmNhbnZhcy5zdHlsZS5tYXJnaW5Ub3AgPSBjZW50ZXIueTtcblxuICAgIC8vICAgICAgICAgbGV0IGltYWdlO1xuICAgIC8vICAgICAgICAgaWYgKHRoaXMudW5pdE9yZGVyW2ldLnR5cGUgPT09IFwicmlmbGVtYW5cIikge1xuICAgIC8vICAgICAgICAgICAgIGltYWdlID0gdGhpcy51bml0SW1hZ2VzWzBdO1xuICAgIC8vICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnVuaXRPcmRlcltpXS50eXBlID09PSBcInNuaXBlclwiKSB7XG4gICAgLy8gICAgICAgICAgICAgaW1hZ2UgPSB0aGlzLnVuaXRJbWFnZXNbMV07XG4gICAgLy8gICAgICAgICB9IGVsc2UgaWYgKHRoaXMudW5pdE9yZGVyW2ldLnR5cGUgPT09IFwiYXRHdW5uZXJcIikge1xuICAgIC8vICAgICAgICAgICAgIGltYWdlID0gdGhpcy51bml0SW1hZ2VzWzJdO1xuICAgIC8vICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgLy8gICAgICAgICB1bml0Q29udGV4dC5kcmF3SW1hZ2UoaW1hZ2UsIDgsIDgsIDQ4LCA0OCwgdGhpcy51bml0T3JkZXJbaV0ucG9zWzFdICogKHRoaXMuY2VsbFNpemUgKyB0aGlzLnBhZGRpbmcpLCB0aGlzLnVuaXRPcmRlcltpXS5wb3NbMF0gKiAodGhpcy5jZWxsU2l6ZSArIHRoaXMucGFkZGluZyksIHRoaXMuY2VsbFNpemUsIHRoaXMuY2VsbFNpemUpO1xuICAgIC8vICAgICB9XG4gICAgLy8gfVxuXG5cdHJlbmRlcigpIHtcblx0XHRjb25zdCB3ID0gKHRoaXMuY2VsbFNpemUgKyB0aGlzLnBhZGRpbmcpICogdGhpcy5ncmlkWzBdLmxlbmd0aCAtICh0aGlzLnBhZGRpbmcpO1xuXHRcdGNvbnN0IGggPSAodGhpcy5jZWxsU2l6ZSArIHRoaXMucGFkZGluZykgKiB0aGlzLmdyaWQubGVuZ3RoIC0gKHRoaXMucGFkZGluZyk7XG5cblx0XHR0aGlzLmJhdHRsZWZpZWxkLmNhbnZhcy53aWR0aCA9IHc7XG5cdFx0dGhpcy5iYXR0bGVmaWVsZC5jYW52YXMuaGVpZ2h0ID0gaDtcblxuXHRcdGNvbnN0IGNlbnRlciA9IHRoaXMuZ2V0Q2VudGVyKHcsIGgpO1xuXHRcdHRoaXMuYmF0dGxlZmllbGQuY2FudmFzLnN0eWxlLm1hcmdpbkxlZnQgPSBjZW50ZXIueFxuXHRcdHRoaXMuYmF0dGxlZmllbGQuY2FudmFzLnN0eWxlLm1hcmdpblRvcCA9IGNlbnRlci55O1xuXG5cdFx0Zm9yIChsZXQgcm93ID0gMDsgcm93IDwgdGhpcy5ncmlkLmxlbmd0aDsgcm93KyspIHtcblx0XHRcdGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IHRoaXMuZ3JpZFtyb3ddLmxlbmd0aDsgY29sKyspIHtcblx0XHRcdFx0Y29uc3QgdmFsID0gdGhpcy5ncmlkW3Jvd11bY29sXTtcblxuICAgICAgICAgICAgICAgIGxldCBpbWFnZTtcbiAgICAgICAgICAgICAgICBsZXQgc3ggPSAwO1xuICAgICAgICAgICAgICAgIGxldCBzeSA9IDA7XG5cdFx0XHRcdGlmICh2YWwgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2UgPSB0aGlzLnRpbGVzWzBdO1xuICAgICAgICAgICAgICAgICAgICBzeCA9IDE0NDtcbiAgICAgICAgICAgICAgICAgICAgc3kgPSAxNDQ7XG5cdFx0XHRcdH0gZWxzZSBpZiAodmFsID09PSAxKSB7XG5cdFx0XHRcdFx0aW1hZ2UgPSB0aGlzLnRpbGVzWzFdO1xuICAgICAgICAgICAgICAgICAgICBzeCA9IDE0NDtcbiAgICAgICAgICAgICAgICAgICAgc3kgPSAxNDQ7XG5cdFx0XHRcdH0gZWxzZSBpZih2YWwgPT09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2UgPSB0aGlzLnRpbGVzWzJdO1xuICAgICAgICAgICAgICAgICAgICBzeCA9IDE7XG4gICAgICAgICAgICAgICAgICAgIHN5ID0gMDtcbiAgICAgICAgICAgICAgICB9IFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vZHJhd0ltYWdlKGltYWdlLCBzeCwgc3ksIHNXaWR0aCwgc0hlaWdodCwgZHgsIGR5LCBkV2lkdGgsIGRIZWlnaHQpXG4gICAgICAgICAgICAgICAgdGhpcy5iYXR0bGVmaWVsZC5kcmF3SW1hZ2UoaW1hZ2UsIHN4LCBzeSwgMzAsIDMwLCBjb2wgKiAodGhpcy5jZWxsU2l6ZSArIHRoaXMucGFkZGluZyksIHJvdyAqICh0aGlzLmNlbGxTaXplICsgdGhpcy5wYWRkaW5nKSwgdGhpcy5jZWxsU2l6ZSwgdGhpcy5jZWxsU2l6ZSk7XG4gICAgICAgICAgICAgICAgLy9jcmVhdGUgY29ycmVzcG9uZGluZyBodG1sIGJveCBlbGVtZW50XG4gICAgICAgICAgICAgICAgLy9sZXQgYm94RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgIC8vIHRoaXMuYmF0dGxlZmllbGQuY2FudmFzLnN0eWxlLndpZHRoID0gdGhpcy5jZWxsU2l6ZTtcbiAgICAgICAgICAgICAgICAvLyB0aGlzLmJhdHRsZWZpZWxkLmNhbnZhcy5zdHlsZS5oZWlnaHQgPSB0aGlzLmNlbGxTaXplO1xuICAgICAgICAgICAgICAgIGxldCB4O1xuICAgICAgICAgICAgICAgIGxldCB5O1xuICAgICAgICAgICAgICAgIGxldCBpbWFnZTI7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudW5pdEdyaWRbcm93XVtjb2xdIGluc3RhbmNlb2YgVW5pdCkge1xuICAgICAgICAgICAgICAgICAgICB4ID0gdGhpcy51bml0R3JpZFtyb3ddW2NvbF0ucG9zWzFdO1xuICAgICAgICAgICAgICAgICAgICB5ID0gdGhpcy51bml0R3JpZFtyb3ddW2NvbF0ucG9zWzBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMudW5pdEdyaWRbcm93XVtjb2xdLnR5cGUgPT09IFwicmlmbGVtYW5cIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlMiA9IHRoaXMudW5pdEltYWdlc1swXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy51bml0R3JpZFtyb3ddW2NvbF0udHlwZSA9PT0gXCJzbmlwZXJcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlMiA9IHRoaXMudW5pdEltYWdlc1sxXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy51bml0R3JpZFtyb3ddW2NvbF0udHlwZSA9PT0gXCJhdEd1bm5lclwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2UyID0gdGhpcy51bml0SW1hZ2VzWzJdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmJhdHRsZWZpZWxkLmRyYXdJbWFnZShpbWFnZTIsIDgsIDgsIDQ4LCA0OCwgY29sICogKHRoaXMuY2VsbFNpemUgKyB0aGlzLnBhZGRpbmcpLCByb3cgKiAodGhpcy5jZWxsU2l6ZSArIHRoaXMucGFkZGluZyksIHRoaXMuY2VsbFNpemUsIHRoaXMuY2VsbFNpemUpXG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gdW5pdENvbnRleHQuZHJhd0ltYWdlKGltYWdlLCA4LCA4LCA0OCwgNDgsIHRoaXMudW5pdE9yZGVyW2ldLnBvc1sxXSAqICh0aGlzLmNlbGxTaXplICsgdGhpcy5wYWRkaW5nKSwgdGhpcy51bml0T3JkZXJbaV0ucG9zWzBdICogKHRoaXMuY2VsbFNpemUgKyB0aGlzLnBhZGRpbmcpLCB0aGlzLmNlbGxTaXplLCB0aGlzLmNlbGxTaXplKTtcblxuXG5cdFx0XHRcdC8vIHRoaXMuYmF0dGxlZmllbGQuZmlsbFN0eWxlID0gY29sb3I7XG5cdFx0XHRcdC8vIHRoaXMuYmF0dGxlZmllbGQuZmlsbFJlY3QoY29sICogKHRoaXMuY2VsbFNpemUgKyB0aGlzLnBhZGRpbmcpLFxuXHRcdFx0XHQvLyByb3cgKiAodGhpcy5jZWxsU2l6ZSArIHRoaXMucGFkZGluZyksXG5cdFx0XHRcdC8vIHRoaXMuY2VsbFNpemUsIHRoaXMuY2VsbFNpemUpO1xuXHRcdFx0fVxuXHRcdH1cbiAgICB9XG5cblxuXG4gICAgcmVuZGVyT3B0aW9ucygpIHtcbiAgICAgICAgbGV0IGNvbnRleHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlwiKTtcbiAgICAgICAgbGV0IGJ1dHRvbjEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgICAgICBsZXQgYnV0dG9uMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGxldCBidXR0b24zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICAgICAgbGV0IGJ1dHRvbjQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuXG4gICAgICAgIGJ1dHRvbjEuY2xhc3MgPSBcIm1vdmVcIjtcbiAgICAgICAgYnV0dG9uMi5jbGFzcyA9IFwiYXR0YWNrXCI7XG4gICAgICAgIGJ1dHRvbjMuY2xhc3MgPSBcIml0ZW1zXCI7XG4gICAgICAgIGJ1dHRvbjQuY2xhc3MgPSBcImRlZmVuZFwiO1xuXG4gICAgICAgIGJ1dHRvbjEuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICB9XG5cblxuXG4gICAgZHJhdyhuYW1lKSB7XG4gICAgICAgIGxldCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuICAgICAgICBjYW52YXMuaWQgPSBuYW1lOyBcbiAgICAgICAgbGV0IHcgPSBjYW52YXMud2lkdGg7XG4gICAgICAgIGxldCBoID0gY2FudmFzLmhlaWdodDtcbiAgICAgICAgbGV0IGNvbnRleHQgPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNhbnZhcyk7XG4gICAgICAgIC8vY2FudmFzLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgaWYgKG5hbWUgPT09IFwibW92ZU9wdGlvbnNcIikge1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJPcHRpb25zKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGV4dDtcbiAgICB9XG5cbiAgICBkcmF3U3F1YXJlKHgsIHksIHcsIGgsIGNvbG9yKSB7XG4gICAgICAgIHRoaXMuYmF0dGxlZmllbGRDb250ZXh0LmxpbmVXaWR0aCA9IDE7XG4gICAgICAgIHRoaXMuYmF0dGxlZmllbGRDb250ZXh0LmZpbGxTdHlsZSA9IGNvbG9yO1xuICAgICAgICB0aGlzLmJhdHRsZWZpZWxkQ29udGV4dC5maWxsUmVjdCh4LCB5LCB3LCBoKTtcbiAgICAgICAgdGhpcy5iYXR0bGVmaWVsZENvbnRleHQuc3Ryb2tlUmVjdCh4LCB5LCB3LCBoKTtcbiAgICB9XG5cbiAgICBkcmF3R3JpZCgpIHtcbiAgICAgICAgbGV0IHggPSAwO1xuICAgICAgICBsZXQgeSA9IDA7XG4gICAgICAgIGxldCB3ID0gdGhpcy5zcXVhcmVTaXplO1xuICAgICAgICBsZXQgaCA9IHRoaXMuc3F1YXJlU2l6ZTtcblxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgdGhpcy5ncmlkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBmb3IobGV0IGogPSAwOyBqIDwgdGhpcy5ncmlkLmxlbmd0aDsgaisrKXtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5ncmlkW2ldW2pdID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZHJhd1NxdWFyZSh4LCB5LCB3LCBoLCBcIiNkM2QzZDJcIik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kcmF3U3F1YXJlKHgsIHksIHcsIGgsIFwiIzExMVwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgeCArPSB3O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeSArPSBoO1xuICAgICAgICAgICAgeCA9IDA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwbGF5ZXJBY3Rpb24oKSB7XG4gICAgICAgIFxuICAgIH1cblxuICAgIGVuZW15QWN0aW9uKCkge1xuICAgICAgICAvL2FpIGZ1bmN0aW9uYWxpdHlcbiAgICAgICAgLy9oYXMgdG8gY2xpY2sgZW5kIHR1cm4gYnV0dG9uXG4gICAgfVxuXG4gICAgbmV4dFR1cm4oKSB7XG4gICAgICAgIGlmICh0aGlzLmdhbWVFbmQoKSkge1xuICAgICAgICAgICAgLy92aWN0b3J5IG9yIGxvc3Mgc2NyZWVuXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jdXJyZW50VHVybisrOyBcbiAgICAgICAgLy9jb25zb2xlLmxvZyhjb3VudCwgJ2NvdW50JylcbiAgICAgICAgY291bnQudGV4dENvbnRlbnQgPSB0aGlzLmN1cnJlbnRUdXJuICsgMTtcbiAgICAgICAgLy9oYXZlIHRvIHVwZGF0ZSB1bml0IHR1cm4sIGJlY2F1c2UgY29uc3RydWN0b3Igb25seSBjYWxsZWQgb25jZSBcbiAgICAgICAgdGhpcy51bml0VHVybiA9IHRoaXMudW5pdE9yZGVyW3RoaXMuY3VycmVudFR1cm4gJSB0aGlzLnVuaXRPcmRlci5sZW5ndGhdO1xuICAgICAgICBuYW1lLnRleHRDb250ZW50ID0gYE5hbWU6ICR7dGhpcy51bml0VHVybi5uYW1lfWA7IFxuXG5cbiAgICAgICAgaWYgKHRoaXMudW5pdFR1cm4udHlwZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5lbmVteUFjdGlvbigpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2FtZUVuZCgpIHtcbiAgICAgICAgaWYgKHRoaXMuY3VycmVudFR1cm4gPT09IDkpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiWW91IGxvc2UhXCIpXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLndvbigpKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIllvdSB3aW4hXCIpXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmxvc3QoKSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJZb3UgbG9zZSFcIilcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9IFxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmVtb3ZlVW5pdCh1bml0KSB7XG4gICAgICAgIGluZGV4ID0gdGhpcy51bml0T3JkZXIuaW5kZXhPZih1bml0KTtcbiAgICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgICAgIGFycmF5LnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHggPSB1bml0LnBvc1swXTtcbiAgICAgICAgbGV0IHkgPSB1bml0LnBvc1sxXTtcbiAgICAgICAgdGhpcy5ncmlkW3hdW3ldID0gMDtcblxuICAgICAgICBpZiAodW5pdC50eXBlID09PSBudWxsKSB7XG4gICAgICAgICAgICBhcnJheS5zcGxpY2UodGhpcy5lbmVtaWVzLmluZGV4T2YodW5pdCksIDEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYXJyYXkuc3BsaWNlKHRoaXMudW5pdHMuaW5kZXhPZih1bml0KSwgMSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhdHRhY2socG9zKSB7XG4gICAgICAgIGxldCB4ID0gcG9zWzBdO1xuICAgICAgICBsZXQgeSA9IHBvc1sxXTtcblxuICAgICAgICBpZiAodGhpcy5ncmlkW3hdW3ldIGluc3RhbmNlb2YgVW5pdCAmJiB0aGlzLmdyaWRbeF1beV0udHlwZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5ncmlkW3hdW3ldLnRha2VEYW1hZ2UodGhpcy51bml0VHVybi5hdHRhY2spO1xuICAgICAgICAgICAgaWYgKHRoaXMuZ3JpZFt4XVt5XS5hbGl2ZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZVVuaXQodGhpcy5ncmlkW3hdW3ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBtb3ZlVW5pdChwb3MpIHtcbiAgICAgICAgbGV0IHggPSBwb3NbMF07XG4gICAgICAgIGxldCB5ID0gcG9zWzFdO1xuICAgICAgICBsZXQgY3VycmVudCA9IHRoaXMudW5pdFR1cm4ucG9zO1xuICAgICAgICBsZXQgbmV3UG9zID0gW2N1cnJlbnRbMF0gKyB4LCBjdXJyZW50WzFdICsgeV07XG4gICAgICAgIGlmICh0aGlzLnZhbGlkTW92ZShuZXdQb3MpKSB7XG4gICAgICAgICAgICB0aGlzLnVuaXRUdXJuLm1vdmUobmV3UG9zKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnVuaXRUdXJuLm93bmVyICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdyaWRbbmV3UG9zWzBdXVtuZXdQb3NbMV1dID0gdGhpcy51bml0VHVybjtcbiAgICAgICAgICAgIH0gXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTsgXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHZhbGlkTW92ZShwb3MpIHtcbiAgICAgICAgbGV0IHggPSBwb3NbMF07XG4gICAgICAgIGxldCB5ID0gcG9zWzFdO1xuICAgICAgICBpZiAoeCA+IDkgfHwgeCA8IDAgfHwgeSA+IDkgfHwgeSA8IDApIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSBcbiAgICAgICAgaWYgKHRoaXMuZ3JpZFt4XVt5XSAhPT0gMSB8fCB0aGlzLmdyaWRbeF1beV0gIT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICB3b24oKSB7XG4gICAgICAgIGlmICh0aGlzLmVuZW1pZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgbG9zdCgpIHtcbiAgICAgICAgaWYgKHRoaXMudW5pdHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG5cbiAgICBzZXRUdXJuT3JkZXIoKSB7XG4gICAgICAgIGxldCBhcnIgPSBbXVxuICAgICAgICBsZXQgdW5pdENvdW50ID0gMDtcbiAgICAgICAgbGV0IGVuZW15Q291bnQgPSAwO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMudW5pdHMubGVuZ3RoICsgdGhpcy5lbmVtaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoaSAlIDIgPT09IDApIHtcbiAgICAgICAgICAgICAgICBhcnIucHVzaCh0aGlzLnVuaXRzW3VuaXRDb3VudF0pO1xuICAgICAgICAgICAgICAgIHVuaXRDb3VudCsrO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBhcnIucHVzaCh0aGlzLmVuZW1pZXNbZW5lbXlDb3VudF0pO1xuICAgICAgICAgICAgICAgIGVuZW15Q291bnQrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZyhhcnIpO1xuICAgICAgICByZXR1cm4gYXJyO1xuICAgIH1cblxuICAgIHNodWZmbGVBcnJheShhcnJheSkge1xuICAgICAgICBsZXQgaSA9IGFycmF5Lmxlbmd0aFxuICAgICAgICBsZXQgcmFuZCA9IGk7XG4gICAgICAgIHdoaWxlIChpID49IDApIHtcbiAgICAgICAgICAgIHJhbmQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoaSsxKSk7XG4gICAgICAgICAgICBsZXQgdGVtcCA9IGFycmF5W2ldO1xuICAgICAgICAgICAgYXJyYXlbaV0gPSBhcnJheVtyYW5kXTtcbiAgICAgICAgICAgIGFycmF5W3JhbmRdID0gdGVtcDtcbiAgICAgICAgICAgIGktLTtcbiAgICAgICAgfSBcbiAgICAgICAgcmV0dXJuIGFycmF5O1xuICAgIH1cblxuICAgIFxuXG4gICAgcmVuZGVyU3RhdHVzKCkge1xuICAgICAgICBcbiAgICB9XG5cbiAgICBcblxuICAgIGNyZWF0ZUJvYXJkKCkge1xuXG4gICAgfVxuXG4gICAgLy8gY3JlYXRlT2JqZWN0R3JpZCgpIHtcbiAgICAvLyAgICAgbGV0IG5ld0dyaWQgPSBbLi4uQXJyYXkoMTApXS5tYXAoZSA9PiBBcnJheSgxMCkpO1xuICAgIC8vICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZ3JpZC5sZW5ndGg7IGkrKykge1xuICAgIC8vICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGlzLmdyaWQubGVuZ3RoOyBqKyspIHtcbiAgICAvLyAgICAgICAgICAgICBpZiAodGhpcy5ncmlkW2ldW2pdID09PSAwKSB7XG4gICAgLy8gICAgICAgICAgICAgICAgIG5ld0dyaWRbaV1bal0ucHVzaChuZXcgUGxhaW4oKSk7XG4gICAgLy8gICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmdyaWRbaV1bal0gPT09IDEpIHtcbiAgICAvLyAgICAgICAgICAgICAgICAgbmV3R3JpZFtpXVtqXS5wdXNoKG5ldyBXYWxsKCkpO1xuICAgIC8vICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5ncmlkW2ldW2pdID09PSAyKSB7XG4gICAgLy8gICAgICAgICAgICAgICAgIG5ld0dyaWRbaV1bal0ucHVzaCgpO1xuICAgIC8vICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5ncmlkW2ldW2pdID09PSAzKSB7XG4gICAgLy8gICAgICAgICAgICAgICAgIG5ld0dyaWRbaV1bal0ucHVzaCgpO1xuICAgIC8vICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5ncmlkW2ldW2pdID09PSA0KSB7XG4gICAgLy8gICAgICAgICAgICAgICAgIG5ld0dyaWRbaV1bal0ucHVzaCgpO1xuICAgIC8vICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgLy8gICAgICAgICAgICAgICAgIG5ld0dyaWRbaV1bal0ucHVzaCgpO1xuICAgIC8vICAgICAgICAgICAgIH1cbiAgICAvLyAgICAgICAgIH1cbiAgICAvLyAgICAgfVxuICAgIC8vICAgICByZXR1cm4gbmV3R3JpZDtcbiAgICAvLyB9XG59O1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBCb2FyZDtcbiJdLCJuYW1lcyI6WyJQbGF5ZXIiLCJyZXF1aXJlIiwiVW5pdCIsIkxldmVscyIsImNvdW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwibmFtZSIsIkJvYXJkIiwiY29uc3RydWN0b3IiLCJncmlkIiwicGxheWVyVW5pdHMiLCJlbmVteVVuaXRzIiwia2V5Q29kZSIsImlzVmFsaWRNb3ZlIiwidXBkYXRlR3JpZCIsInVuaXRUdXJuIiwicG9zIiwidW5pdHMiLCJlbmVtaWVzIiwidW5pdE9yZGVyIiwic2V0VHVybk9yZGVyIiwiY3VycmVudFR1cm4iLCJsZW5ndGgiLCJ1bml0R3JpZCIsIkFycmF5IiwiaSIsImoiLCJiYXR0bGVmaWVsZCIsImRyYXdCYXR0bGVmaWVsZCIsImNlbGxTaXplIiwicGFkZGluZyIsInNldFBvcyIsInRpbGVzIiwiZmlsbFRpbGVzIiwidW5pdEltYWdlcyIsImdlbmVyYXRlVW5pdEltYWdlcyIsImdlbmVyYXRlSFRNTHNxdWFyZXMiLCJnZW5lcmF0ZUhUTUx1bml0cyIsInNhdmVQb3NpdGlvbnMiLCJyb3ciLCJjb2wiLCJ1bml0Q2xpY2siLCJnZXRFbGVtZW50QnlJZCIsInN0eWxlIiwidG9wIiwibGVmdCIsInJpZmxlbWFuIiwiSW1hZ2UiLCJzcmMiLCJwdXNoIiwic25pcGVyIiwibGF1bmNoZXIiLCJncmFzcyIsImRpcnQiLCJjcmF0ZSIsInNldFBpZWNlIiwieCIsInkiLCJ2YWx1ZSIsImdldENlbnRlciIsInciLCJoIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0IiwiY3JlYXRlVW5pdENhbnZhcyIsImFyciIsInVuaXQiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJ1bml0Q29udGV4dCIsImdldENvbnRleHQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjb250YWluZXIiLCJjb2xvciIsImNhbnZhcyIsImNvbnRleHQiLCJkaXNwbGF5IiwicG9zaXRpb24iLCJiYWNrZ3JvdW5kIiwicmlnaHQiLCJib3R0b20iLCJzcXVhcmUiLCJjbGFzc05hbWUiLCJ3aWR0aCIsImhlaWdodCIsInpJbmRleCIsInNxdWFyZXMiLCJyZW5kZXIiLCJjZW50ZXIiLCJtYXJnaW5MZWZ0IiwibWFyZ2luVG9wIiwidmFsIiwiaW1hZ2UiLCJzeCIsInN5IiwiZHJhd0ltYWdlIiwiaW1hZ2UyIiwidHlwZSIsInJlbmRlck9wdGlvbnMiLCJidXR0b24xIiwiYnV0dG9uMiIsImJ1dHRvbjMiLCJidXR0b240IiwiY2xhc3MiLCJkcmF3IiwiZHJhd1NxdWFyZSIsImJhdHRsZWZpZWxkQ29udGV4dCIsImxpbmVXaWR0aCIsImZpbGxTdHlsZSIsImZpbGxSZWN0Iiwic3Ryb2tlUmVjdCIsImRyYXdHcmlkIiwic3F1YXJlU2l6ZSIsInBsYXllckFjdGlvbiIsImVuZW15QWN0aW9uIiwibmV4dFR1cm4iLCJnYW1lRW5kIiwidGV4dENvbnRlbnQiLCJjb25zb2xlIiwibG9nIiwid29uIiwibG9zdCIsInJlbW92ZVVuaXQiLCJpbmRleCIsImluZGV4T2YiLCJhcnJheSIsInNwbGljZSIsImF0dGFjayIsInRha2VEYW1hZ2UiLCJhbGl2ZSIsIm1vdmVVbml0IiwiY3VycmVudCIsIm5ld1BvcyIsInZhbGlkTW92ZSIsIm1vdmUiLCJvd25lciIsInVuaXRDb3VudCIsImVuZW15Q291bnQiLCJzaHVmZmxlQXJyYXkiLCJyYW5kIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwidGVtcCIsInJlbmRlclN0YXR1cyIsImNyZWF0ZUJvYXJkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/board.js\n");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Board = __webpack_require__(/*! ./board */ \"./src/board.js\");\n\nconst Levels = __webpack_require__(/*! ./levels */ \"./src/levels.js\");\n\nconst Player = __webpack_require__(/*! ./player */ \"./src/player.js\");\n\nconst Rifleman = __webpack_require__(/*! ./rifleman */ \"./src/rifleman.js\");\n\nconst Sniper = __webpack_require__(/*! ./sniper */ \"./src/sniper.js\");\n\nconst AtGunner = __webpack_require__(/*! ./atGunner */ \"./src/atGunner.js\");\n\nconst Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\n\nclass Game {\n  constructor(level) {\n    this.board;\n\n    if (level === 1) {\n      let player = new Player('user');\n      let units = [new Rifleman(\"Bob\", player), new Rifleman(\"Joe\", player), new Sniper(\"Billy\", player), new AtGunner(\"Joel\", player)];\n      let enemies = [new Rifleman(\"Enemy 1\"), new Rifleman(\"Enemy 2\"), new Sniper(\"Enemy 3\"), new AtGunner(\"Enemy 4\")];\n      this.board = new Board(BATTLEFIELDS.levelOne, units, enemies, player); //this.board.render();\n\n      this.runGame(this.board);\n    }\n  }\n\n  runGame(board) {\n    let context = board.battlefield;\n\n    function animate() {\n      window.requestAnimationFrame(animate);\n      board.render(); //board.renderUnits();\n    }\n\n    animate();\n  }\n\n}\n\nmodule.exports = Game;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLLEdBQUdDLG1CQUFPLENBQUMsK0JBQUQsQ0FBckI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRCxtQkFBTyxDQUFDLGlDQUFELENBQXRCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsbUJBQU8sQ0FBQyxpQ0FBRCxDQUF0Qjs7QUFDQSxNQUFNRyxRQUFRLEdBQUdILG1CQUFPLENBQUMscUNBQUQsQ0FBeEI7O0FBQ0EsTUFBTUksTUFBTSxHQUFHSixtQkFBTyxDQUFDLGlDQUFELENBQXRCOztBQUNBLE1BQU1LLFFBQVEsR0FBR0wsbUJBQU8sQ0FBQyxxQ0FBRCxDQUF4Qjs7QUFDQSxNQUFNTSxJQUFJLEdBQUdOLG1CQUFPLENBQUMsNkJBQUQsQ0FBcEI7O0FBRUEsTUFBTU8sSUFBTixDQUFXO0VBQ1BDLFdBQVcsQ0FBRUMsS0FBRixFQUFTO0lBQ2hCLEtBQUtDLEtBQUw7O0lBQ0EsSUFBSUQsS0FBSyxLQUFLLENBQWQsRUFBaUI7TUFDYixJQUFJRSxNQUFNLEdBQUcsSUFBSVQsTUFBSixDQUFXLE1BQVgsQ0FBYjtNQUNBLElBQUlVLEtBQUssR0FBRyxDQUFDLElBQUlULFFBQUosQ0FBYSxLQUFiLEVBQW9CUSxNQUFwQixDQUFELEVBQThCLElBQUlSLFFBQUosQ0FBYSxLQUFiLEVBQW9CUSxNQUFwQixDQUE5QixFQUEyRCxJQUFJUCxNQUFKLENBQVcsT0FBWCxFQUFvQk8sTUFBcEIsQ0FBM0QsRUFBd0YsSUFBSU4sUUFBSixDQUFhLE1BQWIsRUFBcUJNLE1BQXJCLENBQXhGLENBQVo7TUFDQSxJQUFJRSxPQUFPLEdBQUcsQ0FBQyxJQUFJVixRQUFKLENBQWEsU0FBYixDQUFELEVBQTBCLElBQUlBLFFBQUosQ0FBYSxTQUFiLENBQTFCLEVBQW1ELElBQUlDLE1BQUosQ0FBVyxTQUFYLENBQW5ELEVBQTBFLElBQUlDLFFBQUosQ0FBYSxTQUFiLENBQTFFLENBQWQ7TUFDQSxLQUFLSyxLQUFMLEdBQWEsSUFBSVgsS0FBSixDQUFVZSxZQUFZLENBQUNDLFFBQXZCLEVBQWlDSCxLQUFqQyxFQUF3Q0MsT0FBeEMsRUFBaURGLE1BQWpELENBQWIsQ0FKYSxDQUtiOztNQUNBLEtBQUtLLE9BQUwsQ0FBYSxLQUFLTixLQUFsQjtJQUNIO0VBQ0o7O0VBRURNLE9BQU8sQ0FBQ04sS0FBRCxFQUFRO0lBQ1gsSUFBSU8sT0FBTyxHQUFHUCxLQUFLLENBQUNRLFdBQXBCOztJQUNBLFNBQVNDLE9BQVQsR0FBbUI7TUFDZkMsTUFBTSxDQUFDQyxxQkFBUCxDQUE2QkYsT0FBN0I7TUFDQVQsS0FBSyxDQUFDWSxNQUFOLEdBRmUsQ0FHZjtJQUNIOztJQUNESCxPQUFPO0VBQ1Y7O0FBckJNOztBQXdCWEksTUFBTSxDQUFDQyxPQUFQLEdBQWlCakIsSUFBakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0LXByb2plY3QvLi9zcmMvZ2FtZS5qcz83ZGUwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEJvYXJkID0gcmVxdWlyZSgnLi9ib2FyZCcpO1xuY29uc3QgTGV2ZWxzID0gcmVxdWlyZSgnLi9sZXZlbHMnKTtcbmNvbnN0IFBsYXllciA9IHJlcXVpcmUoJy4vcGxheWVyJyk7XG5jb25zdCBSaWZsZW1hbiA9IHJlcXVpcmUoJy4vcmlmbGVtYW4nKTtcbmNvbnN0IFNuaXBlciA9IHJlcXVpcmUoJy4vc25pcGVyJyk7XG5jb25zdCBBdEd1bm5lciA9IHJlcXVpcmUoJy4vYXRHdW5uZXInKTtcbmNvbnN0IFVuaXQgPSByZXF1aXJlKCcuL3VuaXQnKTtcblxuY2xhc3MgR2FtZSB7XG4gICAgY29uc3RydWN0b3IgKGxldmVsKSB7XG4gICAgICAgIHRoaXMuYm9hcmQ7XG4gICAgICAgIGlmIChsZXZlbCA9PT0gMSkge1xuICAgICAgICAgICAgbGV0IHBsYXllciA9IG5ldyBQbGF5ZXIoJ3VzZXInKTsgICAgXG4gICAgICAgICAgICBsZXQgdW5pdHMgPSBbbmV3IFJpZmxlbWFuKFwiQm9iXCIsIHBsYXllciksIG5ldyBSaWZsZW1hbihcIkpvZVwiLCBwbGF5ZXIpLCBuZXcgU25pcGVyKFwiQmlsbHlcIiwgcGxheWVyKSwgbmV3IEF0R3VubmVyKFwiSm9lbFwiLCBwbGF5ZXIpXTtcbiAgICAgICAgICAgIGxldCBlbmVtaWVzID0gW25ldyBSaWZsZW1hbihcIkVuZW15IDFcIiksIG5ldyBSaWZsZW1hbihcIkVuZW15IDJcIiksIG5ldyBTbmlwZXIoXCJFbmVteSAzXCIpLCBuZXcgQXRHdW5uZXIoXCJFbmVteSA0XCIpXTtcbiAgICAgICAgICAgIHRoaXMuYm9hcmQgPSBuZXcgQm9hcmQoQkFUVExFRklFTERTLmxldmVsT25lLCB1bml0cywgZW5lbWllcywgcGxheWVyKTtcbiAgICAgICAgICAgIC8vdGhpcy5ib2FyZC5yZW5kZXIoKTtcbiAgICAgICAgICAgIHRoaXMucnVuR2FtZSh0aGlzLmJvYXJkKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJ1bkdhbWUoYm9hcmQpIHtcbiAgICAgICAgbGV0IGNvbnRleHQgPSBib2FyZC5iYXR0bGVmaWVsZDsgXG4gICAgICAgIGZ1bmN0aW9uIGFuaW1hdGUoKSB7XG4gICAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpXG4gICAgICAgICAgICBib2FyZC5yZW5kZXIoKTtcbiAgICAgICAgICAgIC8vYm9hcmQucmVuZGVyVW5pdHMoKTtcbiAgICAgICAgfVxuICAgICAgICBhbmltYXRlKCk7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWU7Il0sIm5hbWVzIjpbIkJvYXJkIiwicmVxdWlyZSIsIkxldmVscyIsIlBsYXllciIsIlJpZmxlbWFuIiwiU25pcGVyIiwiQXRHdW5uZXIiLCJVbml0IiwiR2FtZSIsImNvbnN0cnVjdG9yIiwibGV2ZWwiLCJib2FyZCIsInBsYXllciIsInVuaXRzIiwiZW5lbWllcyIsIkJBVFRMRUZJRUxEUyIsImxldmVsT25lIiwicnVuR2FtZSIsImNvbnRleHQiLCJiYXR0bGVmaWVsZCIsImFuaW1hdGUiLCJ3aW5kb3ciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJyZW5kZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/game.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const Game = __webpack_require__(/*! ./game */ \"./src/game.js\");\n\nconst Board = __webpack_require__(/*! ./board */ \"./src/board.js\");\n\nconst Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\n\nconst Player = __webpack_require__(/*! ./player */ \"./src/player.js\");\n\nconst levels = __webpack_require__(/*! ./levels */ \"./src/levels.js\");\n\ndocument.addEventListener('DOMContentLoaded', e => {\n  let newGame = new Game(1);\n  document.addEventListener(\"keydown\", newGame.board.moveunit);\n  let endTurn = document.getElementById(\"end\");\n  endTurn.addEventListener(\"click\", () => {\n    newGame.board.savePositions();\n    newGame.board.nextTurn();\n  });\n  let move = document.getElementById(\"move\");\n  move.addEventListener(\"click\", () => {\n    console.log(\"move\");\n  });\n  let squares = document.getElementsByClassName(\"square\");\n\n  for (let i = 0; i < squares.length; i++) {\n    squares[i].addEventListener(\"mouseover\", e => {\n      console.log(e.target.id);\n    });\n  }\n\n  let units = document.getElementsByClassName(\"unit\");\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLDZCQUFELENBQXBCOztBQUNBLE1BQU1DLEtBQUssR0FBR0QsbUJBQU8sQ0FBQywrQkFBRCxDQUFyQjs7QUFDQSxNQUFNRSxJQUFJLEdBQUdGLG1CQUFPLENBQUMsNkJBQUQsQ0FBcEI7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHSCxtQkFBTyxDQUFDLGlDQUFELENBQXRCOztBQUNBLE1BQU1JLE1BQU0sR0FBR0osbUJBQU8sQ0FBQyxpQ0FBRCxDQUF0Qjs7QUFFQUssUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixrQkFBMUIsRUFBK0NDLENBQUQsSUFBTztFQUNqRCxJQUFJQyxPQUFPLEdBQUcsSUFBSVQsSUFBSixDQUFTLENBQVQsQ0FBZDtFQUNBTSxRQUFRLENBQUNDLGdCQUFULENBQTBCLFNBQTFCLEVBQXFDRSxPQUFPLENBQUNDLEtBQVIsQ0FBY0MsUUFBbkQ7RUFFQSxJQUFJQyxPQUFPLEdBQUdOLFFBQVEsQ0FBQ08sY0FBVCxDQUF3QixLQUF4QixDQUFkO0VBQ0FELE9BQU8sQ0FBQ0wsZ0JBQVIsQ0FBeUIsT0FBekIsRUFBa0MsTUFBTTtJQUNwQ0UsT0FBTyxDQUFDQyxLQUFSLENBQWNJLGFBQWQ7SUFDQUwsT0FBTyxDQUFDQyxLQUFSLENBQWNLLFFBQWQ7RUFFSCxDQUpEO0VBTUEsSUFBSUMsSUFBSSxHQUFHVixRQUFRLENBQUNPLGNBQVQsQ0FBd0IsTUFBeEIsQ0FBWDtFQUNBRyxJQUFJLENBQUNULGdCQUFMLENBQXNCLE9BQXRCLEVBQStCLE1BQU07SUFDakNVLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE1BQVo7RUFDSCxDQUZEO0VBSUEsSUFBSUMsT0FBTyxHQUFHYixRQUFRLENBQUNjLHNCQUFULENBQWdDLFFBQWhDLENBQWQ7O0VBQ0EsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRixPQUFPLENBQUNHLE1BQTVCLEVBQW9DRCxDQUFDLEVBQXJDLEVBQXlDO0lBQ3JDRixPQUFPLENBQUNFLENBQUQsQ0FBUCxDQUFXZCxnQkFBWCxDQUE0QixXQUE1QixFQUEwQ0MsQ0FBRCxJQUFPO01BQzVDUyxPQUFPLENBQUNDLEdBQVIsQ0FBWVYsQ0FBQyxDQUFDZSxNQUFGLENBQVNDLEVBQXJCO0lBQ0gsQ0FGRDtFQUdIOztFQUVELElBQUlDLEtBQUssR0FBR25CLFFBQVEsQ0FBQ2Msc0JBQVQsQ0FBZ0MsTUFBaEMsQ0FBWjtBQUdILENBMUJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVzdC1wcm9qZWN0Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgR2FtZSA9IHJlcXVpcmUoJy4vZ2FtZScpO1xuY29uc3QgQm9hcmQgPSByZXF1aXJlKCcuL2JvYXJkJyk7XG5jb25zdCBVbml0ID0gcmVxdWlyZSgnLi91bml0Jyk7XG5jb25zdCBQbGF5ZXIgPSByZXF1aXJlKCcuL3BsYXllcicpO1xuY29uc3QgbGV2ZWxzID0gcmVxdWlyZShcIi4vbGV2ZWxzXCIpO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKGUpID0+IHtcbiAgICBsZXQgbmV3R2FtZSA9IG5ldyBHYW1lKDEpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIG5ld0dhbWUuYm9hcmQubW92ZXVuaXQpOyBcblxuICAgIGxldCBlbmRUdXJuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlbmRcIik7XG4gICAgZW5kVHVybi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBuZXdHYW1lLmJvYXJkLnNhdmVQb3NpdGlvbnMoKTtcbiAgICAgICAgbmV3R2FtZS5ib2FyZC5uZXh0VHVybigpO1xuICAgICAgICBcbiAgICB9KTtcblxuICAgIGxldCBtb3ZlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb3ZlXCIpO1xuICAgIG1vdmUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJtb3ZlXCIpO1xuICAgIH0pO1xuXG4gICAgbGV0IHNxdWFyZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwic3F1YXJlXCIpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3F1YXJlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBzcXVhcmVzW2ldLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW92ZXJcIiwgKGUpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUudGFyZ2V0LmlkKTtcbiAgICAgICAgfSk7XG4gICAgfSAgIFxuXG4gICAgbGV0IHVuaXRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInVuaXRcIik7XG4gICAgXG4gICAgXG59KSAgXG5cblxuXG4iXSwibmFtZXMiOlsiR2FtZSIsInJlcXVpcmUiLCJCb2FyZCIsIlVuaXQiLCJQbGF5ZXIiLCJsZXZlbHMiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwibmV3R2FtZSIsImJvYXJkIiwibW92ZXVuaXQiLCJlbmRUdXJuIiwiZ2V0RWxlbWVudEJ5SWQiLCJzYXZlUG9zaXRpb25zIiwibmV4dFR1cm4iLCJtb3ZlIiwiY29uc29sZSIsImxvZyIsInNxdWFyZXMiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwiaSIsImxlbmd0aCIsInRhcmdldCIsImlkIiwidW5pdHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/levels.js":
/*!***********************!*\
  !*** ./src/levels.js ***!
  \***********************/
/***/ (function(module) {

eval("module.exports = BATTLEFIELDS = {\n  levelOne: [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 3, 3, 3, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 3, 3, 3, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 3, 3, 3, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1]],\n  levelTwo: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGV2ZWxzLmpzLmpzIiwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIkJBVFRMRUZJRUxEUyIsImxldmVsT25lIiwibGV2ZWxUd28iXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlc3QtcHJvamVjdC8uL3NyYy9sZXZlbHMuanM/ZDUyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IEJBVFRMRUZJRUxEUyA9IHtcbiAgICBsZXZlbE9uZTogICBbXG4gICAgICAgIFswLCAxLCAxLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDAsIDEsIDEsIDAsIDBdLFxuICAgICAgICBbMCwgMywgMywgMywgMCwgMCwgMSwgMSwgMCwgMF0sXG4gICAgICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgWzAsIDAsIDEsIDAsIDAsIDMsIDMsIDMsIDAsIDBdLFxuICAgICAgICBbMCwgMCwgMCwgMSwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgICAgIFswLCAzLCAzLCAzLCAwLCAwLCAxLCAwLCAwLCAwXSxcbiAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDEsIDAsIDAsIDAsIDFdLFxuICAgICAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMSwgMV1cbiAgICBdLFxuICAgIFxuICAgIGxldmVsVHdvOiAgIFtbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgICAgICAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgICAgICAgICAgICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgICAgICAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgICAgICAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgICAgICAgICAgICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgICAgICAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgICAgICAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgICAgICAgICAgICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgICAgICAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF1dXG59XG4iXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLFlBQVksR0FBRztFQUM1QkMsUUFBUSxFQUFJLENBQ1IsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQURRLEVBRVIsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQUZRLEVBR1IsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQUhRLEVBSVIsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQUpRLEVBS1IsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQUxRLEVBTVIsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQU5RLEVBT1IsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQVBRLEVBUVIsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQVJRLEVBU1IsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixDQVRRLENBRGdCO0VBYTVCQyxRQUFRLEVBQUksQ0FBQyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBQUQsRUFDQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBREEsRUFFQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBRkEsRUFHQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBSEEsRUFJQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBSkEsRUFLQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBTEEsRUFNQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBTkEsRUFPQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBUEEsRUFRQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBUkEsRUFTQSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLENBVEE7QUFiZ0IsQ0FBaEMifQ==\n//# sourceURL=webpack-internal:///./src/levels.js\n");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/***/ (function(module) {

eval("//const Levels = require('./level');\nclass Player {\n  constructor(type) {\n    this.type = type;\n    this.playerUnits = [];\n  }\n\n  assignUnits(units) {\n    this.playerUnits.concat(units);\n  }\n\n}\n\nmodule.exports = Player;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGxheWVyLmpzLmpzIiwibmFtZXMiOlsiUGxheWVyIiwiY29uc3RydWN0b3IiLCJ0eXBlIiwicGxheWVyVW5pdHMiLCJhc3NpZ25Vbml0cyIsInVuaXRzIiwiY29uY2F0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVzdC1wcm9qZWN0Ly4vc3JjL3BsYXllci5qcz9hOGEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vY29uc3QgTGV2ZWxzID0gcmVxdWlyZSgnLi9sZXZlbCcpO1xuY2xhc3MgUGxheWVyIHtcbiAgICBjb25zdHJ1Y3RvciAodHlwZSkge1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICB0aGlzLnBsYXllclVuaXRzID0gW107XG4gICAgfVxuXG4gICAgYXNzaWduVW5pdHModW5pdHMpIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJVbml0cy5jb25jYXQodW5pdHMpO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQbGF5ZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU1BLE1BQU4sQ0FBYTtFQUNUQyxXQUFXLENBQUVDLElBQUYsRUFBUTtJQUNmLEtBQUtBLElBQUwsR0FBWUEsSUFBWjtJQUNBLEtBQUtDLFdBQUwsR0FBbUIsRUFBbkI7RUFDSDs7RUFFREMsV0FBVyxDQUFDQyxLQUFELEVBQVE7SUFDZixLQUFLRixXQUFMLENBQWlCRyxNQUFqQixDQUF3QkQsS0FBeEI7RUFDSDs7QUFSUTs7QUFXYkUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixNQUFqQiJ9\n//# sourceURL=webpack-internal:///./src/player.js\n");

/***/ }),

/***/ "./src/rifleman.js":
/*!*************************!*\
  !*** ./src/rifleman.js ***!
  \*************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\n\nclass Rifleman extends Unit {\n  constructor(name) {\n    let owner = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(\"rifleman\", 10, 5, 1, 3, 3);\n    this.name = name;\n    this.owner = owner;\n  }\n\n}\n\nmodule.exports = Rifleman;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmlmbGVtYW4uanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLDZCQUFELENBQXBCOztBQUNBLE1BQU1DLFFBQU4sU0FBdUJGLElBQXZCLENBQTRCO0VBQ3hCRyxXQUFXLENBQUVDLElBQUYsRUFBc0I7SUFBQSxJQUFkQyxLQUFjLHVFQUFOLElBQU07SUFDN0IsTUFBTSxVQUFOLEVBQWtCLEVBQWxCLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLEVBQStCLENBQS9CO0lBQ0EsS0FBS0QsSUFBTCxHQUFZQSxJQUFaO0lBQ0EsS0FBS0MsS0FBTCxHQUFhQSxLQUFiO0VBQ0g7O0FBTHVCOztBQVE1QkMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTCxRQUFqQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlc3QtcHJvamVjdC8uL3NyYy9yaWZsZW1hbi5qcz8wOTIzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVuaXQgPSByZXF1aXJlKCcuL3VuaXQnKTtcbmNsYXNzIFJpZmxlbWFuIGV4dGVuZHMgVW5pdCB7XG4gICAgY29uc3RydWN0b3IgKG5hbWUsIG93bmVyID0gbnVsbCkge1xuICAgICAgICBzdXBlcihcInJpZmxlbWFuXCIsIDEwLCA1LCAxLCAzLCAzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5vd25lciA9IG93bmVyO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSaWZsZW1hbjsiXSwibmFtZXMiOlsiVW5pdCIsInJlcXVpcmUiLCJSaWZsZW1hbiIsImNvbnN0cnVjdG9yIiwibmFtZSIsIm93bmVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/rifleman.js\n");

/***/ }),

/***/ "./src/sniper.js":
/*!***********************!*\
  !*** ./src/sniper.js ***!
  \***********************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\n\nclass Sniper extends Unit {\n  constructor(name) {\n    let owner = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(\"sniper\", 10, 5, 0, 5, 3);\n    this.name = name;\n    this.owner = owner;\n  }\n\n}\n\nmodule.exports = Sniper;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc25pcGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsbUJBQU8sQ0FBQyw2QkFBRCxDQUFwQjs7QUFFQSxNQUFNQyxNQUFOLFNBQXFCRixJQUFyQixDQUEwQjtFQUN0QkcsV0FBVyxDQUFFQyxJQUFGLEVBQXNCO0lBQUEsSUFBZEMsS0FBYyx1RUFBTixJQUFNO0lBQzdCLE1BQU0sUUFBTixFQUFnQixFQUFoQixFQUFvQixDQUFwQixFQUF1QixDQUF2QixFQUEwQixDQUExQixFQUE2QixDQUE3QjtJQUNBLEtBQUtELElBQUwsR0FBWUEsSUFBWjtJQUNBLEtBQUtDLEtBQUwsR0FBYUEsS0FBYjtFQUNIOztBQUxxQjs7QUFRMUJDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsTUFBakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0LXByb2plY3QvLi9zcmMvc25pcGVyLmpzPzI1MzYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVW5pdCA9IHJlcXVpcmUoJy4vdW5pdCcpO1xuXG5jbGFzcyBTbmlwZXIgZXh0ZW5kcyBVbml0IHtcbiAgICBjb25zdHJ1Y3RvciAobmFtZSwgb3duZXIgPSBudWxsKSB7XG4gICAgICAgIHN1cGVyKFwic25pcGVyXCIsIDEwLCA1LCAwLCA1LCAzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5vd25lciA9IG93bmVyO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTbmlwZXI7XG4iXSwibmFtZXMiOlsiVW5pdCIsInJlcXVpcmUiLCJTbmlwZXIiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJvd25lciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/sniper.js\n");

/***/ }),

/***/ "./src/unit.js":
/*!*********************!*\
  !*** ./src/unit.js ***!
  \*********************/
/***/ (function(module) {

eval("class Unit {\n  constructor(type, health, attack, defense, range, move) {\n    this.type = type;\n    this.health = health;\n    this.attack = attack;\n    this.defense = defense;\n    this.range = range;\n    this.move = move;\n    this.alive = true;\n    this.items = [];\n    this.pos = []; //ammo\n    //clip\n  }\n\n  setAlive(status) {\n    this.alive = status;\n  }\n\n  setPiece(pos) {\n    this.pos = pos;\n  }\n\n  move(newPos) {\n    this.pos = newPos;\n  }\n\n  giveItem(item) {\n    this.items.push(item);\n  }\n\n  isAlive() {\n    this.health === 0 ? this.alive = false : this.alive = true;\n    return this.alive;\n  }\n\n  takeDamage(dmg) {\n    this.health = this.health - (dmg - this.defense);\n\n    if (!this.isAlive) {\n      this.alive = false;\n    }\n  }\n\n}\n\nmodule.exports = Unit;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdW5pdC5qcy5qcyIsIm5hbWVzIjpbIlVuaXQiLCJjb25zdHJ1Y3RvciIsInR5cGUiLCJoZWFsdGgiLCJhdHRhY2siLCJkZWZlbnNlIiwicmFuZ2UiLCJtb3ZlIiwiYWxpdmUiLCJpdGVtcyIsInBvcyIsInNldEFsaXZlIiwic3RhdHVzIiwic2V0UGllY2UiLCJuZXdQb3MiLCJnaXZlSXRlbSIsIml0ZW0iLCJwdXNoIiwiaXNBbGl2ZSIsInRha2VEYW1hZ2UiLCJkbWciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0LXByb2plY3QvLi9zcmMvdW5pdC5qcz8wMDJjIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFVuaXQge1xuICAgIGNvbnN0cnVjdG9yICh0eXBlLCBoZWFsdGgsIGF0dGFjaywgZGVmZW5zZSwgcmFuZ2UsIG1vdmUpIHtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5oZWFsdGggPSBoZWFsdGg7XG4gICAgICAgIHRoaXMuYXR0YWNrID0gYXR0YWNrO1xuICAgICAgICB0aGlzLmRlZmVuc2UgPSBkZWZlbnNlO1xuICAgICAgICB0aGlzLnJhbmdlID0gcmFuZ2U7XG4gICAgICAgIHRoaXMubW92ZSA9IG1vdmU7XG4gICAgICAgIHRoaXMuYWxpdmUgPSB0cnVlO1xuICAgICAgICB0aGlzLml0ZW1zID0gW107XG4gICAgICAgIHRoaXMucG9zID0gW107XG4gICAgICAgIC8vYW1tb1xuICAgICAgICAvL2NsaXBcbiAgICB9XG5cbiAgICBzZXRBbGl2ZShzdGF0dXMpIHtcbiAgICAgICAgdGhpcy5hbGl2ZSA9IHN0YXR1cztcbiAgICB9XG5cbiAgICBzZXRQaWVjZShwb3MpIHtcbiAgICAgICAgdGhpcy5wb3MgPSBwb3M7XG4gICAgfVxuXG4gICAgbW92ZShuZXdQb3MpIHtcbiAgICAgICAgdGhpcy5wb3MgPSBuZXdQb3M7XG4gICAgfVxuXG4gICAgZ2l2ZUl0ZW0oaXRlbSkge1xuICAgICAgICB0aGlzLml0ZW1zLnB1c2goaXRlbSk7XG4gICAgfVxuXG4gICAgaXNBbGl2ZSgpIHtcbiAgICAgICAgdGhpcy5oZWFsdGggPT09IDAgPyB0aGlzLmFsaXZlID0gZmFsc2UgOiB0aGlzLmFsaXZlID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWxpdmU7XG4gICAgfVxuXG4gICAgdGFrZURhbWFnZShkbWcpIHtcbiAgICAgICAgdGhpcy5oZWFsdGggPSB0aGlzLmhlYWx0aCAtIChkbWcgLSB0aGlzLmRlZmVuc2UpO1xuICAgICAgICBpZiAoIXRoaXMuaXNBbGl2ZSkge1xuICAgICAgICAgICAgdGhpcy5hbGl2ZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFVuaXQ7Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFOLENBQVc7RUFDUEMsV0FBVyxDQUFFQyxJQUFGLEVBQVFDLE1BQVIsRUFBZ0JDLE1BQWhCLEVBQXdCQyxPQUF4QixFQUFpQ0MsS0FBakMsRUFBd0NDLElBQXhDLEVBQThDO0lBQ3JELEtBQUtMLElBQUwsR0FBWUEsSUFBWjtJQUNBLEtBQUtDLE1BQUwsR0FBY0EsTUFBZDtJQUNBLEtBQUtDLE1BQUwsR0FBY0EsTUFBZDtJQUNBLEtBQUtDLE9BQUwsR0FBZUEsT0FBZjtJQUNBLEtBQUtDLEtBQUwsR0FBYUEsS0FBYjtJQUNBLEtBQUtDLElBQUwsR0FBWUEsSUFBWjtJQUNBLEtBQUtDLEtBQUwsR0FBYSxJQUFiO0lBQ0EsS0FBS0MsS0FBTCxHQUFhLEVBQWI7SUFDQSxLQUFLQyxHQUFMLEdBQVcsRUFBWCxDQVRxRCxDQVVyRDtJQUNBO0VBQ0g7O0VBRURDLFFBQVEsQ0FBQ0MsTUFBRCxFQUFTO0lBQ2IsS0FBS0osS0FBTCxHQUFhSSxNQUFiO0VBQ0g7O0VBRURDLFFBQVEsQ0FBQ0gsR0FBRCxFQUFNO0lBQ1YsS0FBS0EsR0FBTCxHQUFXQSxHQUFYO0VBQ0g7O0VBRURILElBQUksQ0FBQ08sTUFBRCxFQUFTO0lBQ1QsS0FBS0osR0FBTCxHQUFXSSxNQUFYO0VBQ0g7O0VBRURDLFFBQVEsQ0FBQ0MsSUFBRCxFQUFPO0lBQ1gsS0FBS1AsS0FBTCxDQUFXUSxJQUFYLENBQWdCRCxJQUFoQjtFQUNIOztFQUVERSxPQUFPLEdBQUc7SUFDTixLQUFLZixNQUFMLEtBQWdCLENBQWhCLEdBQW9CLEtBQUtLLEtBQUwsR0FBYSxLQUFqQyxHQUF5QyxLQUFLQSxLQUFMLEdBQWEsSUFBdEQ7SUFDQSxPQUFPLEtBQUtBLEtBQVo7RUFDSDs7RUFFRFcsVUFBVSxDQUFDQyxHQUFELEVBQU07SUFDWixLQUFLakIsTUFBTCxHQUFjLEtBQUtBLE1BQUwsSUFBZWlCLEdBQUcsR0FBRyxLQUFLZixPQUExQixDQUFkOztJQUNBLElBQUksQ0FBQyxLQUFLYSxPQUFWLEVBQW1CO01BQ2YsS0FBS1YsS0FBTCxHQUFhLEtBQWI7SUFDSDtFQUNKOztBQXpDTTs7QUE0Q1hhLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnRCLElBQWpCIn0=\n//# sourceURL=webpack-internal:///./src/unit.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0LXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;