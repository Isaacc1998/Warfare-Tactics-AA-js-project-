/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/images/Hero_GrenadeLauncher.png":
/*!************************************************!*\
  !*** ./assets/images/Hero_GrenadeLauncher.png ***!
  \************************************************/
/***/ (function() {

throw new Error("Module parse failed: Unexpected character '�' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n(Source code omitted for this binary file)");

/***/ }),

/***/ "./assets/images/Hero_MachineGun.png":
/*!*******************************************!*\
  !*** ./assets/images/Hero_MachineGun.png ***!
  \*******************************************/
/***/ (function() {

throw new Error("Module parse failed: Unexpected character '�' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n(Source code omitted for this binary file)");

/***/ }),

/***/ "./assets/images/Hero_Rifle.png":
/*!**************************************!*\
  !*** ./assets/images/Hero_Rifle.png ***!
  \**************************************/
/***/ (function() {

throw new Error("Module parse failed: Unexpected character '�' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n(Source code omitted for this binary file)");

/***/ }),

/***/ "./src/atGunner.js":
/*!*************************!*\
  !*** ./src/atGunner.js ***!
  \*************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\nclass AtGunner extends Unit {\n  constructor(name) {\n    let owner = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(\"atGunner\", 11, 8, 1, 3, 2);\n    this.name = name;\n    this.owner = owner;\n  }\n}\nmodule.exports = AtGunner;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXRHdW5uZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLDZCQUFRLENBQUM7QUFFOUIsTUFBTUMsUUFBUSxTQUFTRixJQUFJLENBQUM7RUFDMUJHLFdBQVcsQ0FBQ0MsSUFBSSxFQUFnQjtJQUFBLElBQWRDLEtBQUssdUVBQUcsSUFBSTtJQUM1QixLQUFLLENBQUMsVUFBVSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDakMsSUFBSSxDQUFDRCxJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDQyxLQUFLLEdBQUdBLEtBQUs7RUFDcEI7QUFDRjtBQUVBQyxNQUFNLENBQUNDLE9BQU8sR0FBR0wsUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL1dhcmZhcmUtVGFjdGljcy1BQS1qcy1wcm9qZWN0LS8uL3NyYy9hdEd1bm5lci5qcz80ZGIyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVuaXQgPSByZXF1aXJlKFwiLi91bml0XCIpO1xuXG5jbGFzcyBBdEd1bm5lciBleHRlbmRzIFVuaXQge1xuICBjb25zdHJ1Y3RvcihuYW1lLCBvd25lciA9IG51bGwpIHtcbiAgICBzdXBlcihcImF0R3VubmVyXCIsIDExLCA4LCAxLCAzLCAyKTtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMub3duZXIgPSBvd25lcjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEF0R3VubmVyO1xuIl0sIm5hbWVzIjpbIlVuaXQiLCJyZXF1aXJlIiwiQXRHdW5uZXIiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJvd25lciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/atGunner.js\n");

/***/ }),

/***/ "./src/board.js":
/*!**********************!*\
  !*** ./src/board.js ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module 'assets/images/_0003_GrassTiles'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module '../assets/images/_0001_DirtTiles'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module '../assets/images/TDS04_0018_Box1'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n/* harmony import */ var _assets_images_Hero_Rifle_png__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../assets/images/Hero_Rifle.png */ \"./assets/images/Hero_Rifle.png\");\n/* harmony import */ var _assets_images_Hero_Rifle_png__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_assets_images_Hero_Rifle_png__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _assets_images_Hero_GrenadeLauncher_png__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../assets/images/Hero_GrenadeLauncher.png */ \"./assets/images/Hero_GrenadeLauncher.png\");\n/* harmony import */ var _assets_images_Hero_GrenadeLauncher_png__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_assets_images_Hero_GrenadeLauncher_png__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _assets_images_Hero_MachineGun_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../assets/images/Hero_MachineGun.png */ \"./assets/images/Hero_MachineGun.png\");\n/* harmony import */ var _assets_images_Hero_MachineGun_png__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_assets_images_Hero_MachineGun_png__WEBPACK_IMPORTED_MODULE_3__);\n/* module decorator */ module = __webpack_require__.hmd(module);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nconst Player = __webpack_require__(/*! ./player */ \"./src/player.js\");\nconst Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\nconst Levels = __webpack_require__(/*! ./levels */ \"./src/levels.js\");\nlet count = document.querySelector(\".tCount\");\nlet name = document.querySelector(\".name\");\nclass Board {\n  //edit\n  constructor(grid, playerUnits, enemyUnits) {\n    _defineProperty(this, \"moveunit\", _ref => {\n      let {\n        keyCode\n      } = _ref;\n      if (keyCode === 37) {\n        if (this.isValidMove(-1, 0)) {\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1] - 1, this.unitTurn);\n          this.unitTurn.pos[1]--;\n          this.currentMoveCount--;\n        }\n      } else if (keyCode === 39) {\n        if (this.isValidMove(1, 0)) {\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1] + 1, this.unitTurn);\n          this.unitTurn.pos[1]++;\n          this.currentMoveCount--;\n        }\n      } else if (keyCode === 38) {\n        if (this.isValidMove(0, -1)) {\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n          this.updateGrid(this.unitTurn.pos[0] - 1, this.unitTurn.pos[1], this.unitTurn);\n          this.unitTurn.pos[0]--;\n          this.currentMoveCount--;\n        }\n      } else if (keyCode === 40) {\n        if (this.isValidMove(0, 1)) {\n          this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n          this.updateGrid(this.unitTurn.pos[0] + 1, this.unitTurn.pos[1], this.unitTurn);\n          this.unitTurn.pos[0]++;\n          this.currentMoveCount--;\n        }\n      }\n      if (this.currentMoveCount === 0) {\n        document.removeEventListener(\"keydown\", this.moveunit);\n        let counter = document.getElementById(\"moveCounter\");\n        counter.style.display = \"none\";\n        //add moveOptions\n        let moveOptions = document.getElementsByClassName(\"moveB\");\n        for (let i = 0; i < moveOptions.length; i++) {\n          moveOptions[i].style.display = \"block\";\n        }\n        move.style.display = \"none\";\n        return;\n      }\n      let counter = document.getElementById(\"moveCounter\");\n      counter.textContent = `Moves Left: ${this.currentMoveCount}`;\n    });\n    this.grid = grid;\n    //this.objectGrid = this.createObjectGrid();\n    this.units = playerUnits;\n    this.enemies = enemyUnits;\n    this.characterKey = {};\n    this.enemyNames = [];\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemyNames.push(this.enemies[i].name);\n    }\n    this.unitOrder = this.setTurnOrder();\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      this.characterKey[this.unitOrder[i].name] = this.unitOrder[i];\n    }\n    console.log(this.characterKey);\n    this.currentTurn = 0;\n    this.unitTurn = this.unitOrder[this.currentTurn % this.unitOrder.length];\n    this.unitGrid = new Array(10);\n    for (let i = 0; i < this.unitGrid.length; i++) {\n      this.unitGrid[i] = new Array(10);\n    }\n    for (let i = 0; i < this.unitGrid.length; i++) {\n      for (let j = 0; j < this.unitGrid[i].length; j++) {\n        this.unitGrid[i][j] = 0;\n      }\n    }\n    this.battlefield = this.drawBattlefield(0, 0, \"#444\");\n    this.cellSize = 67;\n    this.padding = 2;\n    this.setPos();\n    this.tiles = [];\n    this.fillTiles();\n    this.unitImages = [];\n    this.generateUnitImages();\n    //this.unitContexts = this.createUnitCanvas();\n    this.generateHTMLsquares();\n    this.generateHTMLunits();\n    this.currentMoveCount = this.unitTurn.move;\n  }\n  setCurrentMoveCount() {\n    this.currentMoveCount = this.unitTurn.move;\n  }\n  attack(target) {\n    let attackedUnit = this.characterKey[target];\n    if (this.inRange(attackedUnit)) {\n      console.log(\"before damge\");\n      attackedUnit.takeDamage(this.unitTurn.attack);\n      if (!attackedUnit.isAlive()) {\n        this.removeUnit(attackedUnit);\n      }\n    }\n  }\n  inRange(target) {\n    let range = this.unitTurn.range;\n    console.log(target);\n    console.log(this.unitTurn);\n    let xDif = target.pos[0] - this.unitTurn.pos[0];\n    let yDif = target.pos[1] - this.unitTurn.pos[1];\n    while (xDif !== 0) {\n      if (xDif > 0) {\n        xDif--;\n        range--;\n      } else if (xDif < 0) {\n        xDif++;\n        range--;\n      }\n    }\n    while (yDif !== 0) {\n      if (yDif > 0) {\n        yDif--;\n        range--;\n      } else if (yDif < 0) {\n        yDif++;\n        range--;\n      }\n    }\n    if (range < 0) {\n      return false;\n    }\n    return true;\n  }\n  findClickedUnit(name) {\n    console.log(name);\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      if (this.unitOrder[i].name === name) {\n        let alliance;\n        let type;\n        if (this.unitOrder[i].owner === null) {\n          alliance = \"Player 2\";\n        } else {\n          alliance = \"Player 1\";\n        }\n        if (this.unitOrder[i].type === \"atGunner\") {\n          type = \"RPG\";\n        } else {\n          type = this.unitOrder[i].type;\n        }\n        return [this.unitOrder[i].health, this.unitOrder[i].attack, this.unitOrder[i].defense, this.unitOrder[i].name, type, alliance];\n      }\n    }\n  }\n  savePositions() {\n    for (let row = 0; row < this.unitGrid.length; row++) {\n      for (let col = 0; col < this.unitGrid[row].length; col++) {\n        if (this.unitGrid[row][col] instanceof Unit) {\n          let unitClick = document.getElementById(`${this.unitGrid[row][col].name}`);\n          unitClick.style.top = row * (this.cellSize + this.padding);\n          unitClick.style.left = col * (this.cellSize + this.padding);\n        }\n      }\n    }\n  }\n  generateUnitImages() {\n    let rifleman = new Image();\n    rifleman.src = (_assets_images_Hero_Rifle_png__WEBPACK_IMPORTED_MODULE_1___default());\n    this.unitImages.push(rifleman);\n    let sniper = new Image();\n    sniper.src = (_assets_images_Hero_MachineGun_png__WEBPACK_IMPORTED_MODULE_3___default());\n    this.unitImages.push(sniper);\n    let launcher = new Image();\n    launcher.src = (_assets_images_Hero_GrenadeLauncher_png__WEBPACK_IMPORTED_MODULE_2___default());\n    this.unitImages.push(launcher);\n  }\n  fillTiles() {\n    let grass = new Image();\n    // grass.src = \"../tiles/Tiles/_0003_GrassTiles.png\";\n    grass.src = Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'assets/images/_0003_GrassTiles'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n    this.tiles.push(grass);\n    let dirt = new Image();\n    // dirt.src = \"../tiles/Tiles/_0001_DirtTiles.png\";\n    dirt.src = Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../assets/images/_0001_DirtTiles'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n    this.tiles.push(dirt);\n    let crate = new Image();\n    // crate.src = \"../tiles/crates/TDS04_0018_Box1.png\";\n    crate.src = Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../assets/images/TDS04_0018_Box1'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n    this.tiles.push(crate);\n  }\n  setPos() {\n    for (let i = 0; i < this.units.length; i++) {\n      this.units[i].setPiece([0, i + 2]);\n      this.unitGrid[0][i + 2] = this.units[i];\n    }\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemies[i].setPiece([this.unitGrid.length - 2, i + 4]);\n      this.unitGrid[this.unitGrid.length - 2][i + 4] = this.enemies[i];\n    }\n  }\n  isValidMove(x, y) {\n    if ((this.grid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 0 || this.grid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 1) && this.unitGrid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 0) {\n      return true;\n    }\n    //check starting position of units\n\n    return false;\n  }\n  updateGrid(x, y, value) {\n    this.unitGrid[x][y] = value;\n  }\n  getCenter(w, h) {\n    return {\n      x: window.innerWidth / 2 - w / 2 + \"px\",\n      y: window.innerHeight / 2 - h / 2 + \"px\"\n    };\n  }\n  createUnitCanvas() {\n    let arr = [];\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      let unit = document.createElement(\"canvas\");\n      unit.id = `${this.unitOrder[i].name}`;\n      let unitContext = unit.getContext(\"2d\");\n      document.body.appendChild(unit);\n      let container = document.getElementById(\"container\");\n      container.appendChild(unit);\n      arr.push(unitContext);\n    }\n    return arr;\n  }\n  drawBattlefield(w, h) {\n    let color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"#949494\";\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.id = \"battle\";\n    this.context = this.canvas.getContext(\"2d\");\n    // this.canvas.style.width = 680;\n    // this.canvas.style.height = 680;\n    this.canvas.style.display = \"inline-block\";\n    this.canvas.style.position = \"relative\";\n    this.canvas.style.background = color;\n    this.canvas.style.right = \"190\";\n    this.canvas.style.bottom = \"686\";\n    document.body.appendChild(this.canvas);\n    let container = document.getElementById(\"container\");\n    container.appendChild(this.canvas);\n    return this.context;\n  }\n  generateHTMLsquares() {\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        let square = document.createElement(\"div\");\n        square.id = `${this.grid[row][col]}`;\n        square.className = \"square\";\n        square.style.position = \"absolute\";\n        square.style.top = row * (this.cellSize + this.padding);\n        square.style.left = col * (this.cellSize + this.padding);\n        square.style.width = this.cellSize;\n        square.style.height = this.cellSize;\n        // document.body.appendChild(square);\n        square.style.zIndex = 100;\n        // this.battlefield.canvas.appendChild(square);\n        let squares = document.getElementById(\"squares\");\n        squares.appendChild(square);\n      }\n    }\n  }\n  generateHTMLunits() {\n    for (let row = 0; row < this.unitGrid.length; row++) {\n      for (let col = 0; col < this.unitGrid[row].length; col++) {\n        if (this.unitGrid[row][col] instanceof Unit) {\n          let unitClick = document.createElement(\"div\");\n          unitClick.id = `${this.unitGrid[row][col].name}`;\n          unitClick.className = \"unit\";\n          unitClick.style.position = \"absolute\";\n          unitClick.style.top = row * (this.cellSize + this.padding);\n          unitClick.style.left = col * (this.cellSize + this.padding);\n          unitClick.style.width = this.cellSize;\n          unitClick.style.height = this.cellSize;\n          unitClick.style.zIndex = 101;\n          let squares = document.getElementById(\"squares\");\n          squares.appendChild(unitClick);\n        }\n      }\n    }\n  }\n\n  // renderUnits() {\n  //     for (let i = 0; i < this.unitOrder.length; i++) {\n  //         let unitContext = this.unitContexts[i];\n\n  //         const w = (this.cellSize + this.padding) * this.grid[0].length - (this.padding);\n  //         const h = (this.cellSize + this.padding) * this.grid.length - (this.padding);\n\n  //         unitContext.canvas.width = w;\n  //         unitContext.canvas.height = h;\n\n  //         const center = this.getCenter(w, h);\n  //         unitContext.canvas.style.marginLeft = center.x\n  //         unitContext.canvas.style.marginTop = center.y;\n\n  //         let image;\n  //         if (this.unitOrder[i].type === \"rifleman\") {\n  //             image = this.unitImages[0];\n  //         } else if (this.unitOrder[i].type === \"sniper\") {\n  //             image = this.unitImages[1];\n  //         } else if (this.unitOrder[i].type === \"atGunner\") {\n  //             image = this.unitImages[2];\n  //         }\n\n  //         unitContext.drawImage(image, 8, 8, 48, 48, this.unitOrder[i].pos[1] * (this.cellSize + this.padding), this.unitOrder[i].pos[0] * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n  //     }\n  // }\n\n  render() {\n    const w = (this.cellSize + this.padding) * this.grid[0].length - this.padding;\n    const h = (this.cellSize + this.padding) * this.grid.length - this.padding;\n    this.battlefield.canvas.width = w;\n    this.battlefield.canvas.height = h;\n    const center = this.getCenter(w, h);\n    this.battlefield.canvas.style.marginLeft = center.x;\n    this.battlefield.canvas.style.marginTop = center.y;\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        const val = this.grid[row][col];\n        let image;\n        let sx = 0;\n        let sy = 0;\n        if (val === 0) {\n          image = this.tiles[0];\n          sx = 144;\n          sy = 144;\n        } else if (val === 1) {\n          image = this.tiles[1];\n          sx = 144;\n          sy = 144;\n        } else if (val === 3) {\n          image = this.tiles[2];\n          sx = 1;\n          sy = 0;\n        }\n\n        //drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)\n        this.battlefield.drawImage(image, sx, sy, 30, 30, col * (this.cellSize + this.padding), row * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n        //create corresponding html box element\n        //let boxElement = document.createElement('div');\n        // this.battlefield.canvas.style.width = this.cellSize;\n        // this.battlefield.canvas.style.height = this.cellSize;\n        let x;\n        let y;\n        let image2;\n        if (this.unitGrid[row][col] instanceof Unit) {\n          x = this.unitGrid[row][col].pos[1];\n          y = this.unitGrid[row][col].pos[0];\n          if (this.unitGrid[row][col].type === \"rifleman\") {\n            image2 = this.unitImages[0];\n          } else if (this.unitGrid[row][col].type === \"sniper\") {\n            image2 = this.unitImages[1];\n          } else if (this.unitGrid[row][col].type === \"atGunner\") {\n            image2 = this.unitImages[2];\n          }\n          this.battlefield.drawImage(image2, 8, 8, 48, 48, col * (this.cellSize + this.padding), row * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n        }\n        // unitContext.drawImage(image, 8, 8, 48, 48, this.unitOrder[i].pos[1] * (this.cellSize + this.padding), this.unitOrder[i].pos[0] * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n\n        // this.battlefield.fillStyle = color;\n        // this.battlefield.fillRect(col * (this.cellSize + this.padding),\n        // row * (this.cellSize + this.padding),\n        // this.cellSize, this.cellSize);\n      }\n    }\n  }\n\n  renderOptions() {\n    let context = document.getElementById(\"\");\n    let button1 = document.createElement(\"button\");\n    let button2 = document.createElement(\"button\");\n    let button3 = document.createElement(\"button\");\n    let button4 = document.createElement(\"button\");\n    button1.class = \"move\";\n    button2.class = \"attack\";\n    button3.class = \"items\";\n    button4.class = \"defend\";\n    button1.style.display = \"block\";\n  }\n  draw(name) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.id = name;\n    let w = canvas.width;\n    let h = canvas.height;\n    let context = canvas.getContext(\"2d\");\n    document.body.appendChild(canvas);\n    //canvas.style.display = \"none\";\n    if (name === \"moveOptions\") {\n      this.renderOptions();\n    }\n    return this.context;\n  }\n  drawSquare(x, y, w, h, color) {\n    this.battlefieldContext.lineWidth = 1;\n    this.battlefieldContext.fillStyle = color;\n    this.battlefieldContext.fillRect(x, y, w, h);\n    this.battlefieldContext.strokeRect(x, y, w, h);\n  }\n  drawGrid() {\n    let x = 0;\n    let y = 0;\n    let w = this.squareSize;\n    let h = this.squareSize;\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid.length; j++) {\n        if (this.grid[i][j] === 0) {\n          this.drawSquare(x, y, w, h, \"#d3d3d2\");\n        } else {\n          this.drawSquare(x, y, w, h, \"#111\");\n        }\n        x += w;\n      }\n      y += h;\n      x = 0;\n    }\n  }\n  enemyAction() {\n    //ai functionality\n    //has to click end turn button\n  }\n  nextTurn() {\n    if (this.gameEnd()) {\n      //victory or loss screen\n    }\n    this.currentTurn++;\n    //console.log(count, 'count')\n    count.textContent = this.currentTurn + 1;\n    //have to update unit turn, because constructor only called once\n    this.unitTurn = this.unitOrder[this.currentTurn % this.unitOrder.length];\n    name.textContent = `${this.unitTurn.name}`;\n    if (this.unitTurn.type === null) {\n      this.enemyAction();\n    }\n    this.gameEnd();\n  }\n  gameEnd() {\n    if (this.currentTurn === 50) {\n      console.log(\"You lose!\");\n      return true;\n    }\n    if (this.won()) {\n      console.log(\"You win!\");\n      return true;\n    } else if (this.lost()) {\n      console.log(\"You lose!\");\n      return true;\n    }\n    return false;\n  }\n  removeUnit(unit) {\n    let index = this.unitOrder.indexOf(unit);\n    if (index > -1) {\n      this.unitOrder.splice(index, 1);\n    }\n    let x = unit.pos[0];\n    let y = unit.pos[1];\n    this.unitGrid[x][y] = 0;\n    if (unit.owner === null) {\n      this.enemies.splice(this.enemies.indexOf(unit), 1);\n    } else {\n      this.units.splice(this.units.indexOf(unit), 1);\n    }\n    let deadUnit = document.getElementById(unit.name);\n    deadUnit.remove();\n    this.gameEnd();\n    this.savePositions();\n    this.nextTurn();\n    this.setCurrentMoveCount();\n    let move = document.getElementById(\"move\");\n    move.style.display = \"block\";\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"block\";\n    }\n  }\n\n  // attack(pos) {\n  //     let x = pos[0];\n  //     let y = pos[1];\n\n  //     if (this.grid[x][y] instanceof Unit && this.grid[x][y].type === null) {\n  //         this.grid[x][y].takeDamage(this.unitTurn.attack);\n  //         if (this.grid[x][y].alive === false) {\n  //             this.removeUnit(this.grid[x][y]);\n  //         }\n  //         return true;\n  //     }\n  //     return false;\n  // }\n\n  moveUnit(pos) {\n    let x = pos[0];\n    let y = pos[1];\n    let current = this.unitTurn.pos;\n    let newPos = [current[0] + x, current[1] + y];\n    if (this.validMove(newPos)) {\n      this.unitTurn.move(newPos);\n      if (this.unitTurn.owner != null) {\n        this.grid[newPos[0]][newPos[1]] = this.unitTurn;\n      }\n      return true;\n    }\n    return false;\n  }\n  validMove(pos) {\n    let x = pos[0];\n    let y = pos[1];\n    if (x > 9 || x < 0 || y > 9 || y < 0) {\n      return false;\n    }\n    if (this.grid[x][y] !== 1 || this.grid[x][y] !== 0) {\n      return false;\n    }\n    return true;\n  }\n  won() {\n    if (this.enemies.length === 0) {\n      return true;\n    }\n    return false;\n  }\n  lost() {\n    if (this.units.length === 0) {\n      return true;\n    }\n    return false;\n  }\n  setTurnOrder() {\n    let arr = [];\n    let unitCount = 0;\n    let enemyCount = 0;\n    for (let i = 0; i < this.units.length + this.enemies.length; i++) {\n      if (i % 2 === 0) {\n        arr.push(this.units[unitCount]);\n        unitCount++;\n      } else {\n        arr.push(this.enemies[enemyCount]);\n        enemyCount++;\n      }\n    }\n    console.log(arr);\n    return arr;\n  }\n  shuffleArray(array) {\n    let i = array.length;\n    let rand = i;\n    while (i >= 0) {\n      rand = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[rand];\n      array[rand] = temp;\n      i--;\n    }\n    return array;\n  }\n  renderStatus() {}\n\n  // createObjectGrid() {\n  //     let newGrid = [...Array(10)].map(e => Array(10));\n  //     for (let i = 0; i < this.grid.length; i++) {\n  //         for (let j = 0; j < this.grid.length; j++) {\n  //             if (this.grid[i][j] === 0) {\n  //                 newGrid[i][j].push(new Plain());\n  //             } else if (this.grid[i][j] === 1) {\n  //                 newGrid[i][j].push(new Wall());\n  //             } else if (this.grid[i][j] === 2) {\n  //                 newGrid[i][j].push();\n  //             } else if (this.grid[i][j] === 3) {\n  //                 newGrid[i][j].push();\n  //             } else if (this.grid[i][j] === 4) {\n  //                 newGrid[i][j].push();\n  //             } else {\n  //                 newGrid[i][j].push();\n  //             }\n  //         }\n  //     }\n  //     return newGrid;\n  // }\n}\n\nmodule.exports = Board;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/board.js\n");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Board = __webpack_require__(/*! ./board */ \"./src/board.js\");\nconst Levels = __webpack_require__(/*! ./levels */ \"./src/levels.js\");\nconst Player = __webpack_require__(/*! ./player */ \"./src/player.js\");\nconst Rifleman = __webpack_require__(/*! ./rifleman */ \"./src/rifleman.js\");\nconst Sniper = __webpack_require__(/*! ./sniper */ \"./src/sniper.js\");\nconst AtGunner = __webpack_require__(/*! ./atGunner */ \"./src/atGunner.js\");\nconst Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\nclass Game {\n  constructor(level) {\n    this.board;\n    if (level === 1) {\n      let player = new Player('user');\n      let units = [new Rifleman(\"Bob\", player), new Rifleman(\"Joe\", player), new Sniper(\"Billy\", player), new AtGunner(\"Joel\", player)];\n      let enemies = [new Rifleman(\"Enemy 1\"), new Rifleman(\"Enemy 2\"), new Sniper(\"Enemy 3\"), new AtGunner(\"Enemy 4\")];\n      this.board = new Board(BATTLEFIELDS.levelOne, units, enemies, player);\n      //this.board.render();\n      this.runGame(this.board);\n    }\n  }\n  runGame(board) {\n    let context = board.battlefield;\n    function animate() {\n      window.requestAnimationFrame(animate);\n      board.render();\n      //board.renderUnits();\n    }\n\n    animate();\n  }\n}\nmodule.exports = Game;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLLEdBQUdDLG1CQUFPLENBQUMsK0JBQVMsQ0FBQztBQUNoQyxNQUFNQyxNQUFNLEdBQUdELG1CQUFPLENBQUMsaUNBQVUsQ0FBQztBQUNsQyxNQUFNRSxNQUFNLEdBQUdGLG1CQUFPLENBQUMsaUNBQVUsQ0FBQztBQUNsQyxNQUFNRyxRQUFRLEdBQUdILG1CQUFPLENBQUMscUNBQVksQ0FBQztBQUN0QyxNQUFNSSxNQUFNLEdBQUdKLG1CQUFPLENBQUMsaUNBQVUsQ0FBQztBQUNsQyxNQUFNSyxRQUFRLEdBQUdMLG1CQUFPLENBQUMscUNBQVksQ0FBQztBQUN0QyxNQUFNTSxJQUFJLEdBQUdOLG1CQUFPLENBQUMsNkJBQVEsQ0FBQztBQUU5QixNQUFNTyxJQUFJLENBQUM7RUFDUEMsV0FBVyxDQUFFQyxLQUFLLEVBQUU7SUFDaEIsSUFBSSxDQUFDQyxLQUFLO0lBQ1YsSUFBSUQsS0FBSyxLQUFLLENBQUMsRUFBRTtNQUNiLElBQUlFLE1BQU0sR0FBRyxJQUFJVCxNQUFNLENBQUMsTUFBTSxDQUFDO01BQy9CLElBQUlVLEtBQUssR0FBRyxDQUFDLElBQUlULFFBQVEsQ0FBQyxLQUFLLEVBQUVRLE1BQU0sQ0FBQyxFQUFFLElBQUlSLFFBQVEsQ0FBQyxLQUFLLEVBQUVRLE1BQU0sQ0FBQyxFQUFFLElBQUlQLE1BQU0sQ0FBQyxPQUFPLEVBQUVPLE1BQU0sQ0FBQyxFQUFFLElBQUlOLFFBQVEsQ0FBQyxNQUFNLEVBQUVNLE1BQU0sQ0FBQyxDQUFDO01BQ2pJLElBQUlFLE9BQU8sR0FBRyxDQUFDLElBQUlWLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRSxJQUFJQSxRQUFRLENBQUMsU0FBUyxDQUFDLEVBQUUsSUFBSUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxFQUFFLElBQUlDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztNQUNoSCxJQUFJLENBQUNLLEtBQUssR0FBRyxJQUFJWCxLQUFLLENBQUNlLFlBQVksQ0FBQ0MsUUFBUSxFQUFFSCxLQUFLLEVBQUVDLE9BQU8sRUFBRUYsTUFBTSxDQUFDO01BQ3JFO01BQ0EsSUFBSSxDQUFDSyxPQUFPLENBQUMsSUFBSSxDQUFDTixLQUFLLENBQUM7SUFDNUI7RUFDSjtFQUVBTSxPQUFPLENBQUNOLEtBQUssRUFBRTtJQUNYLElBQUlPLE9BQU8sR0FBR1AsS0FBSyxDQUFDUSxXQUFXO0lBQy9CLFNBQVNDLE9BQU8sR0FBRztNQUNmQyxNQUFNLENBQUNDLHFCQUFxQixDQUFDRixPQUFPLENBQUM7TUFDckNULEtBQUssQ0FBQ1ksTUFBTSxFQUFFO01BQ2Q7SUFDSjs7SUFDQUgsT0FBTyxFQUFFO0VBQ2I7QUFDSjtBQUVBSSxNQUFNLENBQUNDLE9BQU8sR0FBR2pCLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9XYXJmYXJlLVRhY3RpY3MtQUEtanMtcHJvamVjdC0vLi9zcmMvZ2FtZS5qcz83ZGUwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEJvYXJkID0gcmVxdWlyZSgnLi9ib2FyZCcpO1xuY29uc3QgTGV2ZWxzID0gcmVxdWlyZSgnLi9sZXZlbHMnKTtcbmNvbnN0IFBsYXllciA9IHJlcXVpcmUoJy4vcGxheWVyJyk7XG5jb25zdCBSaWZsZW1hbiA9IHJlcXVpcmUoJy4vcmlmbGVtYW4nKTtcbmNvbnN0IFNuaXBlciA9IHJlcXVpcmUoJy4vc25pcGVyJyk7XG5jb25zdCBBdEd1bm5lciA9IHJlcXVpcmUoJy4vYXRHdW5uZXInKTtcbmNvbnN0IFVuaXQgPSByZXF1aXJlKCcuL3VuaXQnKTtcblxuY2xhc3MgR2FtZSB7XG4gICAgY29uc3RydWN0b3IgKGxldmVsKSB7XG4gICAgICAgIHRoaXMuYm9hcmQ7XG4gICAgICAgIGlmIChsZXZlbCA9PT0gMSkge1xuICAgICAgICAgICAgbGV0IHBsYXllciA9IG5ldyBQbGF5ZXIoJ3VzZXInKTsgICAgXG4gICAgICAgICAgICBsZXQgdW5pdHMgPSBbbmV3IFJpZmxlbWFuKFwiQm9iXCIsIHBsYXllciksIG5ldyBSaWZsZW1hbihcIkpvZVwiLCBwbGF5ZXIpLCBuZXcgU25pcGVyKFwiQmlsbHlcIiwgcGxheWVyKSwgbmV3IEF0R3VubmVyKFwiSm9lbFwiLCBwbGF5ZXIpXTtcbiAgICAgICAgICAgIGxldCBlbmVtaWVzID0gW25ldyBSaWZsZW1hbihcIkVuZW15IDFcIiksIG5ldyBSaWZsZW1hbihcIkVuZW15IDJcIiksIG5ldyBTbmlwZXIoXCJFbmVteSAzXCIpLCBuZXcgQXRHdW5uZXIoXCJFbmVteSA0XCIpXTtcbiAgICAgICAgICAgIHRoaXMuYm9hcmQgPSBuZXcgQm9hcmQoQkFUVExFRklFTERTLmxldmVsT25lLCB1bml0cywgZW5lbWllcywgcGxheWVyKTtcbiAgICAgICAgICAgIC8vdGhpcy5ib2FyZC5yZW5kZXIoKTtcbiAgICAgICAgICAgIHRoaXMucnVuR2FtZSh0aGlzLmJvYXJkKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJ1bkdhbWUoYm9hcmQpIHtcbiAgICAgICAgbGV0IGNvbnRleHQgPSBib2FyZC5iYXR0bGVmaWVsZDsgXG4gICAgICAgIGZ1bmN0aW9uIGFuaW1hdGUoKSB7XG4gICAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpXG4gICAgICAgICAgICBib2FyZC5yZW5kZXIoKTtcbiAgICAgICAgICAgIC8vYm9hcmQucmVuZGVyVW5pdHMoKTtcbiAgICAgICAgfVxuICAgICAgICBhbmltYXRlKCk7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWU7Il0sIm5hbWVzIjpbIkJvYXJkIiwicmVxdWlyZSIsIkxldmVscyIsIlBsYXllciIsIlJpZmxlbWFuIiwiU25pcGVyIiwiQXRHdW5uZXIiLCJVbml0IiwiR2FtZSIsImNvbnN0cnVjdG9yIiwibGV2ZWwiLCJib2FyZCIsInBsYXllciIsInVuaXRzIiwiZW5lbWllcyIsIkJBVFRMRUZJRUxEUyIsImxldmVsT25lIiwicnVuR2FtZSIsImNvbnRleHQiLCJiYXR0bGVmaWVsZCIsImFuaW1hdGUiLCJ3aW5kb3ciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJyZW5kZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/game.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const Game = __webpack_require__(/*! ./game */ \"./src/game.js\");\nconst Board = __webpack_require__(/*! ./board */ \"./src/board.js\");\nconst Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\nconst Player = __webpack_require__(/*! ./player */ \"./src/player.js\");\nconst levels = __webpack_require__(/*! ./levels */ \"./src/levels.js\");\n// const Tile =\n//let clickedUnit = {hp: 0, atk: 0, def: 0, type: \"\", name: \"\", alliance: \"\"}\ndocument.addEventListener(\"DOMContentLoaded\", e => {\n  let newGame = new Game(1);\n  // let controller = new AbortController();\n  // document.addEventListener(\"keydown\", () => {\n\n  // });\n\n  let endTurn = document.getElementById(\"end\");\n  endTurn.addEventListener(\"click\", () => {\n    newGame.board.savePositions();\n    newGame.board.nextTurn();\n    newGame.board.setCurrentMoveCount();\n    let move = document.getElementById(\"move\");\n    let attackText = document.getElementById(\"attackText\");\n    attackText.style.display = \"none\";\n    move.style.display = \"block\";\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"block\";\n    }\n  });\n  let move = document.getElementById(\"move\");\n  move.addEventListener(\"click\", () => {\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"none\";\n    }\n    let counter = document.getElementById(\"moveCounter\");\n    counter.style.display = \"block\";\n    counter.textContent = `Moves Left: ${newGame.board.currentMoveCount}`;\n    document.addEventListener(\"keydown\", newGame.board.moveunit);\n\n    // if (newGame.board.currentMoveCount === 0) {\n    //     //delete counter\n    //     let counter = document.getElementById(\"moveCounter\");\n    //     counter.style.display = \"none\";\n    //     //add moveOptions\n    //     let moveOptions = document.getElementsByClassName(\"moveB\");\n    //     for (let i = 0; i < moveOptions.length; i++) {\n    //         moveOptions[i].style.display = \"block\";\n    //     }\n    //     move.style.display = \"none\";\n    // }\n  });\n\n  let squares = document.getElementsByClassName(\"square\");\n  for (let i = 0; i < squares.length; i++) {\n    squares[i].addEventListener(\"mouseover\", e => {\n      console.log(e.target.id);\n    });\n  }\n  let units = document.getElementsByClassName(\"unit\");\n  for (let i = 0; i < units.length; i++) {\n    units[i].addEventListener(\"mouseover\", e => {\n      let stats = newGame.board.findClickedUnit(e.target.id);\n      let info = document.getElementById(\"unitInfo\");\n      info.innerHTML = `HP: ${stats[0]}\\n\n                              <br>\n                              ATK: ${stats[1]}\\n\n                              <br>\n                              DEF: ${stats[2]}\\n\n                              <br>\n                              <br>\n                              Name: ${stats[3]}\\n\n                              <br>\n                              Type: ${stats[4]}\\n\n                              <br>\n                              Alliance: ${stats[5]}`;\n    });\n  }\n  let attack = document.getElementById(\"attack\");\n  attack.addEventListener(\"click\", () => {\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"none\";\n    }\n    let attackText = document.getElementById(\"attackText\");\n    attackText.style.display = \"block\";\n    let units = document.getElementsByClassName(\"unit\");\n    for (let i = 0; i < units.length; i++) {\n      units[i].addEventListener(\"click\", e => {\n        if (newGame.board.enemyNames.includes(e.target.id) && newGame.board.unitTurn.owner !== null) {\n          newGame.board.attack(e.target.id);\n          newGame.board.savePositions();\n          newGame.board.nextTurn();\n          newGame.board.setCurrentMoveCount();\n          let move = document.getElementById(\"move\");\n          move.style.display = \"block\";\n          let attackText = document.getElementById(\"attackText\");\n          attackText.style.display = \"none\";\n          for (let i = 0; i < moveOptions.length; i++) {\n            moveOptions[i].style.display = \"block\";\n          }\n        }\n      });\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/levels.js":
/*!***********************!*\
  !*** ./src/levels.js ***!
  \***********************/
/***/ (function(module) {

eval("module.exports = BATTLEFIELDS = {\n  levelOne: [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 3, 3, 3, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 3, 3, 3, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 3, 3, 3, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1]],\n  levelTwo: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGV2ZWxzLmpzLmpzIiwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIkJBVFRMRUZJRUxEUyIsImxldmVsT25lIiwibGV2ZWxUd28iXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL1dhcmZhcmUtVGFjdGljcy1BQS1qcy1wcm9qZWN0LS8uL3NyYy9sZXZlbHMuanM/ZDUyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IEJBVFRMRUZJRUxEUyA9IHtcbiAgICBsZXZlbE9uZTogICBbXG4gICAgICAgIFswLCAxLCAxLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDAsIDEsIDEsIDAsIDBdLFxuICAgICAgICBbMCwgMywgMywgMywgMCwgMCwgMSwgMSwgMCwgMF0sXG4gICAgICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgWzAsIDAsIDEsIDAsIDAsIDMsIDMsIDMsIDAsIDBdLFxuICAgICAgICBbMCwgMCwgMCwgMSwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgICAgIFswLCAzLCAzLCAzLCAwLCAwLCAxLCAwLCAwLCAwXSxcbiAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDEsIDAsIDAsIDAsIDFdLFxuICAgICAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMSwgMV1cbiAgICBdLFxuICAgIFxuICAgIGxldmVsVHdvOiAgIFtbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgICAgICAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgICAgICAgICAgICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgICAgICAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgICAgICAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgICAgICAgICAgICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgICAgICAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgICAgICAgICAgICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgICAgICAgICAgICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICAgICAgICAgICAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF1dXG59XG4iXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQU8sR0FBR0MsWUFBWSxHQUFHO0VBQzVCQyxRQUFRLEVBQUksQ0FDUixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUNqQztFQUVEQyxRQUFRLEVBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUMvQixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUM5QyxDQUFDIn0=\n//# sourceURL=webpack-internal:///./src/levels.js\n");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/***/ (function(module) {

eval("//const Levels = require('./level');\nclass Player {\n  constructor(type) {\n    this.type = type;\n    this.playerUnits = [];\n  }\n  assignUnits(units) {\n    this.playerUnits.concat(units);\n  }\n}\nmodule.exports = Player;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGxheWVyLmpzLmpzIiwibmFtZXMiOlsiUGxheWVyIiwiY29uc3RydWN0b3IiLCJ0eXBlIiwicGxheWVyVW5pdHMiLCJhc3NpZ25Vbml0cyIsInVuaXRzIiwiY29uY2F0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vV2FyZmFyZS1UYWN0aWNzLUFBLWpzLXByb2plY3QtLy4vc3JjL3BsYXllci5qcz9hOGEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vY29uc3QgTGV2ZWxzID0gcmVxdWlyZSgnLi9sZXZlbCcpO1xuY2xhc3MgUGxheWVyIHtcbiAgICBjb25zdHJ1Y3RvciAodHlwZSkge1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICB0aGlzLnBsYXllclVuaXRzID0gW107XG4gICAgfVxuXG4gICAgYXNzaWduVW5pdHModW5pdHMpIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJVbml0cy5jb25jYXQodW5pdHMpO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQbGF5ZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU1BLE1BQU0sQ0FBQztFQUNUQyxXQUFXLENBQUVDLElBQUksRUFBRTtJQUNmLElBQUksQ0FBQ0EsSUFBSSxHQUFHQSxJQUFJO0lBQ2hCLElBQUksQ0FBQ0MsV0FBVyxHQUFHLEVBQUU7RUFDekI7RUFFQUMsV0FBVyxDQUFDQyxLQUFLLEVBQUU7SUFDZixJQUFJLENBQUNGLFdBQVcsQ0FBQ0csTUFBTSxDQUFDRCxLQUFLLENBQUM7RUFDbEM7QUFDSjtBQUVBRSxNQUFNLENBQUNDLE9BQU8sR0FBR1IsTUFBTSJ9\n//# sourceURL=webpack-internal:///./src/player.js\n");

/***/ }),

/***/ "./src/rifleman.js":
/*!*************************!*\
  !*** ./src/rifleman.js ***!
  \*************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\nclass Rifleman extends Unit {\n  constructor(name) {\n    let owner = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(\"rifleman\", 10, 5, 1, 3, 3);\n    this.name = name;\n    this.owner = owner;\n  }\n}\nmodule.exports = Rifleman;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmlmbGVtYW4uanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLDZCQUFRLENBQUM7QUFDOUIsTUFBTUMsUUFBUSxTQUFTRixJQUFJLENBQUM7RUFDeEJHLFdBQVcsQ0FBRUMsSUFBSSxFQUFnQjtJQUFBLElBQWRDLEtBQUssdUVBQUcsSUFBSTtJQUMzQixLQUFLLENBQUMsVUFBVSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDakMsSUFBSSxDQUFDRCxJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDQyxLQUFLLEdBQUdBLEtBQUs7RUFDdEI7QUFDSjtBQUVBQyxNQUFNLENBQUNDLE9BQU8sR0FBR0wsUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL1dhcmZhcmUtVGFjdGljcy1BQS1qcy1wcm9qZWN0LS8uL3NyYy9yaWZsZW1hbi5qcz8wOTIzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVuaXQgPSByZXF1aXJlKCcuL3VuaXQnKTtcbmNsYXNzIFJpZmxlbWFuIGV4dGVuZHMgVW5pdCB7XG4gICAgY29uc3RydWN0b3IgKG5hbWUsIG93bmVyID0gbnVsbCkge1xuICAgICAgICBzdXBlcihcInJpZmxlbWFuXCIsIDEwLCA1LCAxLCAzLCAzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5vd25lciA9IG93bmVyO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSaWZsZW1hbjsiXSwibmFtZXMiOlsiVW5pdCIsInJlcXVpcmUiLCJSaWZsZW1hbiIsImNvbnN0cnVjdG9yIiwibmFtZSIsIm93bmVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/rifleman.js\n");

/***/ }),

/***/ "./src/sniper.js":
/*!***********************!*\
  !*** ./src/sniper.js ***!
  \***********************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Unit = __webpack_require__(/*! ./unit */ \"./src/unit.js\");\nclass Sniper extends Unit {\n  constructor(name) {\n    let owner = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(\"sniper\", 10, 5, 0, 5, 3);\n    this.name = name;\n    this.owner = owner;\n  }\n}\nmodule.exports = Sniper;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc25pcGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsbUJBQU8sQ0FBQyw2QkFBUSxDQUFDO0FBRTlCLE1BQU1DLE1BQU0sU0FBU0YsSUFBSSxDQUFDO0VBQ3RCRyxXQUFXLENBQUVDLElBQUksRUFBZ0I7SUFBQSxJQUFkQyxLQUFLLHVFQUFHLElBQUk7SUFDM0IsS0FBSyxDQUFDLFFBQVEsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQy9CLElBQUksQ0FBQ0QsSUFBSSxHQUFHQSxJQUFJO0lBQ2hCLElBQUksQ0FBQ0MsS0FBSyxHQUFHQSxLQUFLO0VBQ3RCO0FBQ0o7QUFFQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUdMLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9XYXJmYXJlLVRhY3RpY3MtQUEtanMtcHJvamVjdC0vLi9zcmMvc25pcGVyLmpzPzI1MzYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVW5pdCA9IHJlcXVpcmUoJy4vdW5pdCcpO1xuXG5jbGFzcyBTbmlwZXIgZXh0ZW5kcyBVbml0IHtcbiAgICBjb25zdHJ1Y3RvciAobmFtZSwgb3duZXIgPSBudWxsKSB7XG4gICAgICAgIHN1cGVyKFwic25pcGVyXCIsIDEwLCA1LCAwLCA1LCAzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5vd25lciA9IG93bmVyO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTbmlwZXI7XG4iXSwibmFtZXMiOlsiVW5pdCIsInJlcXVpcmUiLCJTbmlwZXIiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJvd25lciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/sniper.js\n");

/***/ }),

/***/ "./src/unit.js":
/*!*********************!*\
  !*** ./src/unit.js ***!
  \*********************/
/***/ (function(module) {

eval("class Unit {\n  constructor(type, health, attack, defense, range, move) {\n    this.type = type;\n    this.health = health;\n    this.attack = attack;\n    this.defense = defense;\n    this.range = range;\n    this.move = move;\n    this.alive = true;\n    this.items = [];\n    this.pos = [];\n    //ammo\n    //clip\n  }\n\n  setAlive(status) {\n    this.alive = status;\n  }\n  setPiece(pos) {\n    this.pos = pos;\n  }\n  move(newPos) {\n    this.pos = newPos;\n  }\n  giveItem(item) {\n    this.items.push(item);\n  }\n  isAlive() {\n    return this.alive;\n  }\n  takeDamage(dmg) {\n    console.log(\"damage\");\n    this.health = this.health - (dmg - this.defense);\n    if (this.health < 0) {\n      this.health = 0;\n    }\n    if (this.health === 0) {\n      this.alive = false;\n    }\n  }\n}\nmodule.exports = Unit;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdW5pdC5qcy5qcyIsIm5hbWVzIjpbIlVuaXQiLCJjb25zdHJ1Y3RvciIsInR5cGUiLCJoZWFsdGgiLCJhdHRhY2siLCJkZWZlbnNlIiwicmFuZ2UiLCJtb3ZlIiwiYWxpdmUiLCJpdGVtcyIsInBvcyIsInNldEFsaXZlIiwic3RhdHVzIiwic2V0UGllY2UiLCJuZXdQb3MiLCJnaXZlSXRlbSIsIml0ZW0iLCJwdXNoIiwiaXNBbGl2ZSIsInRha2VEYW1hZ2UiLCJkbWciLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vV2FyZmFyZS1UYWN0aWNzLUFBLWpzLXByb2plY3QtLy4vc3JjL3VuaXQuanM/MDAyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBVbml0IHtcbiAgICBjb25zdHJ1Y3RvciAodHlwZSwgaGVhbHRoLCBhdHRhY2ssIGRlZmVuc2UsIHJhbmdlLCBtb3ZlKSB7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMuaGVhbHRoID0gaGVhbHRoO1xuICAgICAgICB0aGlzLmF0dGFjayA9IGF0dGFjaztcbiAgICAgICAgdGhpcy5kZWZlbnNlID0gZGVmZW5zZTtcbiAgICAgICAgdGhpcy5yYW5nZSA9IHJhbmdlO1xuICAgICAgICB0aGlzLm1vdmUgPSBtb3ZlO1xuICAgICAgICB0aGlzLmFsaXZlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5pdGVtcyA9IFtdO1xuICAgICAgICB0aGlzLnBvcyA9IFtdO1xuICAgICAgICAvL2FtbW9cbiAgICAgICAgLy9jbGlwXG4gICAgfVxuXG4gICAgc2V0QWxpdmUoc3RhdHVzKSB7XG4gICAgICAgIHRoaXMuYWxpdmUgPSBzdGF0dXM7XG4gICAgfVxuXG4gICAgc2V0UGllY2UocG9zKSB7XG4gICAgICAgIHRoaXMucG9zID0gcG9zO1xuICAgIH1cblxuICAgIG1vdmUobmV3UG9zKSB7XG4gICAgICAgIHRoaXMucG9zID0gbmV3UG9zO1xuICAgIH1cblxuICAgIGdpdmVJdGVtKGl0ZW0pIHtcbiAgICAgICAgdGhpcy5pdGVtcy5wdXNoKGl0ZW0pO1xuICAgIH1cblxuICAgIGlzQWxpdmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFsaXZlO1xuICAgIH1cblxuICAgIHRha2VEYW1hZ2UoZG1nKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiZGFtYWdlXCIpO1xuICAgICAgICB0aGlzLmhlYWx0aCA9IHRoaXMuaGVhbHRoIC0gKGRtZyAtIHRoaXMuZGVmZW5zZSk7XG4gICAgICAgIGlmICh0aGlzLmhlYWx0aCA8IDApIHtcbiAgICAgICAgICAgIHRoaXMuaGVhbHRoID0gMDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5oZWFsdGggPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuYWxpdmUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBVbml0OyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxDQUFDO0VBQ1BDLFdBQVcsQ0FBRUMsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxLQUFLLEVBQUVDLElBQUksRUFBRTtJQUNyRCxJQUFJLENBQUNMLElBQUksR0FBR0EsSUFBSTtJQUNoQixJQUFJLENBQUNDLE1BQU0sR0FBR0EsTUFBTTtJQUNwQixJQUFJLENBQUNDLE1BQU0sR0FBR0EsTUFBTTtJQUNwQixJQUFJLENBQUNDLE9BQU8sR0FBR0EsT0FBTztJQUN0QixJQUFJLENBQUNDLEtBQUssR0FBR0EsS0FBSztJQUNsQixJQUFJLENBQUNDLElBQUksR0FBR0EsSUFBSTtJQUNoQixJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJO0lBQ2pCLElBQUksQ0FBQ0MsS0FBSyxHQUFHLEVBQUU7SUFDZixJQUFJLENBQUNDLEdBQUcsR0FBRyxFQUFFO0lBQ2I7SUFDQTtFQUNKOztFQUVBQyxRQUFRLENBQUNDLE1BQU0sRUFBRTtJQUNiLElBQUksQ0FBQ0osS0FBSyxHQUFHSSxNQUFNO0VBQ3ZCO0VBRUFDLFFBQVEsQ0FBQ0gsR0FBRyxFQUFFO0lBQ1YsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUc7RUFDbEI7RUFFQUgsSUFBSSxDQUFDTyxNQUFNLEVBQUU7SUFDVCxJQUFJLENBQUNKLEdBQUcsR0FBR0ksTUFBTTtFQUNyQjtFQUVBQyxRQUFRLENBQUNDLElBQUksRUFBRTtJQUNYLElBQUksQ0FBQ1AsS0FBSyxDQUFDUSxJQUFJLENBQUNELElBQUksQ0FBQztFQUN6QjtFQUVBRSxPQUFPLEdBQUc7SUFDTixPQUFPLElBQUksQ0FBQ1YsS0FBSztFQUNyQjtFQUVBVyxVQUFVLENBQUNDLEdBQUcsRUFBRTtJQUNaQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxRQUFRLENBQUM7SUFDckIsSUFBSSxDQUFDbkIsTUFBTSxHQUFHLElBQUksQ0FBQ0EsTUFBTSxJQUFJaUIsR0FBRyxHQUFHLElBQUksQ0FBQ2YsT0FBTyxDQUFDO0lBQ2hELElBQUksSUFBSSxDQUFDRixNQUFNLEdBQUcsQ0FBQyxFQUFFO01BQ2pCLElBQUksQ0FBQ0EsTUFBTSxHQUFHLENBQUM7SUFDbkI7SUFDQSxJQUFJLElBQUksQ0FBQ0EsTUFBTSxLQUFLLENBQUMsRUFBRTtNQUNuQixJQUFJLENBQUNLLEtBQUssR0FBRyxLQUFLO0lBQ3RCO0VBQ0o7QUFDSjtBQUVBZSxNQUFNLENBQUNDLE9BQU8sR0FBR3hCLElBQUkifQ==\n//# sourceURL=webpack-internal:///./src/unit.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9XYXJmYXJlLVRhY3RpY3MtQUEtanMtcHJvamVjdC0vLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/harmony module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.hmd = function(module) {
/******/ 			module = Object.create(module);
/******/ 			if (!module.children) module.children = [];
/******/ 			Object.defineProperty(module, 'exports', {
/******/ 				enumerable: true,
/******/ 				set: function() {
/******/ 					throw new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);
/******/ 				}
/******/ 			});
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;